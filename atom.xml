<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lee</title>
  
  <subtitle>Just open your eyes , you got everything in the world</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://Lee981265.github.io/"/>
  <updated>2018-12-11T12:02:06.019Z</updated>
  <id>http://Lee981265.github.io/</id>
  
  <author>
    <name>Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue路由传参三种基本方式</title>
    <link href="http://Lee981265.github.io/2018/12/11/Vue%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82%E4%B8%89%E7%A7%8D%E5%9F%BA%E6%9C%AC%E6%96%B9%E5%BC%8F/"/>
    <id>http://Lee981265.github.io/2018/12/11/Vue路由传参三种基本方式/</id>
    <published>2018-12-11T11:56:26.000Z</published>
    <updated>2018-12-11T12:02:06.019Z</updated>
    
    <content type="html"><![CDATA[<p>Vue路由传参的三种基本方式<br><a id="more"></a></p><p>现有如下场景，点击父组件的li元素跳转到子组件中，并携带参数，便于子组件获取数据。<br>父组件中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;li v-<span class="keyword">for</span>=<span class="string">"article in articles"</span> @click=<span class="string">"getDescribe(article.id)"</span>&gt;</span><br></pre></td></tr></table></figure><p>methods：</p><h2 id="case1"><a href="#case1" class="headerlink" title="case1"></a>case1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">getDescribe(id) &#123;</span><br><span class="line"><span class="comment">//直接调用$router.push 实现携带参数的跳转</span></span><br><span class="line">  <span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">    path: <span class="string">`/describe/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>case1需要对应路由配置如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> path: <span class="string">'/describe/:id'</span>,</span><br><span class="line"> name: <span class="string">'Describe'</span>,</span><br><span class="line"> component: Describe</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很显然，需要在path中添加/:id来对应 $router.push 中path携带的参数。在子组件中可以使用来获取传递的参数值。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$route.params.id</span><br></pre></td></tr></table></figure></p><h2 id="case2"><a href="#case2" class="headerlink" title="case2"></a>case2</h2><p>父组件中：通过路由属性中的name来确定匹配的路由，通过params来传递参数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">   name: <span class="string">'Describe'</span>,</span><br><span class="line">   params: &#123;</span><br><span class="line">     id: id</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><p> 对应路由配置: 注意这里不能使用:/id来传递参数了，因为父组件中，已经使用params来携带参数了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">'/describe'</span>,</span><br><span class="line">    name: <span class="string">'Describe'</span>,</span><br><span class="line">    component: Describe</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子组件中: 这样来获取参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$route.params.id</span><br></pre></td></tr></table></figure><h2 id="case3"><a href="#case3" class="headerlink" title="case3"></a>case3</h2><p>父组件：使用path来匹配路由，然后通过query来传递参数<br>这种情况下 query传递的参数会显示在url后面?id=？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">      path: <span class="string">'/describe'</span>,</span><br><span class="line">      query: &#123;</span><br><span class="line">        id: id</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>对应路由配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     path: <span class="string">'/describe'</span>,</span><br><span class="line">     name: <span class="string">'Describe'</span>,</span><br><span class="line">     component: Describe</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应子组件: 这样来获取参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$route.query.id</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vue路由传参的三种基本方式&lt;br&gt;
    
    </summary>
    
      <category term="Vue" scheme="http://Lee981265.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="http://Lee981265.github.io/tags/Vue/"/>
    
      <category term="vue-router" scheme="http://Lee981265.github.io/tags/vue-router/"/>
    
  </entry>
  
  <entry>
    <title>Sql语句</title>
    <link href="http://Lee981265.github.io/2018/10/16/Sql%E8%AF%AD%E5%8F%A5/"/>
    <id>http://Lee981265.github.io/2018/10/16/Sql语句/</id>
    <published>2018-10-16T02:46:06.000Z</published>
    <updated>2018-10-29T02:15:11.418Z</updated>
    
    <content type="html"><![CDATA[<p>Sql语句大全<br><a id="more"></a></p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ol><li>说明：创建数据库</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">database</span>-<span class="keyword">name</span></span><br></pre></td></tr></table></figure><ol start="2"><li>说明：删除数据库</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> dbname</span><br></pre></td></tr></table></figure><ol start="3"><li>说明：备份sql server<br>— 创建 备份数据的 device</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="keyword">master</span></span><br><span class="line">EXEC sp_addumpdevice <span class="string">'disk'</span>, <span class="string">'testBack'</span>, <span class="string">'c:\mssql7backup\MyNwind_1.dat'</span></span><br></pre></td></tr></table></figure><p><em>开始 备份</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BACKUP</span> <span class="keyword">DATABASE</span> pubs <span class="keyword">TO</span> testBack</span><br></pre></td></tr></table></figure><ol start="4"><li>说明：创建新表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tabname(col1 type1 [<span class="keyword">not</span> <span class="literal">null</span>] [primary <span class="keyword">key</span>],col2 type2 [<span class="keyword">not</span> <span class="literal">null</span>],..)</span><br></pre></td></tr></table></figure><p><em>根据已有的表创建新表：</em><br>A：<strong><em>create table tab_new like tab_old</em></strong> (使用旧表创建新表)<br>B：<strong><em>create table tab_new as select col1,col2… from tab_old definition only</em></strong></p><ol start="5"><li>说明：删除新表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tabname</span><br></pre></td></tr></table></figure><ol start="6"><li>说明：增加一个列</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Alter</span> <span class="keyword">table</span> tabname <span class="keyword">add</span> <span class="keyword">column</span> <span class="keyword">col</span> <span class="keyword">type</span></span><br></pre></td></tr></table></figure><blockquote><p>注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。</p></blockquote><ol start="7"><li><p>说明：添加主键： <strong><em>Alter table tabname add primary key(col)</em></strong><br>说明：删除主键： <strong><em>Alter table tabname drop primary key(col)</em></strong></p><blockquote></blockquote></li><li><p>说明：创建索引：<strong><em>create [unique] index idxname on tabname(col….)</em></strong><br>删除索引：<strong><em>drop index idxname</em></strong></p><blockquote><p>注：索引是不可更改的，想更改必须删除重新建。</p></blockquote></li><li><p>说明：创建视图：<strong><em>create view viewname as select statement</em></strong><br>删除视图：<strong><em>drop view viewname</em></strong></p><blockquote></blockquote></li><li><p>说明：几个简单的基本的sql语句</p></li></ol><p>选择：<strong><em>select </em> from table1 where 范围*</strong><br>插入：<strong><em>insert into table1(field1,field2) values(value1,value2)</em></strong><br>删除：<strong><em>delete from table1 where 范围</em></strong><br>更新：<strong><em>update table1 set field1=value1 where 范围</em></strong><br>查找：<strong><em>select </em> from table1 where field1 like ’%value1%’*</strong> —like的语法很精妙，查资料!<br>排序：<strong><em>select </em> from table1 order by field1,field2 [desc]*</strong><br>总数：<strong><em>select count as totalcount from table1</em></strong><br>求和：<strong><em>select sum(field1) as sumvalue from table1</em></strong><br>平均：<strong><em>select avg(field1) as avgvalue from table1</em></strong><br>最大：<strong><em>select max(field1) as maxvalue from table1</em></strong><br>最小：<strong><em>select min(field1) as minvalue from table1</em></strong></p><blockquote></blockquote><ol start="11"><li>说明：几个高级查询运算词<br>A： <strong><em>UNION</em></strong> 运算符</li></ol><blockquote><p>UNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION 一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。</p></blockquote><p>B： <strong><em>EXCEPT</em></strong> 运算符</p><blockquote><p>EXCEPT运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。</p></blockquote><p>C： <strong><em>INTERSECT</em></strong> 运算符</p><blockquote><p>INTERSECT运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 ALL随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。</p></blockquote><p><em>注：使用运算词的几个查询结果行必须是一致的。</em></p><ol start="12"><li>说明：使用外连接<br>A、<strong><em>left （outer） join</em></strong>：<br>左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。<br>SQL:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.a, a.b, a.c, b.c, b.d, b.f <span class="keyword">from</span> a <span class="keyword">LEFT</span> <span class="keyword">OUT</span> <span class="keyword">JOIN</span> b <span class="keyword">ON</span> a.a = b.c</span><br></pre></td></tr></table></figure></li></ol><p>B：<strong><em>right （outer） join</em></strong>:</p><blockquote><p>右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。</p></blockquote><p>C：<strong><em>full/cross （outer） join</em></strong>：</p><blockquote><p>全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。</p></blockquote><p>12、分组:<strong><em>Group by</em></strong>:</p><blockquote><p>一张表，一旦分组 完成后，查询后只能得到组相关的信息。<br>    组相关的信息：（统计信息） <strong><em>count,sum,max,min,avg</em></strong>  分组的标准)<br>    在SQLServer中分组时：不能以 <strong><em>text,ntext,image</em></strong> 类型的字段作为分组依据<br>   在selecte统计函数中的字段，不能和普通的字段放在一起；</p></blockquote><p>13、对数据库进行操作：</p><blockquote><p>分离数据库： <strong><em>sp_detach_db</em></strong>;<br>   附加数据库：<strong><em>sp_attach_db</em></strong> 后接表明，附加需要完整的路径名</p></blockquote><p>14.如何修改数据库的名称:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp_renamedb 'old_name', 'new_name'</span><br></pre></td></tr></table></figure><h2 id="提升"><a href="#提升" class="headerlink" title="提升"></a>提升</h2><ol><li>说明：复制表(只复制结构,源表名：a 新表名：b) (Access可用)</li></ol><blockquote><p>法一：<strong><em>select </em> into b from a where 1&lt;&gt;1*</strong>（仅用于SQlServer）<br>法二：<strong><em>select top 0 </em> into b from a*</strong></p></blockquote><ol start="2"><li>说明：拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> b(a, b, c) <span class="keyword">select</span> d,e,f <span class="keyword">from</span> b;</span><br></pre></td></tr></table></figure><ol start="3"><li>说明：跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> b(a, b, c) <span class="keyword">select</span> d,e,f <span class="keyword">from</span> b <span class="keyword">in</span> ‘具体数据库’ <span class="keyword">where</span> 条件</span><br></pre></td></tr></table></figure><blockquote><p>例子： <strong><em>..from b in ‘“&amp;Server.MapPath(“.”)&amp;”\data.mdb” &amp;”‘ where..</em></strong></p></blockquote><ol start="4"><li>说明：子查询(表名1：a 表名2：b)</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a,b,c <span class="keyword">from</span> a <span class="keyword">where</span> a <span class="keyword">IN</span> (<span class="keyword">select</span> d <span class="keyword">from</span> b ) 或者: <span class="keyword">select</span> a,b,c <span class="keyword">from</span> a <span class="keyword">where</span> a <span class="keyword">IN</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><ol start="5"><li>说明：显示文章、提交人和最后回复时间</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.title,a.username,b.adddate <span class="keyword">from</span> <span class="keyword">table</span> a,(<span class="keyword">select</span> <span class="keyword">max</span>(adddate) adddate <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> table.title=a.title) b</span><br></pre></td></tr></table></figure><ol start="6"><li>说明：外连接查询(表名1：a 表名2：b)</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.a, a.b, a.c, b.c, b.d, b.f <span class="keyword">from</span> a <span class="keyword">LEFT</span> <span class="keyword">OUT</span> <span class="keyword">JOIN</span> b <span class="keyword">ON</span> a.a = b.c</span><br></pre></td></tr></table></figure><ol start="7"><li>说明：在线视图查询(表名1：a )</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">SELECT</span> a,b,c <span class="keyword">FROM</span> a) T <span class="keyword">where</span> t.a &gt; <span class="number">1</span>;</span><br></pre></td></tr></table></figure><ol start="8"><li>说明：<strong><em>between</em></strong> 的用法,<strong><em>between</em></strong> 限制查询数据范围时包括了边界值,<strong><em>not between</em></strong> 不包括</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="keyword">time</span> <span class="keyword">between</span> time1 <span class="keyword">and</span> time2</span><br><span class="line"><span class="keyword">select</span> a,b,c, <span class="keyword">from</span> table1 <span class="keyword">where</span> a <span class="keyword">not</span> <span class="keyword">between</span> 数值<span class="number">1</span> <span class="keyword">and</span> 数值<span class="number">2</span></span><br></pre></td></tr></table></figure><ol start="9"><li>说明：<strong><em>in</em></strong> 的使用方法</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table1 <span class="keyword">where</span> a [<span class="keyword">not</span>] <span class="keyword">in</span> (‘值<span class="number">1</span>’,’值<span class="number">2</span>’,’值<span class="number">4</span>’,’值<span class="number">6</span>’)</span><br></pre></td></tr></table></figure><ol start="10"><li>说明：两张关联表，删除主表中已经在副表中没有的信息</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> ( <span class="keyword">select</span> * <span class="keyword">from</span> table2 <span class="keyword">where</span> table1.field1=table2.field1 )</span><br></pre></td></tr></table></figure><ol start="11"><li>说明：四表联查问题：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> a <span class="keyword">left</span> <span class="keyword">inner</span> <span class="keyword">join</span> b <span class="keyword">on</span> a.a=b.b <span class="keyword">right</span> <span class="keyword">inner</span> <span class="keyword">join</span> c <span class="keyword">on</span> a.a=c.c <span class="keyword">inner</span> <span class="keyword">join</span> d <span class="keyword">on</span> a.a=d.d <span class="keyword">where</span> .....</span><br></pre></td></tr></table></figure><ol start="12"><li><p>说明：日程安排提前五分钟提醒<br>SQL:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 日程安排 <span class="keyword">where</span> <span class="keyword">datediff</span>(<span class="string">'minute'</span>,f开始时间,<span class="keyword">getdate</span>())&gt;<span class="number">5</span></span><br></pre></td></tr></table></figure></li><li><p>说明：一条sql 语句搞定数据库分页</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">10</span> b.* <span class="keyword">from</span> (<span class="keyword">select</span> top <span class="number">20</span> 主键字段,排序字段 <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 排序字段 <span class="keyword">desc</span>) a,表名 b <span class="keyword">where</span> b.主键字段 = a.主键字段 <span class="keyword">order</span> <span class="keyword">by</span> a.排序字段</span><br></pre></td></tr></table></figure><p>具体实现：<br>关于数据库分页：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> @<span class="keyword">start</span> <span class="built_in">int</span>,@<span class="keyword">end</span> <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">sql</span>  <span class="keyword">nvarchar</span>(<span class="number">600</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> @<span class="keyword">sql</span>=’<span class="keyword">select</span> top’+<span class="keyword">str</span>(@<span class="keyword">end</span>-@<span class="keyword">start</span>+<span class="number">1</span>)+’+<span class="keyword">from</span> T <span class="keyword">where</span> rid <span class="keyword">not</span> <span class="keyword">in</span>(<span class="keyword">select</span> top’+<span class="keyword">str</span>(@<span class="keyword">str</span><span class="number">-1</span>)+’Rid <span class="keyword">from</span> T <span class="keyword">where</span> Rid&gt;<span class="number">-1</span>)’</span><br><span class="line"></span><br><span class="line">exec sp_executesql @<span class="keyword">sql</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：在top后不能直接跟一个变量，所以在实际应用中只有这样的进行特殊的处理。Rid为一个标识列，如果top后还有具体的字段，这样做是非常有好处的。因为这样可以避免 top的字段如果是逻辑索引的，查询的结果后实际表中的不一致（逻辑索引中的数据有可能和数据表中的不一致，而查询时如果处在索引则首先查询索引）</p></blockquote><ol start="14"><li>说明：前10条记录</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">10</span> * <span class="keyword">form</span> table1 <span class="keyword">where</span> 范围</span><br></pre></td></tr></table></figure><ol start="15"><li><p>说明：选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a,b,c <span class="keyword">from</span> tablename ta <span class="keyword">where</span> a=(<span class="keyword">select</span> <span class="keyword">max</span>(a) <span class="keyword">from</span> tablename tb <span class="keyword">where</span> tb.b=ta.b)</span><br></pre></td></tr></table></figure></li><li><p>说明：包括所有在 TableA中但不在 TableB和TableC中的行并消除所有重复行而派生出一个结果表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> a <span class="keyword">from</span> tableA ) <span class="keyword">except</span> (<span class="keyword">select</span> a <span class="keyword">from</span> tableB) <span class="keyword">except</span> (<span class="keyword">select</span> a <span class="keyword">from</span> tableC)</span><br></pre></td></tr></table></figure></li><li><p>说明：随机取出10条数据</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">10</span> * <span class="keyword">from</span> tablename <span class="keyword">order</span> <span class="keyword">by</span> newid()</span><br></pre></td></tr></table></figure><ol start="18"><li>说明：随机选择记录</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> newid()</span><br></pre></td></tr></table></figure><ol start="19"><li><p>说明：删除重复记录<br>1.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tablename <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">max</span>(<span class="keyword">id</span>) <span class="keyword">from</span> tablename <span class="keyword">group</span> <span class="keyword">by</span> col1,col2,...)</span><br></pre></td></tr></table></figure><p>2.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> * <span class="keyword">into</span> temp <span class="keyword">from</span> tablename</span><br><span class="line">  <span class="keyword">delete</span> <span class="keyword">from</span> tablename</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> tablename <span class="keyword">select</span> * <span class="keyword">from</span> temp</span><br></pre></td></tr></table></figure><blockquote><p>评价： 这种操作牵连大量的数据的移动，这种做法不适合大容量但数据操作</p></blockquote><ol start="3"><li>例如：在一个外部表中导入数据，由于某些原因第一次只导入了一部分，但很难判断具体位置，这样只有在下一次全部导入，这样也就产生好多重复的字段，怎样删除重复字段<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>添加一个自增列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add  column_b int identity(1,1)</span><br><span class="line"> <span class="keyword">delete</span> <span class="keyword">from</span> tablename <span class="keyword">where</span> column_b <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(column_b)  <span class="keyword">from</span> tablename <span class="keyword">group</span> <span class="keyword">by</span> column1,column2,...)</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">drop</span> <span class="keyword">column</span> column_b</span><br></pre></td></tr></table></figure></blockquote></li><li><p>说明：列出数据库里所有的表名</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">type</span>=<span class="string">'U'</span> // U代表用户</span><br></pre></td></tr></table></figure><ol start="21"><li>说明：列出表里的所有的列名</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> syscolumns <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">'TableName'</span>)</span><br></pre></td></tr></table></figure><ol start="22"><li>说明：列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">type</span>,<span class="keyword">sum</span>(<span class="keyword">case</span> vender <span class="keyword">when</span> <span class="string">'A'</span> <span class="keyword">then</span> pcs <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),<span class="keyword">sum</span>(<span class="keyword">case</span> vender <span class="keyword">when</span> <span class="string">'C'</span> <span class="keyword">then</span> pcs <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),<span class="keyword">sum</span>(<span class="keyword">case</span> vender <span class="keyword">when</span> <span class="string">'B'</span> <span class="keyword">then</span> pcs <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">FROM</span> tablename <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">type</span></span><br></pre></td></tr></table></figure><p>显示结果：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">type vender pcs</span><br><span class="line">电脑 A 1</span><br><span class="line">电脑 A 1</span><br><span class="line">光盘 B 2</span><br><span class="line">光盘 A 2</span><br><span class="line">手机 B 3</span><br><span class="line">手机 C 3</span><br></pre></td></tr></table></figure></p><ol start="23"><li>说明：初始化表table1</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> table1</span><br></pre></td></tr></table></figure><ol start="24"><li>说明：选择从10到15的记录</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">5</span> * <span class="keyword">from</span> (<span class="keyword">select</span> top <span class="number">15</span> * <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">asc</span>) table_别名 <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><ol><li>1=1，1=2的使用，在SQL语句组合时用的较多</li></ol><blockquote><p>“where 1=1” 是表示选择全部    “where 1=2”全部不选，</p></blockquote><p>如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if @strWhere !=''</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">set</span> @strSQL = <span class="string">'select count(*) as Total from ['</span> + @tblName + <span class="string">'] where '</span> + @strWhere</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">set</span> @strSQL = <span class="string">'select count(*) as Total from ['</span> + @tblName + <span class="string">']'</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>我们可以直接写成</p><p>错误！未找到目录项。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @strSQL = <span class="string">'select count(*) as Total from ['</span> + @tblName + <span class="string">'] where 1=1 安定 '</span>+ @strWhere <span class="number">2</span>、收缩数据库</span><br></pre></td></tr></table></figure><ul><li><p>重建索引</p><p><strong><em>DBCC REINDEX<br>DBCC INDEXDEFRAG</em></strong></p></li><li><p>收缩数据和日志</p></li></ul><p><strong><em>DBCC SHRINKDB<br>DBCC SHRINKFILE</em></strong></p><ol start="3"><li>压缩数据库</li></ol><p><strong><em>dbcc shrinkdatabase(dbname)</em></strong></p><ol start="4"><li>转移数据库给新用户以已存在用户权限</li></ol><p><strong><em>exec sp_change_users_login ‘update_one’,’newname’,’oldname’<br>go</em></strong></p><ol start="5"><li>检查备份集</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RESTORE</span> VERIFYONLY <span class="keyword">from</span> disk=<span class="string">'E:\dvbbs.bak'</span></span><br></pre></td></tr></table></figure><ol start="6"><li>修复数据库</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> [dvbbs] <span class="keyword">SET</span> SINGLE_USER</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line">DBCC CHECKDB(<span class="string">'dvbbs'</span>,repair_allow_data_loss) <span class="keyword">WITH</span> TABLOCK</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> [dvbbs] <span class="keyword">SET</span> MULTI_USER</span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><ol start="7"><li>日志清除</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> NOCOUNT <span class="keyword">ON</span></span><br><span class="line"><span class="keyword">DECLARE</span> @LogicalFileName sysname,</span><br><span class="line"> @MaxMinutes <span class="built_in">INT</span>,</span><br><span class="line"> @NewSize <span class="built_in">INT</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">USE</span> tablename <span class="comment">-- 要操作的数据库名</span></span><br><span class="line"><span class="keyword">SELECT</span>  @LogicalFileName = <span class="string">'tablename_log'</span>, <span class="comment">-- 日志文件名</span></span><br><span class="line">@MaxMinutes = <span class="number">10</span>, <span class="comment">-- Limit on time allowed to wrap log.</span></span><br><span class="line"> @NewSize = <span class="number">1</span>  <span class="comment">-- 你想设定的日志文件的大小(M)</span></span><br><span class="line"></span><br><span class="line">Setup / initialize</span><br><span class="line"><span class="keyword">DECLARE</span> @OriginalSize <span class="built_in">int</span></span><br><span class="line"><span class="keyword">SELECT</span> @OriginalSize = <span class="keyword">size</span></span><br><span class="line"> <span class="keyword">FROM</span> sysfiles</span><br><span class="line"> <span class="keyword">WHERE</span> <span class="keyword">name</span> = @LogicalFileName</span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'Original Size of '</span> + db_name() + <span class="string">' LOG is '</span> +</span><br><span class="line"> <span class="keyword">CONVERT</span>(<span class="built_in">VARCHAR</span>(<span class="number">30</span>),@OriginalSize) + <span class="string">' 8K pages or '</span> +</span><br><span class="line"> <span class="keyword">CONVERT</span>(<span class="built_in">VARCHAR</span>(<span class="number">30</span>),(@OriginalSize*<span class="number">8</span>/<span class="number">1024</span>)) + <span class="string">'MB'</span></span><br><span class="line"> <span class="keyword">FROM</span> sysfiles</span><br><span class="line"> <span class="keyword">WHERE</span> <span class="keyword">name</span> = @LogicalFileName</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> DummyTrans</span><br><span class="line"> (DummyColumn <span class="built_in">char</span> (<span class="number">8000</span>) <span class="keyword">not</span> <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> @Counter    <span class="built_in">INT</span>,</span><br><span class="line"> @StartTime DATETIME,</span><br><span class="line"> @TruncLog   <span class="built_in">VARCHAR</span>(<span class="number">255</span>)</span><br><span class="line"><span class="keyword">SELECT</span> @StartTime = <span class="keyword">GETDATE</span>(),</span><br><span class="line"> @TruncLog = <span class="string">'BACKUP LOG '</span> + db_name() + <span class="string">' WITH TRUNCATE_ONLY'</span></span><br><span class="line"></span><br><span class="line">DBCC SHRINKFILE (@LogicalFileName, @NewSize)</span><br><span class="line">EXEC (@TruncLog)</span><br><span class="line"><span class="comment">-- Wrap the log if necessary.</span></span><br><span class="line"><span class="keyword">WHILE</span> @MaxMinutes &gt; <span class="keyword">DATEDIFF</span> (mi, @StartTime, <span class="keyword">GETDATE</span>()) <span class="comment">-- time has not expired</span></span><br><span class="line"> <span class="keyword">AND</span> @OriginalSize = (<span class="keyword">SELECT</span> <span class="keyword">size</span> <span class="keyword">FROM</span> sysfiles <span class="keyword">WHERE</span> <span class="keyword">name</span> = @LogicalFileName)  </span><br><span class="line"> <span class="keyword">AND</span> (@OriginalSize * <span class="number">8</span> /<span class="number">1024</span>) &gt; @NewSize  </span><br><span class="line"> <span class="keyword">BEGIN</span> <span class="comment">-- Outer loop.</span></span><br><span class="line"><span class="keyword">SELECT</span> @Counter = <span class="number">0</span></span><br><span class="line"> <span class="keyword">WHILE</span>   ((@Counter &lt; @OriginalSize / <span class="number">16</span>) <span class="keyword">AND</span> (@Counter &lt; <span class="number">50000</span>))</span><br><span class="line"> <span class="keyword">BEGIN</span> <span class="comment">-- update</span></span><br><span class="line"> <span class="keyword">INSERT</span> DummyTrans <span class="keyword">VALUES</span> (<span class="string">'Fill Log'</span>) <span class="keyword">DELETE</span> DummyTrans</span><br><span class="line"> <span class="keyword">SELECT</span> @Counter = @Counter + <span class="number">1</span></span><br><span class="line"> <span class="keyword">END</span></span><br><span class="line"> EXEC (@TruncLog)  </span><br><span class="line"> <span class="keyword">END</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'Final Size of '</span> + db_name() + <span class="string">' LOG is '</span> +</span><br><span class="line"> <span class="keyword">CONVERT</span>(<span class="built_in">VARCHAR</span>(<span class="number">30</span>),<span class="keyword">size</span>) + <span class="string">' 8K pages or '</span> +</span><br><span class="line"> <span class="keyword">CONVERT</span>(<span class="built_in">VARCHAR</span>(<span class="number">30</span>),(<span class="keyword">size</span>*<span class="number">8</span>/<span class="number">1024</span>)) + <span class="string">'MB'</span></span><br><span class="line"> <span class="keyword">FROM</span> sysfiles</span><br><span class="line"> <span class="keyword">WHERE</span> <span class="keyword">name</span> = @LogicalFileName</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> DummyTrans</span><br><span class="line"><span class="keyword">SET</span> NOCOUNT <span class="keyword">OFF</span></span><br></pre></td></tr></table></figure><ol start="8"><li>说明：更改某个表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec sp_changeobjectowner 'tablename','dbo'</span><br></pre></td></tr></table></figure><ol start="9"><li>存储更改全部表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> dbo.User_ChangeObjectOwnerBatch</span><br><span class="line">@OldOwner <span class="keyword">as</span> <span class="keyword">NVARCHAR</span>(<span class="number">128</span>),</span><br><span class="line">@NewOwner <span class="keyword">as</span> <span class="keyword">NVARCHAR</span>(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">Name</span>    <span class="keyword">as</span> <span class="keyword">NVARCHAR</span>(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> @Owner   <span class="keyword">as</span> <span class="keyword">NVARCHAR</span>(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> @OwnerName   <span class="keyword">as</span> <span class="keyword">NVARCHAR</span>(<span class="number">128</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> curObject <span class="keyword">CURSOR</span> <span class="keyword">FOR</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">'Name'</span>    = <span class="keyword">name</span>,</span><br><span class="line">   <span class="string">'Owner'</span>    = user_name(uid)</span><br><span class="line"><span class="keyword">from</span> sysobjects</span><br><span class="line"><span class="keyword">where</span> user_name(uid)=@OldOwner</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">OPEN</span>   curObject</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> curObject <span class="keyword">INTO</span> @<span class="keyword">Name</span>, @Owner</span><br><span class="line"><span class="keyword">WHILE</span>(@@FETCH_STATUS=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">BEGIN</span>     </span><br><span class="line"><span class="keyword">if</span> @Owner=@OldOwner</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">   <span class="keyword">set</span> @OwnerName = @OldOwner + <span class="string">'.'</span> + <span class="keyword">rtrim</span>(@<span class="keyword">Name</span>)</span><br><span class="line">   exec sp_changeobjectowner @OwnerName, @NewOwner</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">-- select @name,@NewOwner,@OldOwner</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> curObject <span class="keyword">INTO</span> @<span class="keyword">Name</span>, @Owner</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">close</span> curObject</span><br><span class="line"><span class="keyword">deallocate</span> curObject</span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><ol start="10"><li>SQL SERVER中直接循环写入数据</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> @i <span class="built_in">int</span></span><br><span class="line"><span class="keyword">set</span> @i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> @i&lt;<span class="number">30</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> (userid) <span class="keyword">values</span>(@i)</span><br><span class="line">    <span class="keyword">set</span> @i=@i+<span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>案例：<br>有如下表，要求就裱中所有沒有及格的成績，在每次增長0.1的基礎上，使他們剛好及格:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    Name     score</span><br><span class="line"></span><br><span class="line">    Zhangshan   80</span><br><span class="line"></span><br><span class="line">    Lishi       59</span><br><span class="line"></span><br><span class="line">    Wangwu      50</span><br><span class="line"></span><br><span class="line">    Songquan    69</span><br><span class="line"></span><br><span class="line">while((<span class="keyword">select</span> <span class="keyword">min</span>(score) <span class="keyword">from</span> tb_table)&lt;<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> tb_table <span class="keyword">set</span> score =score*<span class="number">1.01</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> score&lt;<span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>  (<span class="keyword">select</span> <span class="keyword">min</span>(score) <span class="keyword">from</span> tb_table)&gt;<span class="number">60</span></span><br><span class="line"></span><br><span class="line">  break</span><br><span class="line"></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    continue</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="数据开发-经典"><a href="#数据开发-经典" class="headerlink" title="数据开发-经典"></a>数据开发-经典</h2><ol><li>按姓氏笔画排序:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">From</span> TableName <span class="keyword">Order</span> <span class="keyword">By</span> CustomerName <span class="keyword">Collate</span> Chinese_PRC_Stroke_ci_as //从少到多</span><br></pre></td></tr></table></figure><ol start="2"><li>数据库加密:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">encrypt</span>(<span class="string">'原始密码'</span>)</span><br><span class="line"><span class="keyword">select</span> pwdencrypt(<span class="string">'原始密码'</span>)</span><br><span class="line"><span class="keyword">select</span> pwdcompare(<span class="string">'原始密码'</span>,<span class="string">'加密后密码'</span>) = <span class="number">1</span><span class="comment">--相同；否则不相同 encrypt('原始密码')</span></span><br><span class="line"><span class="keyword">select</span> pwdencrypt(<span class="string">'原始密码'</span>)</span><br><span class="line"><span class="keyword">select</span> pwdcompare(<span class="string">'原始密码'</span>,<span class="string">'加密后密码'</span>) = <span class="number">1</span><span class="comment">--相同；否则不相同</span></span><br></pre></td></tr></table></figure><ol start="3"><li>取回表中字段:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> @<span class="keyword">list</span> <span class="built_in">varchar</span>(<span class="number">1000</span>),</span><br><span class="line">@<span class="keyword">sql</span> <span class="keyword">nvarchar</span>(<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">select</span> @<span class="keyword">list</span>=@<span class="keyword">list</span>+<span class="string">','</span>+b.name <span class="keyword">from</span> sysobjects a,syscolumns b <span class="keyword">where</span> a.id=b.id <span class="keyword">and</span> a.name=<span class="string">'表A'</span></span><br><span class="line"><span class="keyword">set</span> @<span class="keyword">sql</span>=<span class="string">'select '</span>+<span class="keyword">right</span>(@<span class="keyword">list</span>,<span class="keyword">len</span>(@<span class="keyword">list</span>)<span class="number">-1</span>)+<span class="string">' from 表A'</span></span><br><span class="line">exec (@<span class="keyword">sql</span>)</span><br></pre></td></tr></table></figure><p>4.查看硬盘分区:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC master..xp_fixeddrives</span><br></pre></td></tr></table></figure><ol start="5"><li>比较A,B表是否相等:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if (<span class="keyword">select</span> <span class="keyword">checksum_agg</span>(binary_checksum(*)) <span class="keyword">from</span> A)</span><br><span class="line">     =</span><br><span class="line">    (<span class="keyword">select</span> <span class="keyword">checksum_agg</span>(binary_checksum(*)) <span class="keyword">from</span> B)</span><br><span class="line">print <span class="string">'相等'</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">print <span class="string">'不相等'</span></span><br></pre></td></tr></table></figure><ol start="6"><li>杀掉所有的事件探察器进程:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> hcforeach <span class="keyword">CURSOR</span> <span class="keyword">GLOBAL</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> <span class="string">'kill '</span>+<span class="keyword">RTRIM</span>(spid) <span class="keyword">FROM</span> master.dbo.sysprocesses</span><br><span class="line"><span class="keyword">WHERE</span> program_name <span class="keyword">IN</span>(<span class="string">'SQL profiler'</span>,N<span class="string">'SQL 事件探查器'</span>)</span><br><span class="line">EXEC sp_msforeach_worker <span class="string">'?'</span></span><br></pre></td></tr></table></figure><ol start="7"><li>记录搜索:<blockquote><p>开头到N条记录</p></blockquote></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> Top N * <span class="keyword">From</span> 表</span><br></pre></td></tr></table></figure><hr><blockquote><p>N到M条记录(要有主索引ID)</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> Top M-N * <span class="keyword">From</span> 表 <span class="keyword">Where</span> <span class="keyword">ID</span> <span class="keyword">in</span> (<span class="keyword">Select</span> Top M <span class="keyword">ID</span> <span class="keyword">From</span> 表) <span class="keyword">Order</span> <span class="keyword">by</span> <span class="keyword">ID</span>   <span class="keyword">Desc</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>N到结尾记录</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> Top N * <span class="keyword">From</span> 表 <span class="keyword">Order</span> <span class="keyword">by</span> <span class="keyword">ID</span> <span class="keyword">Desc</span></span><br></pre></td></tr></table></figure><p>案例<br>例如1：一张表有一万多条记录，表的第一个字段 RecID 是自增长字段， 写一个SQL语句， 找出表的第31到第40个记录。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">10</span> recid <span class="keyword">from</span> A <span class="keyword">where</span> recid <span class="keyword">not</span>  <span class="keyword">in</span>(<span class="keyword">select</span> top <span class="number">30</span> recid <span class="keyword">from</span> A)</span><br></pre></td></tr></table></figure><blockquote><p>分析：如果这样写会产生某些问题，如果recid在表中存在逻辑索引。<br>select top 10 recid from A where……是从索引中查找，而后面的select top 30 recid from A则在数据表中查找，这样由于索引中的顺序有可能和数据表中的不一致，这样就导致查询到的不是本来的欲得到的数据。</p></blockquote><p>解决方案</p><ol><li><p>用order by select top 30 recid from A order by ricid 如果该字段不是自增长，就会出现问题</p></li><li><p>在那个子查询中也加条件：select top 30 recid from A where recid&gt;-1</p></li></ol><p>例2：查询表中的最后以条记录，并不知道这个表共有多少数据,以及表结构。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @s = <span class="string">'select top 1 * from T   where pid not in (select top '</span> + <span class="keyword">str</span>(@<span class="keyword">count</span><span class="number">-1</span>) + <span class="string">' pid  from  T)'</span></span><br><span class="line"></span><br><span class="line">print @s      exec  sp_executesql  @s</span><br></pre></td></tr></table></figure><ol start="9"><li><p>获取当前数据库中的所有用户表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">Name</span> <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype=<span class="string">'u'</span> <span class="keyword">and</span> <span class="keyword">status</span>&gt;=<span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>获取某一个表的所有字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> syscolumns <span class="keyword">where</span> <span class="keyword">id</span>=object_id(<span class="string">'表名'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> syscolumns <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">type</span> = <span class="string">'u'</span> <span class="keyword">and</span> <span class="keyword">name</span> = <span class="string">'表名'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">两种方式的效果相同</span><br></pre></td></tr></table></figure></li><li><p>查看与某一个表相关的视图、存储过程、函数</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.* <span class="keyword">from</span> sysobjects a, syscomments b <span class="keyword">where</span> a.id = b.id <span class="keyword">and</span> b.text <span class="keyword">like</span> <span class="string">'%表名%'</span></span><br></pre></td></tr></table></figure><ol start="12"><li>查看当前数据库中所有存储过程</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">as</span> 存储过程名称 <span class="keyword">from</span> sysobjects <span class="keyword">where</span> xtype=<span class="string">'P'</span></span><br></pre></td></tr></table></figure><ol start="13"><li>查询用户创建的所有数据库</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> master..sysdatabases D <span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">not</span> <span class="keyword">in</span>(<span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> master..syslogins <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'sa'</span>)</span><br><span class="line">或者</span><br><span class="line"><span class="keyword">select</span> dbid, <span class="keyword">name</span> <span class="keyword">AS</span> DB_NAME <span class="keyword">from</span> master..sysdatabases <span class="keyword">where</span> <span class="keyword">sid</span> &lt;&gt; <span class="number">0x01</span></span><br></pre></td></tr></table></figure><ol start="14"><li>查询某一个表的字段和数据类型</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name,data_type <span class="keyword">from</span> information_schema.columns</span><br><span class="line"><span class="keyword">where</span> table_name = <span class="string">'表名'</span></span><br></pre></td></tr></table></figure><ol start="15"><li><p>不同服务器数据库之间的数据操作</p><ol><li>创建链接服务器</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exec sp_addlinkedserver   'ITSV ', ' ', 'SQLOLEDB ', '远程服务器名或ip地址 '</span><br><span class="line"></span><br><span class="line">exec sp_addlinkedsrvlogin  'ITSV ', 'false ',null, '用户名 ', '密码 '</span><br></pre></td></tr></table></figure><ol start="2"><li>查询示例</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> ITSV.数据库名.dbo.表名</span><br></pre></td></tr></table></figure><ol start="3"><li>导入示例</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">into</span> 表 <span class="keyword">from</span> ITSV.数据库名.dbo.表名</span><br></pre></td></tr></table></figure><ol start="4"><li>以后不再使用时删除链接服务器</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec sp_dropserver  'ITSV ', 'droplogins '</span><br></pre></td></tr></table></figure><ol start="5"><li><p>连接远程/局域网数据(openrowset/openquery/opendatasource)</p><ol><li>openrowset</li></ol><ul><li><p>查询示例</p><blockquote><p>select * from openrowset( ‘SQLOLEDB ‘, ‘sql服务器名 ‘; ‘用户名 ‘; ‘密码 ‘,数据库名.dbo.表名)</p></blockquote></li><li><p>生成本地表</p><blockquote><p>select * into 表 from openrowset( ‘SQLOLEDB ‘, ‘sql服务器名 ‘; ‘用户名 ‘; ‘密码 ‘,数据库名.dbo.表名)</p></blockquote></li></ul></li></ol></li></ol><pre><code>  2. 把本地表导入远程表  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> openrowset( <span class="string">'SQLOLEDB '</span>, <span class="string">'sql服务器名 '</span>; '用户名 '; '密码 ',数据库名.dbo.表名)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> 本地表</span><br></pre></td></tr></table></figure>  3. 更新本地表  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> b</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> b.列A=a.列A</span><br><span class="line"></span><br><span class="line"> <span class="keyword">from</span> openrowset( <span class="string">'SQLOLEDB '</span>, <span class="string">'sql服务器名 '</span>; '用户名 '; '密码 ',数据库名.dbo.表名)as a inner join 本地表 b</span><br><span class="line"></span><br><span class="line">on a.column1=b.column1</span><br></pre></td></tr></table></figure>  4. openquery用法需要创建一个连接      &gt;首先创建一个连接创建链接服务器      exec sp_addlinkedserver   &apos;ITSV &apos;, &apos; &apos;, &apos;SQLOLEDB &apos;, &apos;远程服务器名或ip地址 &apos;  5. 查询  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> openquery(ITSV,  <span class="string">'SELECT *  FROM 数据库.dbo.表名 '</span>)</span><br></pre></td></tr></table></figure>  6. 把本地表导入远程表  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> openquery(ITSV,  <span class="string">'SELECT *  FROM 数据库.dbo.表名 '</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 本地表</span><br></pre></td></tr></table></figure>  7. 更新本地表  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> b</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> b.列B=a.列B</span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> openquery(ITSV,  <span class="string">'SELECT * FROM 数据库.dbo.表名 '</span>) <span class="keyword">as</span> a</span><br><span class="line"></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> 本地表 b <span class="keyword">on</span> a.列A=b.列A</span><br></pre></td></tr></table></figure>  8. opendatasource/openrowset  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>   *</span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span>   opendatasource( <span class="string">'SQLOLEDB '</span>,  <span class="string">'Data Source=ip/ServerName;User ID=登陆名;Password=密码 '</span> ).test.dbo.roy_ta</span><br></pre></td></tr></table></figure>9. 把本地表导入远程表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> opendatasource( <span class="string">'SQLOLEDB '</span>,  <span class="string">'Data Source=ip/ServerName;User ID=登陆名;Password=密码 '</span>).数据库.dbo.表名</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 本地表</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span> <span class="keyword">Server</span>基本函数</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span> <span class="keyword">Server</span>基本函数</span><br></pre></td></tr></table></figure></code></pre><ol start="16"><li><p>字符串函数 长度与分析用</p><ol><li><p>datalength(Char_expr) 返回字符串包含字符数,但不包含后面的空格</p></li><li><p>substring(expression,start,length) 取子串，字符串的下标是从“1”，start为起始位置，length为字符串长度，实际应用中以len(expression)取得其长度</p></li><li><p>right(char_expr,int_expr) 返回字符串右边第int_expr个字符，还用left于之相反</p></li><li><p>isnull( check_expression , replacement_value )如果check_expression為空，則返回replacement_value的值，不為空，就返回check_expression字符操作类</p></li><li><p>Sp_addtype自定義數據類型<br>例如. EXEC sp_addtype birthday, datetime, ‘NULL’</p></li><li><p>set nocount {on|off}<br>使返回的结果中不包含有关受 Transact-SQL 语句影响的行数的信息。如果存储过程中包含的一些语句并不返回许多实际的数据，则该设置由于大量减少了网络流量，因此可显著提高性能。SET NOCOUNT 设置是在执行或运行时设置，而不是在分析时设置。SET NOCOUNT 为 ON 时，不返回计数（表示受 Transact-SQL 语句影响的行数）。</p></li></ol></li></ol><ol start="17"><li>SET NOCOUNT<br>为 OFF 时，返回计数</li></ol><p>常识</p><blockquote><p>在SQL查询中：from后最多可以跟多少张表或视图：256在SQL语句中出现 Order by,查询时，先排序，后取在SQL中，一个字段的最大容量是8000，而对于nvarchar(4000),由于nvarchar是Unicode码。</p></blockquote><ol start="18"><li>SQLServer2000<br>同步复制技术实现步骤</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">一、 预备工作</span><br><span class="line">1.发布服务器,订阅服务器都创建一个同名的windows用户,并设置相同的密码,做为发布快照文件夹的有效访问用户--管理工具--计算机管理--用户和组--右键用户--新建用户--建立一个隶属于administrator组的登陆windows的用户（SynUser）2.在发布服务器上,新建一个共享目录,做为发布的快照文件的存放目录,操作:</span><br><span class="line"></span><br><span class="line">我的电脑--D:\ 新建一个目录,名为: PUB</span><br><span class="line">--右键这个新建的目录--属性--共享--选择&quot;共享该文件夹&quot;--通过&quot;权限&quot;按纽来设置具体的用户权限,保证第一步中创建的用户(SynUser) 具有对该文件夹的所有权限</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--确定3.设置SQL代理(SQLSERVERAGENT)服务的启动用户(发布/订阅服务器均做此设置)</span><br><span class="line"></span><br><span class="line">开始--程序--管理工具--服务</span><br><span class="line">--右键SQLSERVERAGENT--属性--登陆--选择&quot;此账户&quot;--输入或者选择第一步中创建的windows登录用户名（SynUser）--&quot;密码&quot;中输入该用户的密码4.设置SQL Server身份验证模式,解决连接时的权限问题(发布/订阅服务器均做此设置)</span><br><span class="line"></span><br><span class="line">企业管理器</span><br><span class="line">--右键SQL实例--属性--安全性--身份验证--选择&quot;SQL Server 和 Windows&quot;--确定5.在发布服务器和订阅服务器上互相注册</span><br><span class="line"></span><br><span class="line">企业管理器</span><br><span class="line">--右键SQL Server组--新建SQL Server注册...--下一步--可用的服务器中,输入你要注册的远程服务器名 --添加--下一步--连接使用,选择第二个&quot;SQL Server身份验证&quot;--下一步--输入用户名和密码（SynUser）--下一步--选择SQL Server组,也可以创建一个新组--下一步--完成6.对于只能用IP,不能用计算机名的,为其注册服务器别名（此步在实施中没用到） (在连接端配置,比如,在订阅服务器上配置的话,服务器名称中输入的是发布服务器的IP)</span><br><span class="line"></span><br><span class="line">开始--程序--Microsoft SQL Server--客户端网络实用工具</span><br><span class="line">--别名--添加--网络库选择&quot;tcp/ip&quot;--服务器别名输入SQL服务器名--连接参数--服务器名称中输入SQL服务器ip地址--如果你修改了SQL的端口,取消选择&quot;动态决定端口&quot;,并输入对应的端口号</span><br><span class="line"></span><br><span class="line">二、 正式配置</span><br><span class="line">1、配置发布服务器</span><br><span class="line"></span><br><span class="line">打开企业管理器，在发布服务器（B、C、D）上执行以下步骤:</span><br><span class="line">(1) 从[工具]下拉菜单的[复制]子菜单中选择[配置发布、订阅服务器和分发]出现配置发布和分发向导(2) [下一步] 选择分发服务器 可以选择把发布服务器自己作为分发服务器或者其他sql的服务器（选择自己）(3) [下一步] 设置快照文件夹</span><br><span class="line"></span><br><span class="line">采用默认\\servername\Pub</span><br><span class="line">(4) [下一步] 自定义配置</span><br><span class="line"></span><br><span class="line">可以选择:是,让我设置分发数据库属性启用发布服务器或设置发布设置</span><br><span class="line">否,使用下列默认设置（推荐）</span><br><span class="line">(5) [下一步] 设置分发数据库名称和位置 采用默认值(6) [下一步] 启用发布服务器 选择作为发布的服务器(7) [下一步] 选择需要发布的数据库和发布类型(8) [下一步] 选择注册订阅服务器(9) [下一步] 完成配置2、创建出版物</span><br><span class="line"></span><br><span class="line">发布服务器B、C、D上</span><br><span class="line">(1)从[工具]菜单的[复制]子菜单中选择[创建和管理发布]命令(2)选择要创建出版物的数据库，然后单击[创建发布](3)在[创建发布向导]的提示对话框中单击[下一步]系统就会弹出一个对话框。对话框上的内容是复制的三个类型。我们现在选第一个也就是默认的快照发布(其他两个大家可以去看看帮助)(4)单击[下一步]系统要求指定可以订阅该发布的数据库服务器类型,SQLSERVER允许在不同的数据库如 orACLE或ACCESS之间进行数据复制。</span><br><span class="line"></span><br><span class="line">但是在这里我们选择运行&quot;SQL SERVER 2000&quot;的数据库服务器</span><br><span class="line">(5)单击[下一步]系统就弹出一个定义文章的对话框也就是选择要出版的表</span><br><span class="line"></span><br><span class="line">注意: 如果前面选择了事务发布 则再这一步中只能选择带有主键的表</span><br><span class="line">(6)选择发布名称和描述(7)自定义发布属性 向导提供的选择:</span><br><span class="line"></span><br><span class="line">是 我将自定义数据筛选,启用匿名订阅和或其他自定义属性</span><br><span class="line">否 根据指定方式创建发布 （建议采用自定义的方式）</span><br><span class="line">(8)[下一步] 选择筛选发布的方式(9)[下一步] 可以选择是否允许匿名订阅1)如果选择署名订阅,则需要在发布服务器上添加订阅服务器</span><br><span class="line"></span><br><span class="line">方法: [工具]-&gt;[复制]-&gt;[配置发布、订阅服务器和分发的属性]-&gt;[订阅服务器] 中添加</span><br><span class="line">否则在订阅服务器上请求订阅时会出现的提示:改发布不允许匿名订阅</span><br><span class="line">如果仍然需要匿名订阅则用以下解决办法</span><br><span class="line">[企业管理器]-&gt;[复制]-&gt;[发布内容]-&gt;[属性]-&gt;[订阅选项] 选择允许匿名请求订阅2)如果选择匿名订阅,则配置订阅服务器时不会出现以上提示(10)[下一步] 设置快照 代理程序调度(11)[下一步] 完成配置</span><br><span class="line"></span><br><span class="line">当完成出版物的创建后创建出版物的数据库也就变成了一个共享数据库</span><br><span class="line">有数据</span><br><span class="line">srv1.库名..author有字段:id,name,phone, srv2.库名..author有字段:id,name,telphone,adress</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">要求：</span><br><span class="line">srv1.库名..author增加记录则srv1.库名..author记录增加srv1.库名..author的phone字段更新，则srv1.库名..author对应字段telphone更新</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">--大致的处理步骤--1.在 srv1 上创建连接服务器,以便在 srv1 中操作 srv2,实现同步exec sp_addlinkedserver &apos;srv2&apos;,&apos;&apos;,&apos;SQLOLEDB&apos;,&apos;srv2的sql实例名或ip&apos; exec sp_addlinkedsrvlogin &apos;srv2&apos;,&apos;false&apos;,null,&apos;用户名&apos;,&apos;密码&apos;</span><br><span class="line"></span><br><span class="line">go</span><br><span class="line">--2.在 srv1 和 srv2 这两台电脑中,启动 msdtc(分布式事务处理服务),并且设置为自动启动</span><br><span class="line"></span><br><span class="line">。我的电脑--控制面板--管理工具--服务--右键 Distributed Transaction Coordinator--属性--启动--并将启动类型设置为自动启动</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--然后创建一个作业定时调用上面的同步处理存储过程就行了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">企业管理器</span><br><span class="line">--管理--SQL Server代理--右键作业--新建作业--&quot;常规&quot;项中输入作业名称--&quot;步骤&quot;项--新建--&quot;步骤名&quot;中输入步骤名--&quot;类型&quot;中选择&quot;Transact-SQL 脚本(TSQL)&quot; --&quot;数据库&quot;选择执行命令的数据库--&quot;命令&quot;中输入要执行的语句: exec p_process --确定--&quot;调度&quot;项--新建调度--&quot;名称&quot;中输入调度名称--&quot;调度类型&quot;中选择你的作业执行安排--如果选择&quot;反复出现&quot; --点&quot;更改&quot;来设置你的时间安排</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后将SQL Agent服务启动,并设置为自动启动,否则你的作业不会被执行</span><br><span class="line"></span><br><span class="line">设置方法:</span><br><span class="line">我的电脑--控制面板--管理工具--服务--右键 SQLSERVERAGENT--属性--启动类型--选择&quot;自动启动&quot;--确定.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--3.实现同步处理的方法2,定时同步</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--在srv1中创建如下的同步处理存储过程</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">create proc p_process</span><br><span class="line">as</span><br></pre></td></tr></table></figure><p>–更新修改过的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> b <span class="keyword">set</span> <span class="keyword">name</span>=i.name,telphone=i.telphone</span><br><span class="line"><span class="keyword">from</span> srv2.库名.dbo.author b,author i</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> b.id=i.id <span class="keyword">and</span></span><br><span class="line">(b.name &lt;&gt; i.name <span class="keyword">or</span> b.telphone &lt;&gt; i.telphone)</span><br></pre></td></tr></table></figure><p>–插入新增的数据insert srv2.库名.dbo.author(id,name,telphone)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>,<span class="keyword">name</span>,telphone <span class="keyword">from</span> author i</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> srv2.库名.dbo.author <span class="keyword">where</span> <span class="keyword">id</span>=i.id)</span><br></pre></td></tr></table></figure><p>–删除已经删除的数据(如果需要的话)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> b</span><br><span class="line"><span class="keyword">from</span> srv2.库名.dbo.author b</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> author <span class="keyword">where</span> <span class="keyword">id</span>=b.id)</span><br><span class="line"><span class="keyword">go</span></span><br></pre></td></tr></table></figure><p><code>`</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sql语句大全&lt;br&gt;
    
    </summary>
    
      <category term="Sql" scheme="http://Lee981265.github.io/categories/Sql/"/>
    
    
      <category term="Sql" scheme="http://Lee981265.github.io/tags/Sql/"/>
    
  </entry>
  
  <entry>
    <title>Python3基础</title>
    <link href="http://Lee981265.github.io/2018/10/03/Python3%E5%9F%BA%E7%A1%80/"/>
    <id>http://Lee981265.github.io/2018/10/03/Python3基础/</id>
    <published>2018-10-02T18:15:41.000Z</published>
    <updated>2018-10-29T02:33:35.479Z</updated>
    
    <content type="html"><![CDATA[<p>前端萌新学习Python之旅，跟随廖雪峰大神的步伐，一天一天的进步！<br><a id="more"></a></p><h2 id="git-bash-构建python-环境"><a href="#git-bash-构建python-环境" class="headerlink" title="git bash 构建python 环境"></a>git bash 构建python 环境</h2><table><thead><tr><th style="text-align:left">python</th><th style="text-align:center">git bush开启python</th></tr></thead><tbody><tr><td style="text-align:left">winpty python</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">python -i</td><td style="text-align:center">-</td></tr><tr><td style="text-align:left">python</td><td style="text-align:center">bash.bashrc追加 alias python=’winpty python ‘</td></tr></tbody></table><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = input(<span class="string">'please your name:'</span>)</span><br><span class="line">print(<span class="string">'hello'</span>,name)</span><br></pre></td></tr></table></figure><h2 id="条件语句-惯例缩进四个空格"><a href="#条件语句-惯例缩进四个空格" class="headerlink" title="条件语句(惯例缩进四个空格)"></a>条件语句(惯例缩进四个空格)</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#缩进4个空格</span></span><br><span class="line">a = <span class="number">100</span></span><br><span class="line"><span class="keyword">if</span> a&gt;=<span class="number">0</span>:</span><br><span class="line">    print(a)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(-a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#不缩进也可</span></span><br><span class="line">b = <span class="number">200</span></span><br><span class="line"><span class="keyword">if</span> b&gt;=<span class="number">0</span>:print(b)</span><br><span class="line"><span class="keyword">else</span>:print(-b)</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><table><thead><tr><th>类型</th><th>表现形式</th><th>注意</th></tr></thead><tbody><tr><td>整数</td><td>100</td><td></td></tr><tr><td>浮点数</td><td>3,14</td><td></td></tr><tr><td>字符串</td><td>‘abc’，”xyz”</td><td>I’m ok</td></tr></tbody></table><h3 id="字符串转义"><a href="#字符串转义" class="headerlink" title="字符串转义"></a>字符串转义</h3><p><strong><em>注意：对于字符串中含有特殊字符的这一点和正则有点像这时候我们要用到转译字符 ‘\‘或者使用双引号在外=&gt;”I’m OK”</em></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'I\'m \"OK\"!'</span></span><br><span class="line"><span class="comment">#I'm "OK"</span></span><br></pre></td></tr></table></figure><blockquote><p>转义字符\可以转义很多字符，比如\n表示换行，\t表示制表符，字符\本身也要转义，所以\表示的字符就是\</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'I\'m ok.'</span>)</span><br><span class="line"><span class="comment">#I'm ok.</span></span><br><span class="line">print(<span class="string">'I\'m learning\nPython.'</span>)</span><br><span class="line"><span class="comment">#I'm learning</span></span><br><span class="line"><span class="comment">#Python.</span></span><br><span class="line">print(<span class="string">'\\\n\\'</span>)</span><br><span class="line"><span class="comment">#\</span></span><br><span class="line"><span class="comment">#\</span></span><br></pre></td></tr></table></figure><blockquote><p>如果字符串里面有很多字符都需要转义，就需要加很多\，为了简化，Python还允许用r’’表示’’内部的字符串默认不转义</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">r'\\有一个姑娘，\她有些任性\\'</span>)</span><br><span class="line"><span class="comment">#这里需要注意无论在哪里使用转译符号‘\’,在字符串开头可以随便用；在字符串末尾不能出现一个单独的‘\’,否则会报错</span></span><br><span class="line"></span><br><span class="line">&gt;SyntaxError: EOL <span class="keyword">while</span> scanning string literal</span><br><span class="line">print(<span class="string">r'\\有一个姑娘，\她有些任性\')</span></span><br></pre></td></tr></table></figure><blockquote><p>如果字符串内部有很多换行，用\n写在一行里不好阅读，为了简化，Python允许用’’’…’’’的格式表示多行内容</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'''</span></span><br><span class="line"><span class="string">line1</span></span><br><span class="line"><span class="string">line2</span></span><br><span class="line"><span class="string">line3</span></span><br><span class="line"><span class="string">'''</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#line1</span></span><br><span class="line"><span class="comment">#line2</span></span><br><span class="line"><span class="comment">#line3</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'''123 123</span></span><br><span class="line"><span class="string">123</span></span><br><span class="line"><span class="string">'''</span>)</span><br><span class="line"><span class="comment">#123 123</span></span><br><span class="line"><span class="comment">#123</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">r'''hello,\n</span></span><br><span class="line"><span class="string">world'''</span>)</span><br><span class="line"><span class="comment">#hello,\n</span></span><br><span class="line"><span class="comment">#world</span></span><br></pre></td></tr></table></figure><h4 id="归纳"><a href="#归纳" class="headerlink" title="归纳"></a>归纳</h4><table><thead><tr><th>符号</th><th>作用</th><th>注意</th></tr></thead><tbody><tr><td>\</td><td>转义特殊字符</td><td>字符串末尾至少加2个</td></tr><tr><td>\n</td><td>表示换行</td><td>在r’’或r’’’ ‘’’内无效</td></tr><tr><td>\t</td><td>表示制表符</td><td>在r’’或r’’’ ‘’’内无效</td></tr><tr><td>r’’</td><td>不转义引号里面的内容</td><td></td></tr><tr><td>‘’’ ‘’’</td><td>多次换行</td><td>书写时多敲几次换行</td></tr></tbody></table><h2 id="变量与布尔值"><a href="#变量与布尔值" class="headerlink" title="变量与布尔值"></a>变量与布尔值</h2><blockquote><p>注意：在python环境中布尔值开头必须大写</p></blockquote><h3 id="布尔值的运算符"><a href="#布尔值的运算符" class="headerlink" title="布尔值的运算符"></a>布尔值的运算符</h3><blockquote><p>运算符有 <strong><em>and</em></strong>,<strong>or</strong>,<strong><em>not</em></strong><br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#and</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">True</span> <span class="keyword">and</span> <span class="keyword">True</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;Fslse <span class="keyword">and</span> <span class="keyword">False</span></span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">True</span> <span class="keyword">and</span> <span class="keyword">False</span></span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#or</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">True</span> <span class="keyword">or</span> <span class="keyword">True</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">False</span> <span class="keyword">or</span> <span class="keyword">False</span></span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">True</span> <span class="keyword">or</span> <span class="keyword">False</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## not</span></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">not</span> <span class="keyword">True</span></span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">not</span> <span class="keyword">False</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="keyword">not</span> <span class="number">1</span>&lt;<span class="number">8</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#条件语句</span></span><br><span class="line"><span class="keyword">if</span> a&gt;=<span class="number">100</span></span><br><span class="line">    print(<span class="string">'大于等于'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'小于'</span>)</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h3><blockquote><p>空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值</p></blockquote><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><blockquote><p>变量规则：变量名必须是大小写英文、数字和_的组合，且不能用数字开头，变量的声明不用像js那样加var ,let,const</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">100</span></span><br><span class="line">b = <span class="string">'lee'</span></span><br><span class="line">c = <span class="keyword">True</span></span><br></pre></td></tr></table></figure><blockquote><p>变量是可以赋值的，且可以多次赋值，后面的覆盖前面的赋值</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10086</span></span><br><span class="line">a = <span class="string">'你好'</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><blockquote><p>这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言，赋值语句如下（// 表示注释）：</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int a = <span class="number">123</span>; // a是整数类型变量</span><br><span class="line">a = <span class="string">"ABC"</span>; // 错误：不能把字符串赋给整型变量</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><blockquote><p>所谓常量就是不能变的变量，比如常用的数学常数π就是一个常量。在Python中，通常用全部大写的变量名表示常量</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PI = <span class="number">3.14159265359</span></span><br></pre></td></tr></table></figure><h3 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h3><blockquote><p>运算符 <strong><em>/</em></strong> , <strong><em>//</em></strong> , <strong><em>%</em></strong></p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="number">10</span>/<span class="number">3</span></span><br><span class="line"><span class="number">3.33333333335</span>         <span class="comment">#结果为浮点数</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">9</span>/<span class="number">3</span></span><br><span class="line"><span class="number">3.0</span>                   <span class="comment">#结果为浮点数</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="number">10</span>//<span class="number">3</span></span><br><span class="line"><span class="number">3</span>                     <span class="comment">#结果向下取整</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="number">10</span>%<span class="number">3</span></span><br><span class="line"><span class="number">1</span>                     <span class="comment">#结果取余</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端萌新学习Python之旅，跟随廖雪峰大神的步伐，一天一天的进步！&lt;br&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://Lee981265.github.io/tags/Python/"/>
    
      <category term="Python3" scheme="http://Lee981265.github.io/tags/Python3/"/>
    
      <category term="Note" scheme="http://Lee981265.github.io/tags/Note/"/>
    
  </entry>
  
  <entry>
    <title>ES5</title>
    <link href="http://Lee981265.github.io/2018/09/27/ES5&amp;%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://Lee981265.github.io/2018/09/27/ES5&amp;字符串/</id>
    <published>2018-09-27T01:56:59.000Z</published>
    <updated>2019-01-14T11:39:08.522Z</updated>
    
    <content type="html"><![CDATA[<p>未完待续<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;未完待续&lt;br&gt;
    
    </summary>
    
    
      <category term="ES5" scheme="http://Lee981265.github.io/tags/ES5/"/>
    
  </entry>
  
  <entry>
    <title>ES6语法简介</title>
    <link href="http://Lee981265.github.io/2018/09/19/ES6%E8%AF%AD%E6%B3%95%E7%AE%80%E4%BB%8B/"/>
    <id>http://Lee981265.github.io/2018/09/19/ES6语法简介/</id>
    <published>2018-09-19T03:29:46.000Z</published>
    <updated>2018-12-11T11:57:38.940Z</updated>
    
    <content type="html"><![CDATA[<p>ECMAScript是一种由Ecma国际（前身为欧洲计算机制造商协会,英文名称是European Computer Manufacturers Association）通过ECMA-262标准化的脚本程序设计语言。这种语言在万维网上应用广泛，它往往被称为JavaScript或JScript，但实际上后两者是ECMA-262标准的实现和扩展。<a id="more"></a></p><h1 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h1><h2 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h2><ul><li>let:代码块内的变量声明<ol><li>变量声明不会提升</li><li>块级作用域</li><li>let不允许相同作用域内多次声明同一变量</li></ol></li></ul><ul><li>const:常量声明<ol><li>声明后无法修改值</li><li>块级作用域</li><li>const不允许相同作用域内多次声明同一变量</li></ol></li></ul><h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><p>ES6允许我们对数组和对象中提取值，对变量进行赋值，这被叫做“解构”</p><ul><li>数组：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">var</span> [a,b,c] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="comment">//a=1,b=2,c=3</span></span><br><span class="line"><span class="number">2.</span> <span class="keyword">var</span> [a,[[b],c]] = [<span class="number">10</span>,[[<span class="number">20</span>],<span class="number">30</span>]] <span class="comment">//a=10,b=20,c=30</span></span><br><span class="line"><span class="number">3.</span> <span class="keyword">var</span> [a,...b] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>] <span class="comment">//a=1,b=[2,3,4];...表示剩余参数</span></span><br></pre></td></tr></table></figure><ul><li>对象：<ol><li>var {a,b}={a:’html’,b:’css’}</li><li>变量必须与对象属性名相同，否则为undefined</li><li>如果变量名与属性名不相同，则必须写成以下格式才能取到值</li></ol></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> &#123;<span class="attr">a</span>:test&#125; =&#123;<span class="attr">a</span>:<span class="string">'html'</span>,<span class="attr">b</span>:<span class="string">'css'</span>&#125; <span class="comment">//test=&gt;html</span></span><br></pre></td></tr></table></figure><ul><li>解构失败：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> [a]=[],[b]=<span class="number">1</span>,[c]=<span class="string">'jiegou'</span>,[d]=<span class="literal">false</span> <span class="comment">//a,b,c,d都得到undefined</span></span><br></pre></td></tr></table></figure><ul><li>指定默认值：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> [a=<span class="literal">true</span>]=[]</span><br></pre></td></tr></table></figure><pre><code>var {a=10} = {}&gt; 解构同样适用于let和const&gt; PS:解构只能用于数组和对象，如果解构不成功，变量会返回undefined，但如果对undefined和null解构则会报错</code></pre><h3 id="解构用途"><a href="#解构用途" class="headerlink" title="解构用途"></a>解构用途</h3><ul><li>交换变量值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> [x,y] = [y,x];</span><br></pre></td></tr></table></figure><ul><li>函数返回多个值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">example</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="keyword">return</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//接收</span></span><br><span class="line"><span class="keyword">var</span> [x,y,z] = example();</span><br></pre></td></tr></table></figure><ul><li>定义函数形参（重点）</li></ul><p>函数的参数定义方式, 不用再考虑参数的顺序<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">&#123;x,y,z&#125;</span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure></p><p>//传参<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test(&#123;<span class="attr">x</span>:<span class="number">10</span>,<span class="attr">y</span>:<span class="number">20</span>,<span class="attr">z</span>:<span class="number">30</span>&#125;)</span><br><span class="line"><span class="comment">//参数可以设置默认值</span></span><br><span class="line">fuction test(&#123;x=<span class="number">10</span>,y=<span class="number">20</span>,z&#125;)&#123;&#125;</span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure></p><h2 id="字符串扩展"><a href="#字符串扩展" class="headerlink" title="字符串扩展"></a>字符串扩展</h2><h3 id="字符串方法"><a href="#字符串方法" class="headerlink" title="字符串方法"></a>字符串方法</h3><ul><li>includes</li></ul><p>判断是否包含某个字符，返回布尔值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">- startsWith/endsWith</span><br><span class="line"></span><br><span class="line">是否以某一字符开头/结尾</span><br><span class="line">```js</span><br><span class="line">  let str=&apos;google&apos;;</span><br><span class="line">  str.startsWith(&apos;g&apos;);  //true</span><br><span class="line">  str.endsWith(&apos;le&apos;);    //true</span><br><span class="line">  `</span><br></pre></td></tr></table></figure></p><ul><li>repeat(n)</li></ul><p>得到字符串重复n次后的结果，n可以为小数，但不能为负数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'laoxie'</span>.repeat(<span class="number">2</span>);<span class="comment">//laoxielaoxie</span></span><br></pre></td></tr></table></figure></p><h3 id="字符串模板-使用反引号-表示-重点"><a href="#字符串模板-使用反引号-表示-重点" class="headerlink" title="字符串模板, 使用反引号`表示(重点)"></a>字符串模板, 使用反引号`表示(重点)</h3><p>你可以通过一种更加美观、更加方便的方式向字符串中插入变量</p><p>格式：${变量|函数}，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你好，我的名字叫$&#123;username&#125;,接下来是我的自我介绍：$&#123;introduce()&#125;</span><br></pre></td></tr></table></figure><blockquote><p>模板字符串中所有的空格、新行、缩进，都会原样输出在生成的字符串中。</p></blockquote><h2 id="数组扩展"><a href="#数组扩展" class="headerlink" title="数组扩展"></a>数组扩展</h2><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><ul><li>for..of</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>,<span class="number">12</span>,<span class="number">18</span>,<span class="number">30</span>]</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> value <span class="keyword">of</span> arr) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>这是最简洁、最直接的遍历数组元素的语法</li><li>这个方法避开了for-in循环的所有缺陷&gt; for…of跟for-in的区别很明显，就是直接取值，而不再取下标了</li><li>与forEach()不同的是，它可以正确响应break、continue和return语句</li><li>for-of循环不支持普通对象</li><li>for-of循环也可以遍历其它的集合</li><li>DOM节点</li><li>字符串</li><li>Set/Map集合</li></ul><h2 id="对象扩展"><a href="#对象扩展" class="headerlink" title="对象扩展"></a>对象扩展</h2><ul><li>Object.assign(obj1,obj2,…objN);</li></ul><p>合并对象<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.assign(&#123;<span class="attr">a</span>:<span class="number">1</span>&#125;,&#123;<span class="attr">b</span>:<span class="number">2</span>&#125;,&#123;<span class="attr">b</span>:<span class="number">4</span>,<span class="attr">c</span>:<span class="number">3</span>&#125;); <span class="comment">//&#123;a:1,b:4,c:3&#125;</span></span><br></pre></td></tr></table></figure></p><ul><li>只支持浅拷贝（对于引用类型，只拷贝引用）</li><li>忽略不可枚举属性</li><li>简写</li></ul><blockquote><p>ES6允许在对象之中直接写变量，如<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@属性简写</span></span><br><span class="line"><span class="keyword">var</span> myName = <span class="string">'laoxie'</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;myName&#125;;<span class="comment">//属性名为变量名, 属性值为变量的值</span></span><br><span class="line"><span class="comment">//等效于</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">myName</span>:<span class="string">'laoxie'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用变量值作为属性名</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    [myName]:<span class="number">18</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//等效于</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">laoxie</span>:<span class="number">18</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@方法简写</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    coding()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//等效于</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    coding:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="箭头函数-gt-（重点）"><a href="#箭头函数-gt-（重点）" class="headerlink" title="箭头函数=&gt;（重点）"></a>箭头函数=&gt;（重点）</h2><pre><code>格式：标识符=&gt;表达式省略了function、return关键字和大括号。</code></pre><h3 id="参数与返回值"><a href="#参数与返回值" class="headerlink" title="参数与返回值"></a>参数与返回值</h3><ul><li>零个参数用 () 表示</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//传统写法</span></span><br><span class="line">  <span class="keyword">var</span> sum = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">10</span> + <span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//es6箭头函数</span></span><br><span class="line">  <span class="keyword">var</span> sum = <span class="function"><span class="params">()</span> =&gt;</span> <span class="number">10</span>+<span class="number">10</span>;</span><br></pre></td></tr></table></figure><ul><li>函数只有一个参数（可省略括号）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//传统函数写法</span></span><br><span class="line"><span class="keyword">var</span> test = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x+<span class="number">2</span>;</span><br><span class="line">&#125;    <span class="comment">//使用箭头函数</span></span><br><span class="line"><span class="keyword">var</span> test = <span class="function"><span class="params">x</span>=&gt;</span>x+<span class="number">2</span>;</span><br></pre></td></tr></table></figure><ul><li>多个参数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ES5</span></span><br><span class="line">  <span class="keyword">var</span> total = values.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">  <span class="comment">// ES6</span></span><br><span class="line">  <span class="keyword">var</span> total = values.reduce(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><ul><li>函数中包含多行代码时用代码块括起来</li></ul><blockquote><p>ES6中的规则是，紧随箭头的{被解析为块的开始，而不是对象的开始<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ES5</span></span><br><span class="line">    $(<span class="string">"#confetti-btn"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">     playTrumpet();       fireConfettiCannon();</span><br><span class="line">   &#125;);</span><br><span class="line">   <span class="comment">// ES6</span></span><br><span class="line">   $(<span class="string">"#confetti-btn"</span>).click(<span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">     playTrumpet();</span><br><span class="line">     fireConfettiCannon();</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure></p></blockquote><ul><li>使用了块语句的箭头函数不会自动返回值，你需要使用return语句将所需值返回</li><li>当使用箭头函数返回一个普通对象时，需要将对象包裹在小括号里</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//传统写法</span></span><br><span class="line">    <span class="keyword">var</span> createPerson = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="attr">name</span>:<span class="string">'laoxie'</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ES6</span></span><br><span class="line">    <span class="keyword">var</span> createPerson = <span class="function"><span class="params">()</span>=&gt;</span>&#123;<span class="attr">name</span>:<span class="string">'laoxie'</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;;   <span class="comment">// 这样写会报Bug！</span></span><br><span class="line">    <span class="keyword">var</span> createPerson = <span class="function"><span class="params">()</span>=&gt;</span>(&#123;<span class="attr">name</span>:<span class="string">'laoxie'</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;);</span><br></pre></td></tr></table></figure><ul><li><p>默认参数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> func1 = <span class="function">(<span class="params">x = <span class="number">1</span>, y = <span class="number">2</span></span>) =&gt;</span> x + y;</span><br><span class="line">  func1(); <span class="comment">// 得到 3</span></span><br></pre></td></tr></table></figure></li><li><p>剩余参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> func2 = <span class="function">(<span class="params">x, ...args</span>) =&gt;</span> &#123; <span class="built_in">console</span>.log(args) &#125;;</span><br><span class="line">  func2(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>); <span class="comment">// 输出 [2, 3]</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="箭头函数中的this值"><a href="#箭头函数中的this值" class="headerlink" title="箭头函数中的this值"></a>箭头函数中的this值</h3><pre><code>箭头函数没有它自己的this值，箭头函数内的this值继承自外围作用域</code></pre><h2 id="Symbol数据类型"><a href="#Symbol数据类型" class="headerlink" title="Symbol数据类型"></a>Symbol数据类型</h2><pre><code>ES6引入了一种新的原始数据类型Symbol，表示独一无二的值，一旦创建后就不可更改。</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 没有参数的情况</span></span><br><span class="line">    <span class="keyword">var</span> s1 = <span class="built_in">Symbol</span>();</span><br><span class="line">    <span class="keyword">var</span> s2 = <span class="built_in">Symbol</span>();</span><br><span class="line"></span><br><span class="line">    s1 === s2 <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li><p>Symbol函数可以接受一个字符串作为参数，表示对Symbol实例的描述，主要是为了标识和区分，对调式非常有用</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 有参数的情况</span></span><br><span class="line"><span class="keyword">var</span> s1 = <span class="built_in">Symbol</span>(<span class="string">"foo"</span>);</span><br><span class="line"><span class="keyword">var</span> s2 = <span class="built_in">Symbol</span>(<span class="string">"foo"</span>);</span><br><span class="line">s1 === s2 <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li><li><p>Symbol值不能与其他类型的值进行运算</p></li></ul><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><ul><li><p>给对象创建私有属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mySymbol = <span class="built_in">Symbol</span>();</span><br><span class="line">  <span class="comment">// 第一种写法</span></span><br><span class="line">  <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">  a[mySymbol] = <span class="string">'Nani'</span>;</span><br><span class="line">  <span class="comment">// 第二种写法（注意加方括号，否则回被当作普通属性）</span></span><br><span class="line">  <span class="keyword">var</span> a = &#123;</span><br><span class="line">    [mySymbol]: <span class="string">'Nani'</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 以上写法都得到同样结果</span></span><br><span class="line">  a[mySymbol] <span class="comment">// "Nani"</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><ul><li><p>Symbol.for()<br>  有时我们希望重新使用同一个Symbol值，Symbol.for方法可以做到这一点，首先在全局中搜索<strong>已登记</strong>的Symbol值，如果有，就返回这个Symbol值，否则就新建并返回一个以该字符串为名称的Symbol值&gt; 直接用Symbol()方法创建的Symbol值不会被登记</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> one = <span class="built_in">Symbol</span>(<span class="string">"laoxie"</span>);</span><br><span class="line"><span class="keyword">let</span> two = <span class="built_in">Symbol</span>.for(<span class="string">"laoxie"</span>);</span><br><span class="line"><span class="comment">//由于创建了两个Symbol值，所以他们不相等</span></span><br><span class="line"> <span class="built_in">console</span>.log(one===two);<span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p>Symbol.keyFor()<br>  获取被登记的Symbol值&gt; 直接使用Symbo()创建的Symbol值的键不会被登记，所以也就获取不到</p></li></ul><h2 id="Map集合"><a href="#Map集合" class="headerlink" title="Map集合"></a>Map集合</h2><pre><code>Map集合,即映射</code></pre><ul><li>设置</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">    map.set(<span class="string">"S0"</span>, <span class="string">"张三"</span>);   </span><br><span class="line">    map.set(<span class="string">"S1"</span>, <span class="string">"李四"</span>);    </span><br><span class="line">    map.set(<span class="string">"S2"</span>, <span class="string">"王五"</span>);</span><br></pre></td></tr></table></figure><ul><li>获取</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map.get(<span class="string">"s2"</span>); <span class="comment">//王五</span></span><br></pre></td></tr></table></figure><ul><li>循环遍历，配合解构赋值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> [key,value] <span class="keyword">of</span> map)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(key,value);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li>keys() 获取所有键</li><li>values() 获取所有值</li><li>entries() 获取所有键值对，返回类数组</li></ul><h2 id="Set集合"><a href="#Set集合" class="headerlink" title="Set集合"></a>Set集合</h2><p>Set集合，类似于数组，但是成员的值都是唯一的，没有重复的值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> imgs = <span class="keyword">new</span> <span class="built_in">Set</span>();</span><br><span class="line">    imgs.add(<span class="number">1</span>）;</span><br><span class="line">    imgs.add(<span class="number">1</span>);</span><br><span class="line">    imgs.add(<span class="number">5</span>);</span><br><span class="line">    imgs.add(<span class="string">"5"</span>);</span><br><span class="line">    imgs.add(<span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"abc"</span>)）;</span><br><span class="line">    imgs.add(<span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"abc"</span>)）;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印的结果： 1  5  '5'  'abc'  'abc'</span></span><br></pre></td></tr></table></figure><blockquote><p>Set集合是默认去重复的，但前提是两个添加的元素严格相等，所以5和”5”不相等，两个new出来的字符串不相等</p></blockquote><ul><li>[案例] 去重数组</li></ul><p>SET集合没有提供下标方式的访问，因此只能使用for…of来遍历。由于Set集合本质上还是一个map，因此会有以下几种遍历方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> imgs = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]); <span class="comment">//根据KEY遍历</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> imgs.keys())&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(item);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//a</span></span><br><span class="line"><span class="comment">//b</span></span><br><span class="line"><span class="comment">//c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据VALUE遍历</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> imgs.values())&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//a</span></span><br><span class="line"><span class="comment">//b</span></span><br><span class="line"><span class="comment">//c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据KEY-VALUE遍历</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> imgs.entries())&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//['a','a']</span></span><br><span class="line"><span class="comment">//['b','b']</span></span><br><span class="line"><span class="comment">//['c','c']</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//普通for...of循环</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> imgs)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//a</span></span><br><span class="line"><span class="comment">//b</span></span><br><span class="line"><span class="comment">//c</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ECMAScript是一种由Ecma国际（前身为欧洲计算机制造商协会,英文名称是European Computer Manufacturers Association）通过ECMA-262标准化的脚本程序设计语言。这种语言在万维网上应用广泛，它往往被称为JavaScript或JScript，但实际上后两者是ECMA-262标准的实现和扩展。
    
    </summary>
    
    
      <category term="ES6" scheme="http://Lee981265.github.io/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>vue与echarts显示隐藏</title>
    <link href="http://Lee981265.github.io/2018/08/22/vue%E4%B8%8Eecharts%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F/"/>
    <id>http://Lee981265.github.io/2018/08/22/vue与echarts显示隐藏/</id>
    <published>2018-08-22T10:44:57.000Z</published>
    <updated>2018-10-29T03:16:16.342Z</updated>
    
    <content type="html"><![CDATA[<p>随着项目需求，我们有时候会用到vue+echarts；有时候ecahrts图表需要在适当的时候进行显示隐藏，对于众多vue使用者来说显示隐藏==&gt;v-show;我也不例外。使用v-show的确可以做到显示隐藏但是echarts图表的宽高会不受控制。<a id="more"></a></p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>在此之前我们先来理解一下vue的显示隐藏：</p><ul><li>v-show</li><li>v-if<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这两个都可以进行显示隐藏，不过v-show相当于加了属性=&gt;display:none;而v-if是不渲染改节点，这两者有着质的区别</span><br></pre></td></tr></table></figure></li></ul><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h2 id="单纯的显示隐藏"><a href="#单纯的显示隐藏" class="headerlink" title="单纯的显示隐藏"></a>单纯的显示隐藏</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对于单纯的显示隐藏使用v-if,切在的当前页面只渲染一次；这种情况使用v-if即可。当然还有给echarts图表添加属性 grid:&#123;containLabel:true&#125;</span><br></pre></td></tr></table></figure><h2 id="复杂的显示隐藏"><a href="#复杂的显示隐藏" class="headerlink" title="复杂的显示隐藏"></a>复杂的显示隐藏</h2><p>对于需要反复重新渲染的echarts图表如果使用v-if的话，初始化时是可行的，但是切换重新渲染会抛出错误 attributes is not defined。因此我们不能使用v-if;</p><p>思路：</p><ul><li>报错原因=&gt;节点不存在</li><li>显示隐藏底层是display:none;或者opacity:0;</li></ul><p>代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"charts"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"indent"</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"indent_icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"indent_ratio"</span>&gt;</span>订单占比<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"indent_kong"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myChart"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"indent_two"</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"indent_icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"indent_ratio"</span>&gt;</span>订单趋势<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"rise"</span> <span class="attr">v-show</span>=<span class="string">"isactive!=1"</span>&gt;</span>&#123;&#123;huanbi&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"increase"</span> <span class="attr">v-show</span>=<span class="string">"isactive!=1"</span>&gt;</span>环比增长<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"indent_kong"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myChart_two"</span> <span class="attr">:style</span>=<span class="string">"&#123;width: '100%', height: '300px','margin-bottom':'1rem',&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>重新渲染:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">getEcharts:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">//echarts图表数据</span></span><br><span class="line">      <span class="keyword">var</span> USaferss=&#123;</span><br><span class="line">            Action:<span class="string">"/Itil/face/V1801090100.G.JSON"</span>,</span><br><span class="line">            Result:&#123;&#125;,</span><br><span class="line">            Values:&#123;</span><br><span class="line">                      <span class="comment">// select:'time',</span></span><br><span class="line">                      <span class="comment">//staDate:'2017-03-06'</span></span><br><span class="line">                      find:<span class="string">'time2'</span>,</span><br><span class="line">                      type:<span class="keyword">this</span>.isactive,</span><br><span class="line">                      f_itil_1801090105_E01:<span class="keyword">this</span>.companycode,</span><br><span class="line"></span><br><span class="line">                  &#125;,</span><br><span class="line">              Upload:<span class="literal">false</span>,</span><br><span class="line">            Finish:<span class="function">(<span class="params">v</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> Sv=v.data.OutData;</span><br><span class="line">                          <span class="keyword">this</span>.times = Sv;</span><br><span class="line">                          <span class="keyword">this</span>.huanbi = <span class="keyword">this</span>.times.seq;</span><br><span class="line">                          <span class="keyword">this</span>.all = <span class="keyword">this</span>.times.all;</span><br><span class="line">                          <span class="built_in">console</span>.log( <span class="keyword">this</span>.huanbi);</span><br><span class="line">                          <span class="built_in">console</span>.log(<span class="keyword">this</span>.times.appli);</span><br><span class="line">                          <span class="built_in">console</span>.log(Sv);</span><br><span class="line">                          <span class="keyword">var</span> charts = <span class="built_in">document</span>.getElementById(<span class="string">'charts'</span>);</span><br><span class="line">                          <span class="keyword">if</span>( <span class="keyword">this</span>.all==<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">                            charts.style.display=<span class="string">"none"</span>;</span><br><span class="line">                          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            charts.style.display=<span class="string">"block"</span>;</span><br><span class="line">                            <span class="keyword">this</span>.drawLine(<span class="keyword">this</span>.times);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">this</span>.drawLinetwo(<span class="keyword">this</span>.times);</span><br><span class="line">                          &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            Errors:<span class="function">(<span class="params">v</span>)=&gt;</span>&#123;&#125;</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">this</span>.PstData(USaferss,<span class="string">"G"</span>);  </span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure></p><p>这样我们就可以实时切换图表了，无数据则隐藏，有数据就显示；默认一定要是隐藏状态o,希望对你有所帮助！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着项目需求，我们有时候会用到vue+echarts；有时候ecahrts图表需要在适当的时候进行显示隐藏，对于众多vue使用者来说显示隐藏==&amp;gt;v-show;我也不例外。使用v-show的确可以做到显示隐藏但是echarts图表的宽高会不受控制。
    
    </summary>
    
    
      <category term="Echarts" scheme="http://Lee981265.github.io/tags/Echarts/"/>
    
      <category term="Vue" scheme="http://Lee981265.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 小程序表达式</title>
    <link href="http://Lee981265.github.io/2018/08/03/Vue-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://Lee981265.github.io/2018/08/03/Vue-小程序表达式/</id>
    <published>2018-08-03T09:10:03.000Z</published>
    <updated>2018-10-29T03:16:12.136Z</updated>
    
    <content type="html"><![CDATA[<p>最近写了很多动态添加类名或者tab标签切换的表达式，遇到过很多的坑，下面为大家分享一下我遇到的几种。<a id="more"></a></p><h2 id="v-show以及微信wx-if的使用（以这两个为例）"><a href="#v-show以及微信wx-if的使用（以这两个为例）" class="headerlink" title="v-show以及微信wx:if的使用（以这两个为例）"></a><strong><em>v-show以及微信wx:if的使用（以这两个为例）</em></strong></h2><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><p>v-show后面可以在引号里面直接写true or false<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;rise&quot; v-show=&quot;isactive!=1&quot;&gt;&#123;&#123;huanbi&#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;rise&quot; v-show=&quot;false&quot;&gt;&#123;&#123;huanbi&#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;rise&quot; v-show=&quot;true&quot;&gt;&#123;&#123;huanbi&#125;&#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure></p><h3 id="wx-if"><a href="#wx-if" class="headerlink" title="wx:if"></a>wx:if</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wx:if在引号里面必须有&#123;&#123;&#125;&#125;</span><br><span class="line"># 在hexojs中直接写&#123;&#123;&#125;&#125;会抛出环境错误</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;view wx:if=&quot;&#123;&#123;false&#125;&#125;&quot;  class=&quot;Theuser&quot; style=&quot;height:85rpx;&quot;&gt;</span><br><span class="line">      &lt;label&gt;渠道编号：&lt;/label&gt;</span><br><span class="line">      &lt;view style=&quot;height:100%;float:right;margin-right:24rpx;line-height:88rpx;&quot;&gt;&#123;&#123;qudaocode&#125;&#125;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p><strong><em>注：在使用wx:if时有时候会出现闪现问题，其一先清除默认值，其二要使用全等</em></strong></p><h2 id="v-for与wx-for"><a href="#v-for与wx-for" class="headerlink" title="v-for与wx:for"></a><strong><em>v-for与wx:for</em></strong></h2><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span>  <span class="attr">v-for</span>=<span class="string">"item in list"</span> <span class="attr">:key</span>=<span class="string">"item.id"</span> <span class="attr">:price</span>=<span class="string">"[item.f_itil_1801090109_006]"</span> <span class="attr">:name</span>=<span class="string">"[item.f_itil_1801090109_P01]"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果需要使用索引<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in items"</span>&gt;</span></span><br><span class="line">    &#123;&#123;parentMessage&#125;&#125; - &#123;&#123;$index&#125;&#125; - &#123;&#123;item.message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"(index, item) in items"</span>&gt;</span></span><br><span class="line">  &#123;&#123;index&#125;&#125; &#123;&#123;item.message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="wx-for"><a href="#wx-for" class="headerlink" title="wx:for"></a>wx:for</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wx:for=&quot;&#123;&#123;Alldata&#125;&#125;&quot; wx:key=&quot;&quot;</span><br><span class="line">#Alldata 为数组 使用索引时直接用&#123;&#123;index&#125;&#125;即可</span><br></pre></td></tr></table></figure><h3 id="三元运算"><a href="#三元运算" class="headerlink" title="三元运算"></a><strong><em>三元运算</em></strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;btn_date&quot; @click=&quot;choose&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;er&quot; :class=&quot;[status==1?&apos;active&apos;:&apos;&apos;]&quot; :name=&quot;1&quot;&gt;日&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;er&quot; :class=&quot;[status==2?&apos;active&apos;:&apos;&apos;]&quot; :name=&quot;2&quot;&gt;周&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;er&quot; :class=&quot;[status==3?&apos;active&apos;:&apos;&apos;]&quot; :name=&quot;3&quot;&gt;月&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;er&quot; :class=&quot;[status==4?&apos;active&apos;:&apos;&apos;]&quot; :name=&quot;4&quot;&gt;年&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">//简单的点击添加类名</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;header&quot; bindtap=&quot;choosetype&quot;&gt;</span><br><span class="line">            &lt;view class=&quot;&#123;&#123;isactive == 1?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot; data-set=&quot;1&quot;&gt;全部&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;&#123;&#123;isactive == 2?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot; data-set=&quot;2&quot;&gt;待接单&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;&#123;&#123;isactive == 3?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot; data-set=&quot;3&quot;&gt;处理中&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;&#123;&#123;isactive == 4?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot; data-set=&quot;4&quot;&gt;已完成&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;header&quot; bindtap=&quot;choosetype&quot;&gt;</span><br><span class="line">            &lt;view class=&quot;er &#123;&#123;isactive == 1?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot; data-set=&quot;1&quot;&gt;全部&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;er &#123;&#123;isactive == 2?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot; data-set=&quot;2&quot;&gt;待接单&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;er &#123;&#123;isactive == 3?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot; data-set=&quot;3&quot;&gt;处理中&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;er &#123;&#123;isactive == 4?&apos;active&apos;:&apos;&apos;&#125;&#125;&quot; data-set=&quot;4&quot;&gt;已完成&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;header&quot; bindtap=&quot;choosetype&quot;&gt;</span><br><span class="line">            &lt;view class=&quot;&#123;&#123;isactive == 1?&apos;active er&apos;:&apos;er&apos;&#125;&#125;&quot; data-set=&quot;1&quot;&gt;全部&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;&#123;&#123;isactive == 2?&apos;active er&apos;:&apos;er&apos;&#125;&#125;&quot; data-set=&quot;2&quot;&gt;待接单&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;&#123;&#123;isactive == 3?&apos;active er&apos;:&apos;er&apos;&#125;&#125;&quot; data-set=&quot;3&quot;&gt;处理中&lt;/view&gt;</span><br><span class="line">            &lt;view class=&quot;&#123;&#123;isactive == 4?&apos;active er&apos;:&apos;er&apos;&#125;&#125;&quot; data-set=&quot;4&quot;&gt;已完成&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p><strong><em>注：小程序里面不能写2个class会报错，vue可以写</em></strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;ischoose=='1'?[chec;]:[uncheck]&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"></span><br><span class="line">####</span><br><span class="line">data:&#123;</span><br><span class="line">  chec:'wwqeq',</span><br><span class="line">  uncheck:'sdsadasd'</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a><strong><em>未完待续</em></strong></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近写了很多动态添加类名或者tab标签切换的表达式，遇到过很多的坑，下面为大家分享一下我遇到的几种。
    
    </summary>
    
    
      <category term="Vue" scheme="http://Lee981265.github.io/tags/Vue/"/>
    
      <category term="Mini-apps" scheme="http://Lee981265.github.io/tags/Mini-apps/"/>
    
  </entry>
  
  <entry>
    <title>移动端拖拽</title>
    <link href="http://Lee981265.github.io/2018/07/23/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8B%96%E6%8B%BD/"/>
    <id>http://Lee981265.github.io/2018/07/23/移动端拖拽/</id>
    <published>2018-07-23T09:56:10.000Z</published>
    <updated>2018-10-29T03:16:46.080Z</updated>
    
    <content type="html"><![CDATA[<p> 最近在做一个混合开发的项目，需求里面要求使用拖拽，然而这不是jq的拖拽；我向很多大佬求助过，有一位大佬建议我去使用<a href="https://www.cnblogs.com/qianduanjingying/p/5812139.html" target="_blank" rel="noopener">hammer.js</a>;由于时间紧迫我不得不放弃这一方法。还有大佬向我推荐vue封装的插件，然而我试了一下有局限性，position:absolute==&gt;我想要是的fixed；还有通过指令的方法等等我都试了不好用；求人不如求己下面我将为大家介绍一种简单的方法（适用于vue）<a id="more"></a></p><h2 id="完整代码展示"><a href="#完整代码展示" class="headerlink" title="完整代码展示"></a>完整代码展示</h2> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"> &lt;template&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"detail"</span>&gt;</span><br><span class="line">        &lt;!-- 头部 --&gt;</span><br><span class="line">        &lt;app-header&gt;<span class="xml"><span class="tag">&lt;/<span class="name">app-header</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 报障人信息 --&gt;</span></span></span><br><span class="line">        &lt;app-person&gt;&lt;/app-person&gt;</span><br><span class="line">        &lt;!-- 报障内容 --&gt;</span><br><span class="line">        &lt;app-content&gt;&lt;/app-content&gt;</span><br><span class="line">        &lt;!-- 处理进度 --&gt;</span><br><span class="line">        &lt;app-progress&gt;&lt;/app-progress&gt;</span><br><span class="line">        &lt;!-- 底部导航栏 --&gt;</span><br><span class="line">        &lt;app-nav&gt;&lt;/app-nav&gt;</span><br><span class="line">        &lt;!-- 遮罩层 --&gt;</span><br><span class="line">        &lt;div class="home" id="moveDiv" @click="gohome" @touchstart="down" @touchmove="move"  @touchend="end"&gt;</span><br><span class="line">          &lt;img src="../../../../Img/img/home.png" alt=""&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import AppHeader from "./vue/header.vue";</span><br><span class="line">import AppPerson from "./vue/person.vue";</span><br><span class="line">import AppContent from "./vue/content.vue";</span><br><span class="line">import AppProgress from "./vue/progress.vue";</span><br><span class="line">import AppNav from "./vue/nav.vue";</span><br><span class="line">// import AppMask from './vue/mask.vue';</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      flags: false,</span><br><span class="line">      position: &#123;</span><br><span class="line">        x: 0,</span><br><span class="line">        y: 0</span><br><span class="line">      &#125;,</span><br><span class="line">      nx: '',</span><br><span class="line">      ny: '',</span><br><span class="line">      dx: '',</span><br><span class="line">      dy: '', </span><br><span class="line">      xPum: '',</span><br><span class="line">      yPum: '',</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    gohome:function()&#123;</span><br><span class="line">      //跳转home</span><br><span class="line">      this.$router.push(&#123;</span><br><span class="line">           name:'index',</span><br><span class="line">          //  query:&#123;engineerNum:this.engineerNum&#125;</span><br><span class="line">         &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    down()&#123;</span><br><span class="line">      console.log('down');</span><br><span class="line">      this.flags = true;</span><br><span class="line">      var touch ;</span><br><span class="line">      if(event.touches)&#123;</span><br><span class="line">          touch = event.touches[0];</span><br><span class="line">      &#125;else &#123;</span><br><span class="line">          touch = event;</span><br><span class="line">      &#125;</span><br><span class="line">      this.position.x = touch.clientX;</span><br><span class="line">      this.position.y = touch.clientY;</span><br><span class="line">      this.dx = moveDiv.offsetLeft;</span><br><span class="line">      this.dy = moveDiv.offsetTop;</span><br><span class="line">    &#125;,</span><br><span class="line">    preHandler:function(e)&#123;</span><br><span class="line">      e.preventDefault();</span><br><span class="line">    &#125;,</span><br><span class="line">    move()&#123;</span><br><span class="line">     </span><br><span class="line">      console.log('move');</span><br><span class="line">      if(this.flags)&#123;</span><br><span class="line">        var touch ;</span><br><span class="line">        if(event.touches)&#123;</span><br><span class="line">            touch = event.touches[0];</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            touch = event;</span><br><span class="line">        &#125;</span><br><span class="line">        this.nx = touch.clientX - this.position.x;</span><br><span class="line">        this.ny = touch.clientY - this.position.y;</span><br><span class="line">        this.xPum = this.dx+this.nx;</span><br><span class="line">        this.yPum = this.dy+this.ny;</span><br><span class="line">        moveDiv.style.left = this.xPum+"px";</span><br><span class="line">        moveDiv.style.top = this.yPum +"px";</span><br><span class="line">        //阻止页面的滑动默认事件</span><br><span class="line">        document.addEventListener("touchmove",this.preHandler,false);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">   </span><br><span class="line">    end()&#123;</span><br><span class="line">    </span><br><span class="line">      console.log('end');</span><br><span class="line">      //alert(e3);</span><br><span class="line">        this.flags = false;</span><br><span class="line">        document.removeEventListener('touchmove', this.preHandler, false);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">      AppHeader,</span><br><span class="line">      AppPerson,</span><br><span class="line">      AppContent,</span><br><span class="line">      AppProgress,</span><br><span class="line">      AppNav</span><br><span class="line">      // AppMask</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang="less"&gt;</span><br><span class="line">.detail &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  min-height:100%;</span><br><span class="line">&#125;</span><br><span class="line">.home&#123;</span><br><span class="line">  position:fixed;</span><br><span class="line">  right:.2rem;</span><br><span class="line">  bottom:15%;</span><br><span class="line">  line-height:1rem;</span><br><span class="line">  width:.98rem;</span><br><span class="line">  height:.98rem;</span><br><span class="line">  img&#123;</span><br><span class="line">    width:.98rem;</span><br><span class="line">    height:.98rem;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h2><p><em>touchstart</em>当在屏幕上按下手指时触发<br><em>touchmove</em> 当在屏幕上移动手指时触发</p><p><em>touchend</em> 当在屏幕上抬起手指时触发<br><em>mousedown mousemove mouseup</em>对应的是PC端的事件</p><p><em>touchcancel</em> 当一些更高级别的事件发生的时候（如电话接入或者弹出信息）会取消当前的touch操作，即触发touchcancel。一般  会在touchcancel时暂停游戏、存档等操作。</p><h2 id="效果图（非对应的界面由于环境问题）"><a href="#效果图（非对应的界面由于环境问题）" class="headerlink" title="效果图（非对应的界面由于环境问题）"></a>效果图（非对应的界面由于环境问题）</h2><p><div align="center"><img src="/img/touch04.gif" alt="拖住啊哦"></div></p><h2 id="步骤详解"><a href="#步骤详解" class="headerlink" title="步骤详解"></a>步骤详解</h2><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"detail"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"home"</span> <span class="attr">id</span>=<span class="string">"moveDiv"</span> @<span class="attr">click</span>=<span class="string">"gohome"</span> @<span class="attr">touchstart</span>=<span class="string">"down"</span> @<span class="attr">touchmove</span>=<span class="string">"move"</span>  @<span class="attr">touchend</span>=<span class="string">"end"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../../../../Img/img/home.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">down()&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'down'</span>);</span><br><span class="line">  <span class="keyword">this</span>.flags = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">var</span> touch ;</span><br><span class="line">  <span class="keyword">if</span>(event.touches)&#123;</span><br><span class="line">      touch = event.touches[<span class="number">0</span>];</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      touch = event;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">this</span>.position.x = touch.clientX;</span><br><span class="line">  <span class="keyword">this</span>.position.y = touch.clientY;</span><br><span class="line">  <span class="keyword">this</span>.dx = moveDiv.offsetLeft;</span><br><span class="line">  <span class="keyword">this</span>.dy = moveDiv.offsetTop;</span><br><span class="line">&#125;,</span><br><span class="line">preHandler:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  e.preventDefault();</span><br><span class="line">&#125;,</span><br><span class="line">move()&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'move'</span>);</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">this</span>.flags)&#123;</span><br><span class="line">    <span class="keyword">var</span> touch ;</span><br><span class="line">    <span class="keyword">if</span>(event.touches)&#123;</span><br><span class="line">        touch = event.touches[<span class="number">0</span>];</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        touch = event;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.nx = touch.clientX - <span class="keyword">this</span>.position.x;</span><br><span class="line">    <span class="keyword">this</span>.ny = touch.clientY - <span class="keyword">this</span>.position.y;</span><br><span class="line">    <span class="keyword">this</span>.xPum = <span class="keyword">this</span>.dx+<span class="keyword">this</span>.nx;</span><br><span class="line">    <span class="keyword">this</span>.yPum = <span class="keyword">this</span>.dy+<span class="keyword">this</span>.ny;</span><br><span class="line">    moveDiv.style.left = <span class="keyword">this</span>.xPum+<span class="string">"px"</span>;</span><br><span class="line">    moveDiv.style.top = <span class="keyword">this</span>.yPum +<span class="string">"px"</span>;</span><br><span class="line">    <span class="comment">//阻止页面的滑动默认事件</span></span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"touchmove"</span>,<span class="keyword">this</span>.preHandler,<span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">   </span><br><span class="line">end()&#123;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'end'</span>);</span><br><span class="line">  <span class="comment">//alert(e3);</span></span><br><span class="line">    <span class="keyword">this</span>.flags = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">document</span>.removeEventListener(<span class="string">'touchmove'</span>, <span class="keyword">this</span>.preHandler, <span class="literal">false</span>);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.detail</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">min-height</span>:<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.home</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>:fixed;</span><br><span class="line">  <span class="attribute">right</span>:.<span class="number">2rem</span>;</span><br><span class="line">  <span class="attribute">bottom</span>:<span class="number">15%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>:<span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">width</span>:.<span class="number">98rem</span>;</span><br><span class="line">  <span class="attribute">height</span>:.<span class="number">98rem</span>;</span><br><span class="line">  <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:.<span class="number">98rem</span>;</span><br><span class="line">    <span class="attribute">height</span>:.<span class="number">98rem</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 最近在做一个混合开发的项目，需求里面要求使用拖拽，然而这不是jq的拖拽；我向很多大佬求助过，有一位大佬建议我去使用&lt;a href=&quot;https://www.cnblogs.com/qianduanjingying/p/5812139.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hammer.js&lt;/a&gt;;由于时间紧迫我不得不放弃这一方法。还有大佬向我推荐vue封装的插件，然而我试了一下有局限性，position:absolute==&amp;gt;我想要是的fixed；还有通过指令的方法等等我都试了不好用；求人不如求己下面我将为大家介绍一种简单的方法（适用于vue）
    
    </summary>
    
    
      <category term="Vue" scheme="http://Lee981265.github.io/tags/Vue/"/>
    
      <category term="Mobileterminal" scheme="http://Lee981265.github.io/tags/Mobileterminal/"/>
    
      <category term="Drag" scheme="http://Lee981265.github.io/tags/Drag/"/>
    
  </entry>
  
  <entry>
    <title>移动端键盘弹起，底部按钮顶上去另类解决办法(Vue)</title>
    <link href="http://Lee981265.github.io/2018/07/17/Vue%E9%94%AE%E7%9B%98%E5%BC%B9%E8%B5%B7/"/>
    <id>http://Lee981265.github.io/2018/07/17/Vue键盘弹起/</id>
    <published>2018-07-17T07:12:43.000Z</published>
    <updated>2018-10-29T03:16:21.788Z</updated>
    
    <content type="html"><![CDATA[<p>当我们写一个页面有键盘弹起且底部按钮fixed时你会发现点击输入框是底部按钮会弹起，网上很多方法但是只适用于对应的场景,今天我们来学习一种Vue 页面的键盘弹起。<a id="more"></a></p><p><img src="/img/07.png" alt="phone"></p><p>解决办法：<br>换个思路，检测浏览器的resize事件，当高度过小时就可以判定为出现这种情况，这时把定位改成ab或者直接隐藏掉之类的。</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;mt-button v-show=<span class="string">"isOriginHei"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"add-client"</span> type=<span class="string">"default"</span> size=<span class="string">"large"</span> @click.native=<span class="string">"submitClientInfo"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">icon-svg</span> <span class="attr">iconClass</span>=<span class="string">"baocun"</span> <span class="attr">class</span>=<span class="string">"icon-xinzeng"</span>&gt;</span><span class="tag">&lt;/<span class="name">icon-svg</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">mt-button</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="第一步：-先在-data-中去-定义-一个记录高度是-属性"><a href="#第一步：-先在-data-中去-定义-一个记录高度是-属性" class="headerlink" title="第一步： 先在 data 中去 定义 一个记录高度是 属性"></a>第一步： 先在 data 中去 定义 一个记录高度是 属性</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    screenHeight: <span class="built_in">document</span>.body.clientHeight<span class="comment">// 这里是给到了一个默认值 （这个很重要），</span></span><br><span class="line">    originHeight: <span class="built_in">document</span>.body.clientHeight<span class="comment">//默认高度在watch里拿来做比较</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二步：-我们需要-讲-reisze-事件在-vue-mounted-的时候-去挂载一下它的方法"><a href="#第二步：-我们需要-讲-reisze-事件在-vue-mounted-的时候-去挂载一下它的方法" class="headerlink" title="第二步： 我们需要 讲 reisze 事件在 vue mounted 的时候 去挂载一下它的方法"></a>第二步： 我们需要 讲 reisze 事件在 vue mounted 的时候 去挂载一下它的方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mounted () &#123;</span><br><span class="line">            <span class="keyword">const</span> that = <span class="keyword">this</span></span><br><span class="line">            <span class="built_in">window</span>.onresize = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="function">(<span class="params">(</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">window</span>.screenHeight= <span class="built_in">document</span>.body.clientHeight</span><br><span class="line">                    that.screenHeight= <span class="built_in">window</span>.screenHeight</span><br><span class="line">                &#125;)()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="第三步：-watch-去监听这个-属性值的变化，如果发生变化则讲这个val-传递给-this-screenHeight"><a href="#第三步：-watch-去监听这个-属性值的变化，如果发生变化则讲这个val-传递给-this-screenHeight" class="headerlink" title="第三步： watch 去监听这个 属性值的变化，如果发生变化则讲这个val 传递给 this.screenHeight"></a>第三步： watch 去监听这个 属性值的变化，如果发生变化则讲这个val 传递给 this.screenHeight</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">            screenHeight(val) &#123;</span><br><span class="line">                <span class="keyword">this</span>.screenHeight= val</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="watch监控比较，判断按钮是否该显示出来"><a href="#watch监控比较，判断按钮是否该显示出来" class="headerlink" title="watch监控比较，判断按钮是否该显示出来"></a>watch监控比较，判断按钮是否该显示出来</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">            screenHeight (val) &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.originHeight != val) &#123;</span><br><span class="line">                    <span class="keyword">this</span>.isOriginHei = <span class="literal">false</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.isOriginHei = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><h3 id="步骤一：定义一个指令-foot"><a href="#步骤一：定义一个指令-foot" class="headerlink" title="步骤一：定义一个指令 foot"></a>步骤一：定义一个指令 foot</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> listenAction;</span><br><span class="line"><span class="keyword">let</span> originalHeight;</span><br><span class="line"><span class="keyword">let</span> currHeight;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="built_in">Object</span>().install = <span class="function">(<span class="params">Vue, options = &#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  Vue.directive(<span class="string">'foot'</span>, &#123;</span><br><span class="line">    insert(el, binding) &#123;</span><br><span class="line">      <span class="keyword">const</span> elStyle = el.style;</span><br><span class="line">      <span class="keyword">let</span> active = <span class="literal">false</span>;</span><br><span class="line">      originalHeight = <span class="built_in">document</span>.body.clientHeight;</span><br><span class="line">      <span class="keyword">const</span> reset = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!active) &#123;</span><br><span class="line">          <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        elStyle.display = <span class="string">'flex'</span>;</span><br><span class="line">        active = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> hang = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(active) &#123;</span><br><span class="line">          <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        elStyle.display = <span class="string">'none'</span></span><br><span class="line">        active = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> getCurrHeight = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> getHeight = <span class="built_in">document</span>.body.clientHeight;</span><br><span class="line">        <span class="keyword">return</span> getHeight;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> check = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        currHeight = getCurrHeight();</span><br><span class="line">        <span class="keyword">if</span>(currHeight != originalHeight) &#123;</span><br><span class="line">          hang();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">          reset();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      listenAction = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        check()</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, listenAction);</span><br><span class="line">    &#125;,</span><br><span class="line">    unbind() &#123;</span><br><span class="line">      <span class="built_in">window</span>.removeEventListener(<span class="string">'resize'</span>,listenAction);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤二：组件引用"><a href="#步骤二：组件引用" class="headerlink" title="步骤二：组件引用"></a>步骤二：组件引用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foot <span class="keyword">from</span> <span class="string">'libs/foot'</span></span><br><span class="line">Vue.use(Foot)</span><br></pre></td></tr></table></figure><h3 id="步骤三：指令使用"><a href="#步骤三：指令使用" class="headerlink" title="步骤三：指令使用"></a>步骤三：指令使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">m-flex</span> <span class="attr">class</span>=<span class="string">"pay-group"</span> <span class="attr">v-foot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-flex-item</span> <span class="attr">class</span>=<span class="string">"should-pay"</span>&gt;</span>应付金额：<span class="tag">&lt;<span class="name">span</span>&gt;</span>￥99<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">m-flex-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">m-button</span> @<span class="attr">click</span>=<span class="string">"goPay"</span> <span class="attr">class</span>=<span class="string">"pay-btn"</span>&gt;</span>去支付<span class="tag">&lt;/<span class="name">m-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">m-flex</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当我们写一个页面有键盘弹起且底部按钮fixed时你会发现点击输入框是底部按钮会弹起，网上很多方法但是只适用于对应的场景,今天我们来学习一种Vue 页面的键盘弹起。
    
    </summary>
    
    
      <category term="Vue" scheme="http://Lee981265.github.io/tags/Vue/"/>
    
      <category term="Mobileterminal" scheme="http://Lee981265.github.io/tags/Mobileterminal/"/>
    
      <category term="resize" scheme="http://Lee981265.github.io/tags/resize/"/>
    
      <category term="absolute" scheme="http://Lee981265.github.io/tags/absolute/"/>
    
  </entry>
  
  <entry>
    <title>从零开始小程序</title>
    <link href="http://Lee981265.github.io/2018/07/13/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://Lee981265.github.io/2018/07/13/从零开始小程序/</id>
    <published>2018-07-13T01:16:24.000Z</published>
    <updated>2018-10-29T03:16:26.083Z</updated>
    
    <content type="html"><![CDATA[<p>随着技术的发展着2年微信小程序犹如一匹黑马迅速崛起，新的技术出现，我们为了不与时代脱轨学习小程序很有必要！<a id="more"></a></p><h2 id="开始学习"><a href="#开始学习" class="headerlink" title="开始学习"></a>开始学习</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>IDE搭建</li><li>知识准备</li></ul><h3 id="从零开始"><a href="#从零开始" class="headerlink" title="从零开始"></a>从零开始</h3><ul><li>app.js</li><li>app.json</li><li>app.wxml</li><li>app.wxss</li></ul><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><ul><li>创建程序实例</li><li>美化ActionBar</li><li>美化页面</li><li>配置首页</li></ul><h3 id="超级Hello-World"><a href="#超级Hello-World" class="headerlink" title="超级Hello World"></a>超级Hello World</h3><ul><li>事件绑定函数</li><li>更新界面数据</li></ul><h2 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="IDE搭建"><a href="#IDE搭建" class="headerlink" title="IDE搭建"></a>IDE搭建</h3><p>就不多说了，没有内测码去下载个破解版吧，我用了一下，学习完全够了！<a href="https://github.com/gavinkwoe/weapp-ide-crack" target="_blank" rel="noopener">IDE破解版+安装教程</a></p><h3 id="知识准备"><a href="#知识准备" class="headerlink" title="知识准备"></a>知识准备</h3><p>JavaScrip还是要看看的，推荐教程 <a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="noopener">廖雪峰大神的博客</a></p><p>HTML+CSS 大概知道是干啥的就行</p><h2 id="从零开始-1"><a href="#从零开始-1" class="headerlink" title="从零开始"></a>从零开始</h2><h3 id="微信小程序中就四种类型的文件"><a href="#微信小程序中就四种类型的文件" class="headerlink" title="微信小程序中就四种类型的文件"></a>微信小程序中就四种类型的文件</h3><ul><li>js ———- JavaScrip文件</li><li>json ——– 项目配置文件，负责窗口颜色等等</li><li>wxml ——- 类似HTML文件</li><li>wxss ——- 类似CSS文件</li></ul><p>在根目录下用app来命名的这四中类型的文件，就是程序入口文件</p><p><strong>app.json</strong></p><p>必须要有这个文件，如果没有这个文件，IDE会报错，因为微信框架把这个作为配置文件入口，<br>你只需创建这个文件，里面写个大括号就行<br>以后我们会在这里对整个小程序的全局配置。记录了页面组成，配置小程序的窗口 背景色，配置导航条样式，配置默认标题。</p><p><strong>app.js</strong></p><p>必须要有这个文件，没有也是会报错！但是这个文件创建一下就行 什么都不需要写<br>以后我们可以在这个文件中监听并处理小程序的生命周期函数、声明全局变量。</p><p><strong>app.wxss</strong></p><p>这个文件不是必须的。因为它只是个全局CSS样式文件</p><p><strong>app.wxml</strong></p><p>这个也不是必须的，而且这个并不是指主界面哦~因为小程序的主页面是靠在JSON文件中配置来决定的</p><p>有了这两个文件你运行程序，IDE就不会报错了，也意味着这是最简单的微信小程序</p><p><img src="/img/wx.png" alt="文件"></p><h2 id="Hello-World-1"><a href="#Hello-World-1" class="headerlink" title="Hello World"></a>Hello World</h2><h3 id="创建程序实例"><a href="#创建程序实例" class="headerlink" title="创建程序实例"></a>创建程序实例</h3><p>app.js文件管理整个程序的生命周期，所以在里面添加如下代码：（输入App IDE会有提示）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">App(&#123;</span><br><span class="line">  onLaunch: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'App Launch'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  onShow: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'App Show'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  onHide: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'App Hide'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>具体API解释如下:</p><p><img src="/img/API.png" alt="API"></p><h3 id="美化ActionBar"><a href="#美化ActionBar" class="headerlink" title="美化ActionBar"></a>美化ActionBar</h3><p>json文件负责配置ActionBar颜色，我们只需要在里面添加如下代码即可，下图有参数说明！</p><p><img src="/img/meihau.png" alt="具体参数"></p><p><img src="/img/nav.png" alt="nav"></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"window"</span>:&#123;</span><br><span class="line">        <span class="attr">"navigationBarBackgroundColor"</span>: <span class="string">"#BBDEF8"</span>,</span><br><span class="line">        <span class="attr">"navigationBarTitleText"</span>: <span class="string">"Demo"</span>,</span><br><span class="line">        <span class="attr">"navigationBarTextStyle"</span>:<span class="string">"white"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/header.png" alt="header"></p><p>现在看ActionBar是不是像那么回事了！好接下来我们继续写我们第一个界面</p><h3 id="美化页面"><a href="#美化页面" class="headerlink" title="美化页面"></a>美化页面</h3><p>美化页面我没用到了wxml和wxssw文件<br>为了程序代码结构简洁<br>我们需要在根目录下创建一个新文件夹 <strong>名字随意</strong>， 我们这里叫pages<br>然后在pages文件夹里面再创建新文件夹 <strong>名字随意</strong>, 这里我没叫index<br>然后我们创建index.wxml文件然后在里面写入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;</span><br><span class="line">    &lt;text class=&quot;window&quot;&gt;Hello&lt;/text&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p>然后创建index.wxss文件然后在里面写下以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.window&#123;</span><br><span class="line">    color:#4995fa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们创建 index.js<br>在文件中输入如下代码（输入Page IDE会有提示）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data:&#123;</span><br><span class="line">    <span class="comment">// text:"这是一个页面"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad:<span class="function"><span class="keyword">function</span>(<span class="params">options</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 页面初始化 options为页面跳转所带来的参数</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onReady:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 页面渲染完成</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onShow:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 页面显示</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onHide:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 页面隐藏</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onUnload:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 页面关闭</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>函数解释如下：<br><img src="/img/02.png" alt="page参数"></p><h3 id="配置首页"><a href="#配置首页" class="headerlink" title="配置首页"></a>配置首页</h3><p>Json文件负责配置页面路径所以我们在里面加入如下代码 其中index的含义 其实就是指index.js文件这里需要说明一点 pages 里面的路径其实是指向js文件的 如果一个目录下没有该名称的js文件是会报错的！<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"pages":[ "pages/index/index"],</span><br></pre></td></tr></table></figure></p><p>完成了！我们来运行程序！</p><h2 id="超级Hello-World-1"><a href="#超级Hello-World-1" class="headerlink" title="超级Hello World"></a>超级Hello World</h2><p>为了学习事件绑定，以及如何将数据在页面上更新我们来做个超级Hello World，就是我点击文字，能让它变色！</p><h3 id="绑定事件"><a href="#绑定事件" class="headerlink" title="绑定事件"></a>绑定事件</h3><p>我们打开index.wxml 将里面代码改成这样<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span> <span class="tag">&lt;<span class="name">text</span> <span class="attr">catchtap</span>=<span class="string">"click"</span> <span class="attr">class</span>=<span class="string">"window"</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>其实也就是加了：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">catchtap="click"//bindtap='click'</span><br></pre></td></tr></table></figure></p><p>这两个属性是什么意思呢 别着急 我会一一解释</p><p><img src="/img/03.png" alt="tap"></p><p>上图展示了事件的一些的属性名称，这里需要注意红框标注起来的内容，区分出冒泡事件和非冒泡事件，其实冒泡事件就是需要往上面一层容器传递这个事件</p><p>看了这图 我们再来看 catchtap=”click” 的含义catch 代表非冒泡事件tap 代表点击事件所以连在一起就是非冒泡点击事件那后面那个click是啥click 其实只是个变量名字我们在index.js需要用这个名字绑定接收事件的函数我们打开index.js然后添加如下函数<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">click:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="built_in">console</span>.log(<span class="string">"点击了文字"</span>); &#125;</span><br></pre></td></tr></table></figure></p><p>,添加完后代码长这样 红框中就是 添加的这个代码</p><p><img src="/img/04.png" alt="tap"></p><p>所以其实点击事件的回调函数 就是 catchtap=”click” 中的 click 后面加上 :function() 构成的现在我们来运行程序试试 然后点击文字</p><p><img src="/img/05.png" alt="tap"><br>看是不是调用了click:function 并打印 点击了文字</p><p>好接下来我们写点击一下变色的逻辑那如何让一个文字变色呢，当然是css所以我们需要再index.wxss 中添加一个样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.window-red</span>&#123; <span class="attribute">color</span>:<span class="number">#D23933</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.window</span>&#123;<span class="attribute">color</span>:<span class="number">#49bb16</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.window-red</span>&#123;<span class="attribute">color</span>:<span class="number">#D23933</span>;&#125;</span><br></pre></td></tr></table></figure><p>然后我们进入index.js文件你会发现代码里面有个 data:{} 它不是page生命周期函数其实他是个变量的数组，这个里面申请的变量都可以在 wxml中使用<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data:&#123;</span><br><span class="line">  color:<span class="string">"window"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>color的值就是index.wxss中的样式名称然后进入index.wxml中,将class中的值改成 <br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span> <span class="attr">catchtap</span>=<span class="string">'click'</span> <span class="attr">class</span>=<span class="string">"&#123;&#123;color&#125;&#125;"</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>其实意思就是 将js文件中变量 color的值在这里使用也就是值等于 window然后我们再回到index.js文件在最上面申请一个变量控制点击然后在click:function() 函数中添加如下代码:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">click:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"点击了文字"</span>); </span><br><span class="line">  <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">    color = <span class="string">"window-red"</span>; flag = <span class="literal">false</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123; </span><br><span class="line">    color = <span class="string">"window"</span>; flag = <span class="literal">true</span>; </span><br><span class="line">  &#125; </span><br><span class="line">   <span class="keyword">this</span>.setData(&#123; color &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>完后的代码如图:<br><img src="/img/06.png" alt="tap"> </p><p>其实就是在点击是后 更换color变量的值 而更换的这个值其实就是样式的名称</p><h3 id="更新界面数据"><a href="#更新界面数据" class="headerlink" title="更新界面数据"></a>更新界面数据</h3><p>这里有个问题 我们更换完值 但是在wxml中不会立即生效所以我们需要调用this.setData()方法将值同步给wxml 让它立即生效</p><p>好了我们运行程序 点击Hello 看看是不是点一下 变一下颜色！</p><p><img src="/img/07.gif" alt="tips"></p><p>最后再补充一点 index目录下也是可以配置 json文件的也就是每个页面都可以配置自己独特的actionbar颜色等等这里的配置会覆盖 app.json文件的配置</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着技术的发展着2年微信小程序犹如一匹黑马迅速崛起，新的技术出现，我们为了不与时代脱轨学习小程序很有必要！
    
    </summary>
    
    
      <category term="Mini-apps" scheme="http://Lee981265.github.io/tags/Mini-apps/"/>
    
  </entry>
  
  <entry>
    <title>Echarts属性设置</title>
    <link href="http://Lee981265.github.io/2018/07/12/Echarts%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE/"/>
    <id>http://Lee981265.github.io/2018/07/12/Echarts属性设置/</id>
    <published>2018-07-12T09:53:47.000Z</published>
    <updated>2019-01-14T09:00:57.417Z</updated>
    
    <content type="html"><![CDATA[<p>Echarts:</p><ul><li>千万级数据可视化渲染能力</li><li>SVG + Canvas 双引擎动力更佳</li><li>数据样式分离及扁平配置让开发更便捷</li><li>首创无障碍访问支持</li><li>微信小程序、PPT，哪里都能用<a id="more"></a></li></ul><h2 id="全图默认背景"><a href="#全图默认背景" class="headerlink" title="全图默认背景"></a>全图默认背景</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backgroundColor: ‘rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)’,</span><br></pre></td></tr></table></figure><h2 id="默认色板"><a href="#默认色板" class="headerlink" title="默认色板"></a>默认色板</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">color: [<span class="string">'#ff7f50'</span>,<span class="string">'#87cefa'</span>,<span class="string">'#da70d6'</span>,<span class="string">'#32cd32'</span>,<span class="string">'#6495ed'</span>,</span><br><span class="line">    <span class="string">'#ff69b4'</span>,<span class="string">'#ba55d3'</span>,<span class="string">'#cd5c5c'</span>,<span class="string">'#ffa500'</span>,<span class="string">'#40e0d0'</span>,</span><br><span class="line">    <span class="string">'#1e90ff'</span>,<span class="string">'#ff6347'</span>,<span class="string">'#7b68ee'</span>,<span class="string">'#00fa9a'</span>,<span class="string">'#ffd700'</span>,</span><br><span class="line">    <span class="string">'#6699FF'</span>,<span class="string">'#ff6666'</span>,<span class="string">'#3cb371'</span>,<span class="string">'#b8860b'</span>,<span class="string">'#30e0e0'</span>],</span><br></pre></td></tr></table></figure><h2 id="图表标题"><a href="#图表标题" class="headerlink" title="图表标题"></a>图表标题</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;</span><br><span class="line">    x: <span class="string">'left'</span>,                <span class="comment">// 水平安放位置，默认为左对齐，可选为：</span></span><br><span class="line">                      <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                      <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">    y: <span class="string">'top'</span>,             <span class="comment">// 垂直安放位置，默认为全图顶端，可选为：</span></span><br><span class="line">                      <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                      <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">    <span class="comment">//textAlign: null          // 水平对齐方式，默认根据x设置自动调整</span></span><br><span class="line">    backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">    borderColor: <span class="string">'#ccc'</span>,          <span class="comment">// 标题边框颜色</span></span><br><span class="line">    borderWidth: <span class="number">0</span>,           <span class="comment">// 标题边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">    padding: <span class="number">5</span>,             <span class="comment">// 标题内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                              <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">    itemGap: <span class="number">10</span>,             <span class="comment">// 主副标题纵向间隔，单位px，默认为10，</span></span><br><span class="line">    textStyle: &#123;</span><br><span class="line">        fontSize: <span class="number">18</span>,</span><br><span class="line">        fontWeight: <span class="string">'bolder'</span>,</span><br><span class="line">        color: <span class="string">'#333'</span>                             <span class="comment">// 主标题文字颜色</span></span><br><span class="line">    &#125;,</span><br><span class="line">    subtextStyle: &#123;</span><br><span class="line">        color: <span class="string">'#aaa'</span>                            <span class="comment">// 副标题文字颜色</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="图例"><a href="#图例" class="headerlink" title="图例"></a>图例</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">legend: &#123;</span><br><span class="line">    orient: <span class="string">'horizontal'</span>,          <span class="comment">// 布局方式，默认为水平布局，可选为：</span></span><br><span class="line">                       <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">    x: <span class="string">'center'</span>,                <span class="comment">// 水平安放位置，默认为全图居中，可选为：</span></span><br><span class="line">                              <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                       <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">    y: <span class="string">'top'</span>,              <span class="comment">// 垂直安放位置，默认为全图顶端，可选为：</span></span><br><span class="line">                       <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                       <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">    backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">    borderColor: <span class="string">'#ccc'</span>,            <span class="comment">// 图例边框颜色</span></span><br><span class="line">    borderWidth: <span class="number">0</span>,                <span class="comment">// 图例边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">    padding: <span class="number">5</span>,                  <span class="comment">// 图例内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                               <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">    itemGap: <span class="number">10</span>,              <span class="comment">// 各个item之间的间隔，单位px，默认为10，</span></span><br><span class="line">                        <span class="comment">// 横向布局时为水平间隔，纵向布局时为纵向间隔</span></span><br><span class="line">    itemWidth: <span class="number">20</span>,             <span class="comment">// 图例图形宽度</span></span><br><span class="line">    itemHeight: <span class="number">14</span>,            <span class="comment">// 图例图形高度</span></span><br><span class="line">    textStyle: &#123;</span><br><span class="line">        color: <span class="string">'#333'</span>                              <span class="comment">// 图例文字颜色</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="值域"><a href="#值域" class="headerlink" title="值域"></a>值域</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">dataRange: &#123;</span><br><span class="line">    orient: <span class="string">'vertical'</span>,             <span class="comment">// 布局方式，默认为垂直布局，可选为：</span></span><br><span class="line">                        <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">    x: <span class="string">'left'</span>,                   <span class="comment">// 水平安放位置，默认为全图左对齐，可选为：</span></span><br><span class="line">                        <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                        <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">    y: <span class="string">'bottom'</span>,                  <span class="comment">// 垂直安放位置，默认为全图底部，可选为：</span></span><br><span class="line">                         <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                         <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">    backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">    borderColor: <span class="string">'#ccc'</span>,             <span class="comment">// 值域边框颜色</span></span><br><span class="line">    borderWidth: <span class="number">0</span>,                 <span class="comment">// 值域边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">    padding: <span class="number">5</span>,                    <span class="comment">// 值域内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                         <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">    itemGap: <span class="number">10</span>,               <span class="comment">// 各个item之间的间隔，单位px，默认为10，</span></span><br><span class="line">                        <span class="comment">// 横向布局时为水平间隔，纵向布局时为纵向间隔</span></span><br><span class="line">    itemWidth: <span class="number">20</span>,             <span class="comment">// 值域图形宽度，线性渐变水平布局宽度为该值 * 10</span></span><br><span class="line">    itemHeight: <span class="number">14</span>,            <span class="comment">// 值域图形高度，线性渐变垂直布局高度为该值 * 10</span></span><br><span class="line">    splitNumber: <span class="number">5</span>,            <span class="comment">// 分割段数，默认为5，为0时为线性渐变</span></span><br><span class="line">    color:[<span class="string">'#1e90ff'</span>,<span class="string">'#f0ffff'</span>],<span class="comment">//颜色</span></span><br><span class="line">    <span class="comment">//text:['高','低'],              // 文本，默认为数值文本</span></span><br><span class="line">    textStyle: &#123;</span><br><span class="line">        color: <span class="string">'#333'</span>                                <span class="comment">// 值域文字颜色</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="工具箱"><a href="#工具箱" class="headerlink" title="工具箱"></a>工具箱</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">toolbox: &#123;</span><br><span class="line">    orient: <span class="string">'horizontal'</span>,            <span class="comment">// 布局方式，默认为水平布局，可选为：</span></span><br><span class="line">                        <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">    x: <span class="string">'right'</span>,              <span class="comment">// 水平安放位置，默认为全图右对齐，可选为：</span></span><br><span class="line">                        <span class="comment">// 'center' ¦ 'left' ¦ 'right'</span></span><br><span class="line">                        <span class="comment">// ¦ &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">    y: <span class="string">'top'</span>,               <span class="comment">// 垂直安放位置，默认为全图顶端，可选为：</span></span><br><span class="line">                        <span class="comment">// 'top' ¦ 'bottom' ¦ 'center'</span></span><br><span class="line">                        <span class="comment">// ¦ &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">    color : [<span class="string">'#1e90ff'</span>,<span class="string">'#22bb22'</span>,<span class="string">'#4b0082'</span>,<span class="string">'#d2691e'</span>],</span><br><span class="line">    backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,    <span class="comment">// 工具箱背景颜色</span></span><br><span class="line">    borderColor: <span class="string">'#ccc'</span>,             <span class="comment">// 工具箱边框颜色</span></span><br><span class="line">    borderWidth: <span class="number">0</span>,                 <span class="comment">// 工具箱边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">    padding: <span class="number">5</span>,                    <span class="comment">// 工具箱内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                                <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">    itemGap: <span class="number">10</span>,                  <span class="comment">// 各个item之间的间隔，单位px，默认为10，</span></span><br><span class="line">                                <span class="comment">// 横向布局时为水平间隔，纵向布局时为纵向间隔</span></span><br><span class="line">    itemSize: <span class="number">16</span>,              <span class="comment">// 工具箱图形宽度</span></span><br><span class="line">    featureImageIcon : &#123;&#125;,            <span class="comment">// 自定义图片icon</span></span><br><span class="line">    featureTitle : &#123;</span><br><span class="line">        mark : <span class="string">'辅助线开关'</span>,</span><br><span class="line">        markUndo : <span class="string">'删除辅助线'</span>,</span><br><span class="line">        markClear : <span class="string">'清空辅助线'</span>,</span><br><span class="line">        dataZoom : <span class="string">'区域缩放'</span>,</span><br><span class="line">        dataZoomReset : <span class="string">'区域缩放后退'</span>,</span><br><span class="line">        dataView : <span class="string">'数据视图'</span>,</span><br><span class="line">        lineChart : <span class="string">'折线图切换'</span>,</span><br><span class="line">        barChart : <span class="string">'柱形图切换'</span>,</span><br><span class="line">        restore : <span class="string">'还原'</span>,</span><br><span class="line">        saveAsImage : <span class="string">'保存为图片'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="提示框"><a href="#提示框" class="headerlink" title="提示框"></a>提示框</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">tooltip: &#123;</span><br><span class="line">    trigger: <span class="string">'item'</span>,           <span class="comment">// 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'</span></span><br><span class="line">    showDelay: <span class="number">20</span>,             <span class="comment">// 显示延迟，添加显示延迟可以避免频繁切换，单位ms</span></span><br><span class="line">    hideDelay: <span class="number">100</span>,            <span class="comment">// 隐藏延迟，单位ms</span></span><br><span class="line">    transitionDuration : <span class="number">0.4</span>,         <span class="comment">// 动画变换时间，单位s</span></span><br><span class="line">    backgroundColor: <span class="string">'rgba(0,0,0,0.7)'</span>,  <span class="comment">// 提示背景颜色，默认为透明度为0.7的黑色</span></span><br><span class="line">    borderColor: <span class="string">'#333'</span>,            <span class="comment">// 提示边框颜色</span></span><br><span class="line">    borderRadius: <span class="number">4</span>,                <span class="comment">// 提示边框圆角，单位px，默认为4</span></span><br><span class="line">    borderWidth: <span class="number">0</span>,                <span class="comment">// 提示边框线宽，单位px，默认为0（无边框）</span></span><br><span class="line">    padding: <span class="number">5</span>,                   <span class="comment">// 提示内边距，单位px，默认各方向内边距为5，</span></span><br><span class="line">                                <span class="comment">// 接受数组分别设定上右下左边距，同css</span></span><br><span class="line">    axisPointer : &#123;                 <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span><br><span class="line">        type : <span class="string">'line'</span>,         <span class="comment">// 默认为直线，可选为：'line' | 'shadow'</span></span><br><span class="line">        lineStyle : &#123;          <span class="comment">// 直线指示器样式设置</span></span><br><span class="line">            color: <span class="string">'#48b'</span>,</span><br><span class="line">            width: <span class="number">2</span>,</span><br><span class="line">            type: <span class="string">'solid'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        shadowStyle : &#123;              <span class="comment">// 阴影指示器样式设置</span></span><br><span class="line">            width: <span class="string">'auto'</span>,         <span class="comment">// 阴影大小</span></span><br><span class="line">            color: <span class="string">'rgba(150,150,150,0.3)'</span>  <span class="comment">// 阴影颜色</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    textStyle: &#123;</span><br><span class="line">        color: <span class="string">'#fff'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="区域缩放控制器"><a href="#区域缩放控制器" class="headerlink" title="区域缩放控制器"></a>区域缩放控制器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dataZoom: &#123;</span><br><span class="line">    orient: <span class="string">'horizontal'</span>,         <span class="comment">// 布局方式，默认为水平布局，可选为：</span></span><br><span class="line">                             <span class="comment">// 'horizontal' ¦ 'vertical'</span></span><br><span class="line">    <span class="comment">// x: &#123;number&#125;,              // 水平安放位置，默认为根据grid参数适配，可选为：</span></span><br><span class="line">                             <span class="comment">// &#123;number&#125;（x坐标，单位px）</span></span><br><span class="line">    <span class="comment">// y: &#123;number&#125;,              // 垂直安放位置，默认为根据grid参数适配，可选为：</span></span><br><span class="line">                             <span class="comment">// &#123;number&#125;（y坐标，单位px）</span></span><br><span class="line">    <span class="comment">// width: &#123;number&#125;,           // 指定宽度，横向布局时默认为根据grid参数适配</span></span><br><span class="line">    <span class="comment">// height: &#123;number&#125;,          // 指定高度，纵向布局时默认为根据grid参数适配</span></span><br><span class="line">    backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,    <span class="comment">// 背景颜色</span></span><br><span class="line">    dataBackgroundColor: <span class="string">'#eee'</span>,       <span class="comment">// 数据背景颜色</span></span><br><span class="line">    fillerColor: <span class="string">'rgba(144,197,237,0.2)'</span>, <span class="comment">// 填充颜色</span></span><br><span class="line">    handleColor: <span class="string">'rgba(70,130,180,0.8)'</span>       <span class="comment">// 手柄颜色</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="网格"><a href="#网格" class="headerlink" title="网格"></a>网格</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">grid: &#123;</span><br><span class="line">    x: <span class="number">80</span>,</span><br><span class="line">    y: <span class="number">60</span>,</span><br><span class="line">    x2: <span class="number">80</span>,</span><br><span class="line">    y2: <span class="number">60</span>,</span><br><span class="line">    <span class="comment">// width: &#123;totalWidth&#125; - x - x2,</span></span><br><span class="line">    <span class="comment">// height: &#123;totalHeight&#125; - y - y2,</span></span><br><span class="line">    backgroundColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">    borderWidth: <span class="number">1</span>,</span><br><span class="line">    borderColor: <span class="string">'#ccc'</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="类目轴"><a href="#类目轴" class="headerlink" title="类目轴"></a>类目轴</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">categoryAxis: &#123;</span><br><span class="line">    position: <span class="string">'bottom'</span>,        <span class="comment">// 位置</span></span><br><span class="line">    nameLocation: <span class="string">'end'</span>,      <span class="comment">// 坐标轴名字位置，支持'start' | 'end'</span></span><br><span class="line">    boundaryGap: <span class="literal">true</span>,     <span class="comment">// 类目起始和结束两端空白策略</span></span><br><span class="line">    axisLine: &#123;            <span class="comment">// 坐标轴线</span></span><br><span class="line">        show: <span class="literal">true</span>,         <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">        lineStyle: &#123;        <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">            color: <span class="string">'#48b'</span>,</span><br><span class="line">            width: <span class="number">2</span>,</span><br><span class="line">            type: <span class="string">'solid'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    axisTick: &#123;            <span class="comment">// 坐标轴小标记</span></span><br><span class="line">        show: <span class="literal">true</span>,       <span class="comment">// 属性show控制显示与否，默认不显示</span></span><br><span class="line">        interval: <span class="string">'auto'</span>,</span><br><span class="line">        <span class="comment">// onGap: null,</span></span><br><span class="line">        inside : <span class="literal">false</span>,        <span class="comment">// 控制小标记是否在grid里</span></span><br><span class="line">        length :<span class="number">5</span>,         <span class="comment">// 属性length控制线长</span></span><br><span class="line">        lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">            color: <span class="string">'#333'</span>,</span><br><span class="line">            width: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    axisLabel: &#123;           <span class="comment">// 坐标轴文本标签，详见axis.axisLabel</span></span><br><span class="line">        show: <span class="literal">true</span>,</span><br><span class="line">        interval: <span class="string">'auto'</span>,</span><br><span class="line">        rotate: <span class="number">0</span>,</span><br><span class="line">        margin: <span class="number">8</span>,</span><br><span class="line">        <span class="comment">// formatter: null,</span></span><br><span class="line">        textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            color: <span class="string">'#333'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    splitLine: &#123;                <span class="comment">// 分隔线</span></span><br><span class="line">        show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">        <span class="comment">// onGap: null,</span></span><br><span class="line">        lineStyle: &#123;       <span class="comment">// 属性lineStyle（详见lineStyle）控制线条样式</span></span><br><span class="line">            color: [<span class="string">'#ccc'</span>],</span><br><span class="line">            width: <span class="number">1</span>,</span><br><span class="line">            type: <span class="string">'solid'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    splitArea: &#123;                <span class="comment">// 分隔区域</span></span><br><span class="line">        show: <span class="literal">false</span>,       <span class="comment">// 默认不显示，属性show控制显示与否</span></span><br><span class="line">        <span class="comment">// onGap: null,</span></span><br><span class="line">        areaStyle: &#123;        <span class="comment">// 属性areaStyle（详见areaStyle）控制区域样式</span></span><br><span class="line">            color: [<span class="string">'rgba(250,250,250,0.3)'</span>,<span class="string">'rgba(200,200,200,0.3)'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="数值型坐标轴默认参数"><a href="#数值型坐标轴默认参数" class="headerlink" title="数值型坐标轴默认参数"></a>数值型坐标轴默认参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">valueAxis: &#123;</span><br><span class="line">    position: <span class="string">'left'</span>,      <span class="comment">// 位置</span></span><br><span class="line">    nameLocation: <span class="string">'end'</span>,     <span class="comment">// 坐标轴名字位置，支持'start' | 'end'</span></span><br><span class="line">    nameTextStyle: &#123;&#125;,     <span class="comment">// 坐标轴文字样式，默认取全局样式</span></span><br><span class="line">    boundaryGap: [<span class="number">0</span>, <span class="number">0</span>],    <span class="comment">// 数值起始和结束两端空白策略</span></span><br><span class="line">    splitNumber: <span class="number">5</span>,        <span class="comment">// 分割段数，默认为5</span></span><br><span class="line">    axisLine: &#123;             <span class="comment">// 坐标轴线</span></span><br><span class="line">        show: <span class="literal">true</span>,      <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">        lineStyle: &#123;      <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">            color: <span class="string">'#48b'</span>,</span><br><span class="line">            width: <span class="number">2</span>,</span><br><span class="line">            type: <span class="string">'solid'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    axisTick: &#123;            <span class="comment">// 坐标轴小标记</span></span><br><span class="line">        show: <span class="literal">false</span>,       <span class="comment">// 属性show控制显示与否，默认不显示</span></span><br><span class="line">        inside : <span class="literal">false</span>,      <span class="comment">// 控制小标记是否在grid里</span></span><br><span class="line">        length :<span class="number">5</span>,          <span class="comment">// 属性length控制线长</span></span><br><span class="line">        lineStyle: &#123;       <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">            color: <span class="string">'#333'</span>,</span><br><span class="line">            width: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    axisLabel: &#123;           <span class="comment">// 坐标轴文本标签，详见axis.axisLabel</span></span><br><span class="line">        show: <span class="literal">true</span>,</span><br><span class="line">        rotate: <span class="number">0</span>,</span><br><span class="line">        margin: <span class="number">8</span>,</span><br><span class="line">        <span class="comment">// formatter: null,</span></span><br><span class="line">        textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            color: <span class="string">'#333'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    splitLine: &#123;                <span class="comment">// 分隔线</span></span><br><span class="line">        show: <span class="literal">true</span>,        <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">        lineStyle: &#123;          <span class="comment">// 属性lineStyle（详见lineStyle）控制线条样式</span></span><br><span class="line">            color: [<span class="string">'#ccc'</span>],</span><br><span class="line">            width: <span class="number">1</span>,</span><br><span class="line">            type: <span class="string">'solid'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    splitArea: &#123;                <span class="comment">// 分隔区域</span></span><br><span class="line">        show: <span class="literal">false</span>,       <span class="comment">// 默认不显示，属性show控制显示与否</span></span><br><span class="line">        areaStyle: &#123;       <span class="comment">// 属性areaStyle（详见areaStyle）控制区域样式</span></span><br><span class="line">            color: [<span class="string">'rgba(250,250,250,0.3)'</span>,<span class="string">'rgba(200,200,200,0.3)'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">polar : &#123;</span><br><span class="line">    center : [<span class="string">'50%'</span>, <span class="string">'50%'</span>],    <span class="comment">// 默认全局居中</span></span><br><span class="line">    radius : <span class="string">'75%'</span>,</span><br><span class="line">    startAngle : <span class="number">90</span>,</span><br><span class="line">    splitNumber : <span class="number">5</span>,</span><br><span class="line">    name : &#123;</span><br><span class="line">        show: <span class="literal">true</span>,</span><br><span class="line">        textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            color: <span class="string">'#333'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    axisLine: &#123;            <span class="comment">// 坐标轴线</span></span><br><span class="line">        show: <span class="literal">true</span>,         <span class="comment">// 默认显示，属性show控制显示与否</span></span><br><span class="line">        lineStyle: &#123;        <span class="comment">// 属性lineStyle控制线条样式</span></span><br><span class="line">            color: <span class="string">'#ccc'</span>,</span><br><span class="line">            width: <span class="number">1</span>,</span><br><span class="line">            type: <span class="string">'solid'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    axisLabel: &#123;                <span class="comment">// 坐标轴文本标签，详见axis.axisLabel</span></span><br><span class="line">        show: <span class="literal">false</span>,</span><br><span class="line">        textStyle: &#123;       <span class="comment">// 其余属性默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            color: <span class="string">'#333'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    splitArea : &#123;</span><br><span class="line">        show : <span class="literal">true</span>,</span><br><span class="line">        areaStyle : &#123;</span><br><span class="line">            color: [<span class="string">'rgba(250,250,250,0.3)'</span>,<span class="string">'rgba(200,200,200,0.3)'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    splitLine : &#123;</span><br><span class="line">        show : <span class="literal">true</span>,</span><br><span class="line">        lineStyle : &#123;</span><br><span class="line">            width : <span class="number">1</span>,</span><br><span class="line">            color : <span class="string">'#ccc'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="柱形图默认参数"><a href="#柱形图默认参数" class="headerlink" title="柱形图默认参数"></a>柱形图默认参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">bar: &#123;</span><br><span class="line">    barMinHeight: <span class="number">0</span>,            <span class="comment">// 最小高度改为0</span></span><br><span class="line">    <span class="comment">// barWidth: null,        // 默认自适应</span></span><br><span class="line">    barGap: <span class="string">'30%'</span>,           <span class="comment">// 柱间距离，默认为柱形宽度的30%，可设固定值</span></span><br><span class="line">    barCategoryGap : <span class="string">'20%'</span>,   <span class="comment">// 类目间柱形距离，默认为类目间距的20%，可设固定值</span></span><br><span class="line">    itemStyle: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">            <span class="comment">// color: '各异',</span></span><br><span class="line">            barBorderColor: <span class="string">'#fff'</span>,         <span class="comment">// 柱条边线</span></span><br><span class="line">            barBorderRadius: <span class="number">0</span>,            <span class="comment">// 柱条边线圆角，单位px，默认为0</span></span><br><span class="line">            barBorderWidth: <span class="number">1</span>,             <span class="comment">// 柱条边线线宽，单位px，默认为1</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">                                         <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                                         <span class="comment">// 'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                                        <span class="comment">// textStyle: null // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">            <span class="comment">// color: '各异',</span></span><br><span class="line">            barBorderColor: <span class="string">'rgba(0,0,0,0)'</span>,            <span class="comment">// 柱条边线</span></span><br><span class="line">            barBorderRadius: <span class="number">0</span>,                <span class="comment">// 柱条边线圆角，单位px，默认为0</span></span><br><span class="line">            barBorderWidth: <span class="number">1</span>,                     <span class="comment">// 柱条边线线宽，单位px，默认为1</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">                <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="折线图默认参数"><a href="#折线图默认参数" class="headerlink" title="折线图默认参数"></a>折线图默认参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">line: &#123;</span><br><span class="line">    itemStyle: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">                <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;,</span><br><span class="line">            lineStyle: &#123;</span><br><span class="line">                width: <span class="number">2</span>,</span><br><span class="line">                type: <span class="string">'solid'</span>,</span><br><span class="line">                shadowColor : <span class="string">'rgba(0,0,0,0)'</span>, <span class="comment">//默认透明</span></span><br><span class="line">                shadowBlur: <span class="number">5</span>,</span><br><span class="line">                shadowOffsetX: <span class="number">3</span>,</span><br><span class="line">                shadowOffsetY: <span class="number">3</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">                <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//smooth : false,</span></span><br><span class="line">    <span class="comment">//symbol: null,             // 拐点图形类型</span></span><br><span class="line">    symbolSize: <span class="number">2</span>,          <span class="comment">// 拐点图形大小</span></span><br><span class="line">    <span class="comment">//symbolRotate : null,       // 拐点图形旋转控制</span></span><br><span class="line">    showAllSymbol: <span class="literal">false</span>                   <span class="comment">// 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="K线图默认参数"><a href="#K线图默认参数" class="headerlink" title="K线图默认参数"></a>K线图默认参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">k: &#123;</span><br><span class="line">    <span class="comment">// barWidth : null              // 默认自适应</span></span><br><span class="line">    <span class="comment">// barMaxWidth : null           // 默认自适应</span></span><br><span class="line">    itemStyle: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">            color: <span class="string">'#fff'</span>,      <span class="comment">// 阳线填充颜色</span></span><br><span class="line">            color0: <span class="string">'#00aa11'</span>,  <span class="comment">// 阴线填充颜色</span></span><br><span class="line">            lineStyle: &#123;</span><br><span class="line">                width: <span class="number">1</span>,</span><br><span class="line">                color: <span class="string">'#ff3200'</span>,    <span class="comment">// 阳线边框颜色</span></span><br><span class="line">                color0: <span class="string">'#00aa11'</span>          <span class="comment">// 阴线边框颜色</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            <span class="comment">// color0: 各异</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="散点图默认参数"><a href="#散点图默认参数" class="headerlink" title="散点图默认参数"></a>散点图默认参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">scatter: &#123;</span><br><span class="line">    <span class="comment">//symbol: null,         // 图形类型</span></span><br><span class="line">    symbolSize: <span class="number">4</span>,       <span class="comment">// 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2</span></span><br><span class="line">    <span class="comment">//symbolRotate : null,   // 图形旋转控制</span></span><br><span class="line">    large: <span class="literal">false</span>,        <span class="comment">// 大规模散点图</span></span><br><span class="line">    largeThreshold: <span class="number">2000</span>,   <span class="comment">// 大规模阀值，large为true且数据量&gt;largeThreshold才启用大规模模式</span></span><br><span class="line">    itemStyle: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">                <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">            <span class="comment">// color: '各异'</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">                <span class="comment">// position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为</span></span><br><span class="line">                <span class="comment">//           'inside'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="雷达图默认参数"><a href="#雷达图默认参数" class="headerlink" title="雷达图默认参数"></a>雷达图默认参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">radar : &#123;</span><br><span class="line">    itemStyle: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            lineStyle: &#123;</span><br><span class="line">                width: <span class="number">2</span>,</span><br><span class="line">                type: <span class="string">'solid'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//symbol: null,          // 拐点图形类型</span></span><br><span class="line">    symbolSize: <span class="number">2</span>          <span class="comment">// 可计算特性参数，空数据拖拽提示图形大小</span></span><br><span class="line">    <span class="comment">//symbolRotate : null,    // 图形旋转控制</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="饼图默认参数"><a href="#饼图默认参数" class="headerlink" title="饼图默认参数"></a>饼图默认参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">pie: &#123;</span><br><span class="line">    center : [<span class="string">'50%'</span>, <span class="string">'50%'</span>],          <span class="comment">// 默认全局居中</span></span><br><span class="line">    radius : [<span class="number">0</span>, <span class="string">'75%'</span>],</span><br><span class="line">    clockWise : <span class="literal">false</span>,             <span class="comment">// 默认逆时针</span></span><br><span class="line">    startAngle: <span class="number">90</span>,</span><br><span class="line">    minAngle: <span class="number">0</span>,                 <span class="comment">// 最小角度改为0</span></span><br><span class="line">    selectedOffset: <span class="number">10</span>,         <span class="comment">// 选中是扇区偏移量</span></span><br><span class="line">    itemStyle: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            borderColor: <span class="string">'#fff'</span>,</span><br><span class="line">            borderWidth: <span class="number">1</span>,</span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">true</span>,</span><br><span class="line">                position: <span class="string">'outer'</span></span><br><span class="line">                <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;,</span><br><span class="line">            labelLine: &#123;</span><br><span class="line">                show: <span class="literal">true</span>,</span><br><span class="line">                length: <span class="number">20</span>,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    <span class="comment">// color: 各异,</span></span><br><span class="line">                    width: <span class="number">1</span>,</span><br><span class="line">                    type: <span class="string">'solid'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            borderColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">            borderWidth: <span class="number">1</span>,</span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">                <span class="comment">// position: 'outer'</span></span><br><span class="line">                <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;,</span><br><span class="line">            labelLine: &#123;</span><br><span class="line">                show: <span class="literal">false</span>,</span><br><span class="line">                length: <span class="number">20</span>,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    <span class="comment">// color: 各异,</span></span><br><span class="line">                    width: <span class="number">1</span>,</span><br><span class="line">                    type: <span class="string">'solid'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="地图默认参数"><a href="#地图默认参数" class="headerlink" title="地图默认参数"></a>地图默认参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">map: &#123;</span><br><span class="line">    mapType: <span class="string">'china'</span>,   <span class="comment">// 各省的mapType暂时都用中文</span></span><br><span class="line">    mapLocation: &#123;</span><br><span class="line">        x : <span class="string">'center'</span>,</span><br><span class="line">        y : <span class="string">'center'</span></span><br><span class="line">        <span class="comment">// width    // 自适应</span></span><br><span class="line">        <span class="comment">// height   // 自适应</span></span><br><span class="line">    &#125;,</span><br><span class="line">    showLegendSymbol : <span class="literal">true</span>,       <span class="comment">// 显示图例颜色标识（系列标识的小圆点），存在legend时生效</span></span><br><span class="line">    itemStyle: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            borderColor: <span class="string">'#fff'</span>,</span><br><span class="line">            borderWidth: <span class="number">1</span>,</span><br><span class="line">            areaStyle: &#123;</span><br><span class="line">                color: <span class="string">'#ccc'</span>   <span class="comment">//rgba(135,206,250,0.8)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span>,</span><br><span class="line">                textStyle: &#123;</span><br><span class="line">                    color: <span class="string">'rgba(139,69,19,1)'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis: &#123;                <span class="comment">// 也是选中样式</span></span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            borderColor: <span class="string">'rgba(0,0,0,0)'</span>,</span><br><span class="line">            borderWidth: <span class="number">1</span>,</span><br><span class="line">            areaStyle: &#123;</span><br><span class="line">                color: <span class="string">'rgba(255,215,0,0.8)'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span>,</span><br><span class="line">                textStyle: &#123;</span><br><span class="line">                    color: <span class="string">'rgba(139,69,19,1)'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="关系图默认参数"><a href="#关系图默认参数" class="headerlink" title="关系图默认参数"></a>关系图默认参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">force : &#123;</span><br><span class="line">    <span class="comment">// 数据map到圆的半径的最小值和最大值</span></span><br><span class="line">    minRadius : <span class="number">10</span>,</span><br><span class="line">    maxRadius : <span class="number">20</span>,</span><br><span class="line">    density : <span class="number">1.0</span>,</span><br><span class="line">    attractiveness : <span class="number">1.0</span>,</span><br><span class="line">    <span class="comment">// 初始化的随机大小位置</span></span><br><span class="line">    initSize : <span class="number">300</span>,</span><br><span class="line">    <span class="comment">// 向心力因子，越大向心力越大</span></span><br><span class="line">    centripetal : <span class="number">1</span>,</span><br><span class="line">    <span class="comment">// 冷却因子</span></span><br><span class="line">    coolDown : <span class="number">0.99</span>,</span><br><span class="line">    <span class="comment">// 分类里如果有样式会覆盖节点默认样式</span></span><br><span class="line">    itemStyle: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">                <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;,</span><br><span class="line">            nodeStyle : &#123;</span><br><span class="line">                brushType : <span class="string">'both'</span>,</span><br><span class="line">                color : <span class="string">'#f08c2e'</span>,</span><br><span class="line">                strokeColor : <span class="string">'#5182ab'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            linkStyle : &#123;</span><br><span class="line">                strokeColor : <span class="string">'#5182ab'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">                <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;,</span><br><span class="line">            nodeStyle : &#123;&#125;,</span><br><span class="line">            linkStyle : &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="弦图"><a href="#弦图" class="headerlink" title="弦图"></a>弦图</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">chord : &#123;</span><br><span class="line">    radius : [<span class="string">'65%'</span>, <span class="string">'75%'</span>],</span><br><span class="line">    center : [<span class="string">'50%'</span>, <span class="string">'50%'</span>],</span><br><span class="line">    padding : <span class="number">2</span>,</span><br><span class="line">    sort : <span class="string">'none'</span>,   <span class="comment">// can be 'none', 'ascending', 'descending'</span></span><br><span class="line">    sortSub : <span class="string">'none'</span>, <span class="comment">// can be 'none', 'ascending', 'descending'</span></span><br><span class="line">    startAngle : <span class="number">90</span>,</span><br><span class="line">    clockWise : <span class="literal">false</span>,</span><br><span class="line">    showScale : <span class="literal">false</span>,</span><br><span class="line">    showScaleText : <span class="literal">false</span>,</span><br><span class="line">    itemStyle : &#123;</span><br><span class="line">        normal : &#123;</span><br><span class="line">            label : &#123;</span><br><span class="line">                show : <span class="literal">true</span></span><br><span class="line">                <span class="comment">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;,</span><br><span class="line">            lineStyle : &#123;</span><br><span class="line">                width : <span class="number">0</span>,</span><br><span class="line">                color : <span class="string">'#000'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            chordStyle : &#123;</span><br><span class="line">                lineStyle : &#123;</span><br><span class="line">                    width : <span class="number">1</span>,</span><br><span class="line">                    color : <span class="string">'#666'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis : &#123;</span><br><span class="line">            lineStyle : &#123;</span><br><span class="line">                width : <span class="number">0</span>,</span><br><span class="line">                color : <span class="string">'#000'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            chordStyle : &#123;</span><br><span class="line">                lineStyle : &#123;</span><br><span class="line">                    width : <span class="number">2</span>,</span><br><span class="line">                    color : <span class="string">'#333'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">island: &#123;</span><br><span class="line">    r: <span class="number">15</span>,</span><br><span class="line">    calculateStep: <span class="number">0.1</span>  <span class="comment">// 滚轮可计算步长 0.1 = 10%</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">markPoint : &#123;</span><br><span class="line">    symbol: <span class="string">'pin'</span>,         <span class="comment">// 标注类型</span></span><br><span class="line">    symbolSize: <span class="number">10</span>,            <span class="comment">// 标注大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2</span></span><br><span class="line">    <span class="comment">//symbolRotate : null, // 标注旋转控制</span></span><br><span class="line">    itemStyle: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">            <span class="comment">// color: 各异，</span></span><br><span class="line">            <span class="comment">// borderColor: 各异,     // 标注边线颜色，优先于color</span></span><br><span class="line">            borderWidth: <span class="number">2</span>,         <span class="comment">// 标注边线线宽，单位px，默认为1</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">true</span>,</span><br><span class="line">                position: <span class="string">'inside'</span>    <span class="comment">// 可选为'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                <span class="comment">// textStyle: null    // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">            <span class="comment">// color: 各异</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">true</span></span><br><span class="line">                <span class="comment">// position: 'inside'    // 'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                <span class="comment">// textStyle: null     // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">markLine : &#123;</span><br><span class="line">    <span class="comment">// 标线起始和结束的symbol介绍类型，如果都一样，可以直接传string</span></span><br><span class="line">    symbol: [<span class="string">'circle'</span>, <span class="string">'arrow'</span>],</span><br><span class="line">    <span class="comment">// 标线起始和结束的symbol大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2</span></span><br><span class="line">    symbolSize: [<span class="number">2</span>, <span class="number">4</span>],</span><br><span class="line">    <span class="comment">// 标线起始和结束的symbol旋转控制</span></span><br><span class="line">    <span class="comment">//symbolRotate : null,</span></span><br><span class="line">    itemStyle: &#123;</span><br><span class="line">        normal: &#123;</span><br><span class="line">            <span class="comment">// color: 各异,           // 标线主色，线色，symbol主色</span></span><br><span class="line">            <span class="comment">// borderColor: 随color,       // 标线symbol边框颜色，优先于color</span></span><br><span class="line">            borderWidth: <span class="number">2</span>,          <span class="comment">// 标线symbol边框线宽，单位px，默认为2</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span>,</span><br><span class="line">                <span class="comment">// 可选为 'start'|'end'|'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                position: <span class="string">'inside'</span>,</span><br><span class="line">                textStyle: &#123;         <span class="comment">// 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">                    color: <span class="string">'#333'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            lineStyle: &#123;</span><br><span class="line">                <span class="comment">// color: 随borderColor,    // 主色，线色，优先级高于borderColor和color</span></span><br><span class="line">                <span class="comment">// width: 随borderWidth,    // 优先于borderWidth</span></span><br><span class="line">                type: <span class="string">'solid'</span>,</span><br><span class="line">                shadowColor : <span class="string">'rgba(0,0,0,0)'</span>, <span class="comment">//默认透明</span></span><br><span class="line">                shadowBlur: <span class="number">5</span>,</span><br><span class="line">                shadowOffsetX: <span class="number">3</span>,</span><br><span class="line">                shadowOffsetY: <span class="number">3</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        emphasis: &#123;</span><br><span class="line">            <span class="comment">// color: 各异</span></span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">false</span></span><br><span class="line">                <span class="comment">// position: 'inside'   // 'left'|'right'|'top'|'bottom'</span></span><br><span class="line">                <span class="comment">// textStyle: null    // 默认使用全局文本样式，详见TEXTSTYLE</span></span><br><span class="line">            &#125;,</span><br><span class="line">            lineStyle : &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">textStyle: &#123;</span><br><span class="line">    decoration: <span class="string">'none'</span>,</span><br><span class="line">    fontFamily: <span class="string">'Arial, Verdana, sans-serif'</span>,</span><br><span class="line">    fontFamily2: <span class="string">'微软雅黑'</span>,    <span class="comment">// IE8- 字体模糊并且不支持不同字体混排，额外指定一份</span></span><br><span class="line">    fontSize: <span class="number">12</span>,</span><br><span class="line">    fontStyle: <span class="string">'normal'</span>,</span><br><span class="line">    fontWeight: <span class="string">'normal'</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="默认标志图形类型列表"><a href="#默认标志图形类型列表" class="headerlink" title="默认标志图形类型列表"></a>默认标志图形类型列表</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">symbolList : [</span><br><span class="line">  <span class="string">'circle'</span>, <span class="string">'rectangle'</span>, <span class="string">'triangle'</span>, <span class="string">'diamond'</span>,</span><br><span class="line">  <span class="string">'emptyCircle'</span>, <span class="string">'emptyRectangle'</span>, <span class="string">'emptyTriangle'</span>, <span class="string">'emptyDiamond'</span></span><br><span class="line">],</span><br><span class="line">loadingText : <span class="string">'Loading...'</span>,</span><br><span class="line"><span class="comment">// 可计算特性配置，孤岛，提示颜色</span></span><br><span class="line">calculable: <span class="literal">false</span>,                       <span class="comment">// 默认关闭可计算特性</span></span><br><span class="line">calculableColor: <span class="string">'rgba(255,165,0,0.6)'</span>,       <span class="comment">// 拖拽提示边框颜色</span></span><br><span class="line">calculableHolderColor: <span class="string">'#ccc'</span>,               <span class="comment">// 可计算占位提示颜色</span></span><br><span class="line">nameConnector: <span class="string">' &amp; '</span>,</span><br><span class="line">valueConnector: <span class="string">' : '</span>,</span><br><span class="line">animation: <span class="literal">true</span>,</span><br><span class="line">animationThreshold: <span class="number">2500</span>,           <span class="comment">// 动画元素阀值，产生的图形原素超过2500不出动画</span></span><br><span class="line">addDataAnimation: <span class="literal">true</span>,         <span class="comment">// 动态数据接口是否开启动画效果</span></span><br><span class="line">animationDuration: <span class="number">2000</span>,</span><br><span class="line">animationEasing: <span class="string">'ExponentialOut'</span>             <span class="comment">//BounceOut</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Echarts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;千万级数据可视化渲染能力&lt;/li&gt;
&lt;li&gt;SVG + Canvas 双引擎动力更佳&lt;/li&gt;
&lt;li&gt;数据样式分离及扁平配置让开发更便捷&lt;/li&gt;
&lt;li&gt;首创无障碍访问支持&lt;/li&gt;
&lt;li&gt;微信小程序、PPT，哪里都能用
    
    </summary>
    
      <category term="Echarts" scheme="http://Lee981265.github.io/categories/Echarts/"/>
    
    
      <category term="Echarts" scheme="http://Lee981265.github.io/tags/Echarts/"/>
    
  </entry>
  
  <entry>
    <title>NodeJs</title>
    <link href="http://Lee981265.github.io/2018/07/12/NodeJs/"/>
    <id>http://Lee981265.github.io/2018/07/12/NodeJs/</id>
    <published>2018-07-12T09:52:24.000Z</published>
    <updated>2018-10-29T03:15:58.582Z</updated>
    
    <content type="html"><![CDATA[<p>尽请期待！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;尽请期待！&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="NodeJs" scheme="http://Lee981265.github.io/tags/NodeJs/"/>
    
  </entry>
  
  <entry>
    <title>Ajax</title>
    <link href="http://Lee981265.github.io/2018/07/12/Ajax/"/>
    <id>http://Lee981265.github.io/2018/07/12/Ajax/</id>
    <published>2018-07-12T09:50:31.000Z</published>
    <updated>2018-10-29T03:15:19.083Z</updated>
    
    <content type="html"><![CDATA[<p>敬请期待！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;敬请期待！&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Ajax" scheme="http://Lee981265.github.io/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>初识PHP</title>
    <link href="http://Lee981265.github.io/2018/07/12/%E5%88%9D%E8%AF%86PHP/"/>
    <id>http://Lee981265.github.io/2018/07/12/初识PHP/</id>
    <published>2018-07-12T09:46:28.000Z</published>
    <updated>2018-10-29T03:16:33.719Z</updated>
    
    <content type="html"><![CDATA[<p>PHP（外文名:PHP: Hypertext Preprocessor）：超文本预处理器。是一种通用开源脚本语言。语法吸收了C语言、Java和Perl的特点，利于学习，使用广泛，主要适用于Web开发领域。PHP 独特的语法混合了C、Java、Perl以及PHP自创的语法。它可以比CGI或者Perl更快速地执行动态网页用PHP做出的动态页面与其他的编程语言相比，PHP是将程序嵌入到HTML（标准通用标记语言下的一个应用）文档中去执行，执行效率比完全生成HTML标记的CGI要高许多；PHP还可以执行编译后代码，编译可以达到加密和优化代码运行，使代码运行更快。以前是没有前端这个职位的，随着计算机语言的发展Ajax的出现，有了前后端分离这一概念。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;PHP（外文名:PHP: Hypertext Preprocessor）：超文本预处理器。是一种通用开源脚本语言。语法吸收了C语言、Java和Perl的特点，利于学习，使用广泛，主要适用于Web开发领域。PHP 独特的语法混合了C、Java、Perl以及PHP自创的语法。它
      
    
    </summary>
    
    
      <category term="PHP" scheme="http://Lee981265.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Nginx快速开端口</title>
    <link href="http://Lee981265.github.io/2018/07/12/Nginx/"/>
    <id>http://Lee981265.github.io/2018/07/12/Nginx/</id>
    <published>2018-07-12T09:17:00.000Z</published>
    <updated>2018-10-29T03:15:54.476Z</updated>
    
    <content type="html"><![CDATA[<p>对于一个前端来说，运行一些代码有些特殊情况需要开设端口。起初我使用静态服务器用sumlime,后面陆续使用wampserver,xampp;但是有一次换电脑了，需要重新下载，糟糕的的是突然下载不了，项目于是停止不前；庆幸的是以为Java同事告诉我用Nginx开设端口。我在这里把我这个方法分享给大家！<a id="more"></a></p><h2 id="第一步下载Nginx"><a href="#第一步下载Nginx" class="headerlink" title="第一步下载Nginx"></a>第一步下载Nginx</h2><p>下载地址：<a href="http://nginx.org/" target="_blank" rel="noopener">http://nginx.org/</a></p><h2 id="第二步配置config"><a href="#第二步配置config" class="headerlink" title="第二步配置config"></a>第二步配置config</h2><p>进入conf/nignx.conf文件具体配置如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">    #user  nobody;</span><br><span class="line">    worker_processes  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    #error_log  logs/error.log;</span><br><span class="line">    #error_log  logs/error.log  notice;</span><br><span class="line">    #error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">    #pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    events &#123;</span><br><span class="line">        worker_connections  <span class="number">1024</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    http &#123;</span><br><span class="line">        include       mime.types;</span><br><span class="line">        default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">        #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">        #                  '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">        #                  '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line"></span><br><span class="line">        #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">        sendfile        on;</span><br><span class="line">        #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">        #keepalive_timeout  0;</span><br><span class="line">        keepalive_timeout  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">        #gzip  on;</span><br><span class="line"></span><br><span class="line">        server &#123;</span><br><span class="line">            listen       80; #端口</span><br><span class="line">            server_name  localhost;</span><br><span class="line"></span><br><span class="line">            #charset koi8-r;</span><br><span class="line"></span><br><span class="line">            #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">            location / &#123;</span><br><span class="line">                root   F:\GitMap1\echarts3-chinese-map-drill-down; #真实路径</span><br><span class="line">                index  index.html index.htm; #可识别的目标文件</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">            # redirect server error pages to the static page /50x.html</span><br><span class="line">            #</span><br><span class="line">            error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">            location = <span class="regexp">/50x.html &#123;</span></span><br><span class="line"><span class="regexp">                root   html;</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line"><span class="regexp">            #</span></span><br><span class="line"><span class="regexp">            #location ~ \.php$ &#123;</span></span><br><span class="line"><span class="regexp">            #    proxy_pass   http:/</span><span class="regexp">/127.0.0.1;</span></span><br><span class="line"><span class="regexp">            #&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line"><span class="regexp">            #</span></span><br><span class="line"><span class="regexp">            #location ~ \.php$ &#123;</span></span><br><span class="line"><span class="regexp">            #    root           html;</span></span><br><span class="line"><span class="regexp">            #    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line"><span class="regexp">            #    fastcgi_index  index.php;</span></span><br><span class="line"><span class="regexp">            #    fastcgi_param  SCRIPT_FILENAME  /</span>scripts$fastcgi_script_name;</span><br><span class="line">            #    include        fastcgi_params;</span><br><span class="line">            #&#125;</span><br><span class="line"></span><br><span class="line">            # deny access to .htaccess files, if Apache's document root</span><br><span class="line">            # concurs with nginx's one</span><br><span class="line">            #</span><br><span class="line">            #location ~ /\.ht &#123;</span><br><span class="line">            #    deny  all;</span><br><span class="line">            #&#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        server &#123;</span><br><span class="line">            listen       8000; #端口</span><br><span class="line">        </span><br><span class="line">            server_name  localhost;</span><br><span class="line"></span><br><span class="line">            location / &#123;</span><br><span class="line">                root   F:\GitMap1\echarts3-chinese-map-drill-down; #真实路径</span><br><span class="line">                index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        server &#123;</span><br><span class="line">            listen       <span class="number">8080</span>;</span><br><span class="line">        </span><br><span class="line">            server_name  localhost;</span><br><span class="line"></span><br><span class="line">            location / &#123;</span><br><span class="line">                root   F:\NewRequest\jingqingan_ganzhou;</span><br><span class="line">                index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">        #</span><br><span class="line">        #server &#123;</span><br><span class="line">        #    listen       8000;</span><br><span class="line">        #    listen       somename:8080;</span><br><span class="line">        #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">        #    location / &#123;</span><br><span class="line">        #        root   html;</span><br><span class="line">        #        index  index.html index.htm;</span><br><span class="line">        #    &#125;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        # HTTPS server</span><br><span class="line">        #</span><br><span class="line">        #server &#123;</span><br><span class="line">        #    listen       443 ssl;</span><br><span class="line">        #    server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #    ssl_certificate      cert.pem;</span><br><span class="line">        #    ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">        #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">        #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">        #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">        #    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">        #    location / &#123;</span><br><span class="line">        #        root   html;</span><br><span class="line">        #        index  index.html index.htm;</span><br><span class="line">        #    &#125;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Windows下使用nginx命令启动"><a href="#Windows下使用nginx命令启动" class="headerlink" title="Windows下使用nginx命令启动"></a>Windows下使用nginx命令启动</h2><p>在Windows下使用Nginx，我们需要掌握一些基本的操作命令，比如：启动、停止Nginx服务，重新载入Nginx等，下面我就进行一些简单的介绍。</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\server\nginx<span class="number">-1.0</span><span class="number">.2</span>&gt;start nginx</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">C:\server\nginx<span class="number">-1.0</span><span class="number">.2</span>&gt;nginx.exe</span><br></pre></td></tr></table></figure><p><strong><em>注：建议使用第一种，第二种会使你的cmd窗口一直处于执行中，不能进行其他命令操作。</em></strong></p><h3 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\server\nginx<span class="number">-1.0</span><span class="number">.2</span>&gt;nginx.exe -s stop</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">C:\server\nginx<span class="number">-1.0</span><span class="number">.2</span>&gt;nginx.exe -s quit</span><br></pre></td></tr></table></figure><p><strong><em>注：stop是快速停止nginx，可能并不保存相关信息；quit是完整有序的停止nginx，并保存相关信息。</em></strong></p><h3 id="重新载入Nginx"><a href="#重新载入Nginx" class="headerlink" title="重新载入Nginx"></a>重新载入Nginx</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\server\nginx<span class="number">-1.0</span><span class="number">.2</span>&gt;nginx.exe -s reload</span><br></pre></td></tr></table></figure><p>当配置信息修改，需要重新载入这些配置时使用此命令。</p><h3 id="重新打开日志文件："><a href="#重新打开日志文件：" class="headerlink" title="重新打开日志文件："></a>重新打开日志文件：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\server\nginx<span class="number">-1.0</span><span class="number">.2</span>&gt;nginx.exe -s reopen</span><br></pre></td></tr></table></figure><h3 id="查看Nginx版本："><a href="#查看Nginx版本：" class="headerlink" title="查看Nginx版本："></a>查看Nginx版本：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\server\nginx<span class="number">-1.0</span><span class="number">.2</span>&gt;nginx -v</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于一个前端来说，运行一些代码有些特殊情况需要开设端口。起初我使用静态服务器用sumlime,后面陆续使用wampserver,xampp;但是有一次换电脑了，需要重新下载，糟糕的的是突然下载不了，项目于是停止不前；庆幸的是以为Java同事告诉我用Nginx开设端口。我在这里把我这个方法分享给大家！
    
    </summary>
    
    
      <category term="Nginx" scheme="http://Lee981265.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>简易Python</title>
    <link href="http://Lee981265.github.io/2018/07/12/%E7%AE%80%E6%98%93Python/"/>
    <id>http://Lee981265.github.io/2018/07/12/简易Python/</id>
    <published>2018-07-12T09:04:13.000Z</published>
    <updated>2018-10-29T03:16:56.044Z</updated>
    
    <content type="html"><![CDATA[<p>Python是由吉多·范罗苏姆(Guido Van Rossum)在90年代早期设计。它是如今最常用的编程 语言之一。它的语法简洁且优美，几乎就是可执行的伪代码。</p><p>注意：这篇教程是用Python3写的。</p><p>下面一起来学习吧！<a id="more"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment"># 用井字符开头的是单行注释</span></span><br><span class="line"></span><br><span class="line">    <span class="string">""" 多行字符串用三个引号</span></span><br><span class="line"><span class="string">        包裹，也常被用来做多</span></span><br><span class="line"><span class="string">        行注释</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment">## 1. 原始数据类型和运算符</span></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 整数</span></span><br><span class="line">    <span class="number">3</span>  <span class="comment"># =&gt; 3</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 算术运算没有什么出乎意料的</span></span><br><span class="line">    <span class="number">1</span> + <span class="number">1</span>  <span class="comment"># =&gt; 2</span></span><br><span class="line">    <span class="number">8</span> - <span class="number">1</span>  <span class="comment"># =&gt; 7</span></span><br><span class="line">    <span class="number">10</span> * <span class="number">2</span>  <span class="comment"># =&gt; 20</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 但是除法例外，会自动转换成浮点数</span></span><br><span class="line">    <span class="number">35</span> / <span class="number">5</span>  <span class="comment"># =&gt; 7.0</span></span><br><span class="line">    <span class="number">5</span> / <span class="number">3</span>  <span class="comment"># =&gt; 1.6666666666666667</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 整数除法的结果都是向下取整</span></span><br><span class="line">    <span class="number">5</span> // <span class="number">3</span>     <span class="comment"># =&gt; 1</span></span><br><span class="line">    <span class="number">5.0</span> // <span class="number">3.0</span> <span class="comment"># =&gt; 1.0 # 浮点数也可以</span></span><br><span class="line">    <span class="number">-5</span> // <span class="number">3</span>  <span class="comment"># =&gt; -2</span></span><br><span class="line">    <span class="number">-5.0</span> // <span class="number">3.0</span> <span class="comment"># =&gt; -2.0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 浮点数的运算结果也是浮点数</span></span><br><span class="line">    <span class="number">3</span> * <span class="number">2.0</span> <span class="comment"># =&gt; 6.0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 模除</span></span><br><span class="line">    <span class="number">7</span> % <span class="number">3</span> <span class="comment"># =&gt; 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># x的y次方</span></span><br><span class="line">    <span class="number">2</span>**<span class="number">4</span> <span class="comment"># =&gt; 16</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用括号决定优先级</span></span><br><span class="line">    (<span class="number">1</span> + <span class="number">3</span>) * <span class="number">2</span>  <span class="comment"># =&gt; 8</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 布尔值</span></span><br><span class="line">    <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">False</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 用not取非</span></span><br><span class="line">    <span class="keyword">not</span> <span class="keyword">True</span>  <span class="comment"># =&gt; False</span></span><br><span class="line">    <span class="keyword">not</span> <span class="keyword">False</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 逻辑运算符，注意and和or都是小写</span></span><br><span class="line">    <span class="keyword">True</span> <span class="keyword">and</span> <span class="keyword">False</span> <span class="comment">#=&gt; False</span></span><br><span class="line">    <span class="keyword">False</span> <span class="keyword">or</span> <span class="keyword">True</span> <span class="comment">#=&gt; True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 整数也可以当作布尔值</span></span><br><span class="line">    <span class="number">0</span> <span class="keyword">and</span> <span class="number">2</span> <span class="comment">#=&gt; 0</span></span><br><span class="line">    <span class="number">-5</span> <span class="keyword">or</span> <span class="number">0</span> <span class="comment">#=&gt; -5</span></span><br><span class="line">    <span class="number">0</span> == <span class="keyword">False</span> <span class="comment">#=&gt; True</span></span><br><span class="line">    <span class="number">2</span> == <span class="keyword">True</span> <span class="comment">#=&gt; False</span></span><br><span class="line">    <span class="number">1</span> == <span class="keyword">True</span> <span class="comment">#=&gt; True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用==判断相等</span></span><br><span class="line">    <span class="number">1</span> == <span class="number">1</span>  <span class="comment"># =&gt; True</span></span><br><span class="line">    <span class="number">2</span> == <span class="number">1</span>  <span class="comment"># =&gt; False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用!=判断不等</span></span><br><span class="line">    <span class="number">1</span> != <span class="number">1</span>  <span class="comment"># =&gt; False</span></span><br><span class="line">    <span class="number">2</span> != <span class="number">1</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 比较大小</span></span><br><span class="line">    <span class="number">1</span> &lt; <span class="number">10</span>  <span class="comment"># =&gt; True</span></span><br><span class="line">    <span class="number">1</span> &gt; <span class="number">10</span>  <span class="comment"># =&gt; False</span></span><br><span class="line">    <span class="number">2</span> &lt;= <span class="number">2</span>  <span class="comment"># =&gt; True</span></span><br><span class="line">    <span class="number">2</span> &gt;= <span class="number">2</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 大小比较可以连起来！</span></span><br><span class="line">    <span class="number">1</span> &lt; <span class="number">2</span> &lt; <span class="number">3</span>  <span class="comment"># =&gt; True</span></span><br><span class="line">    <span class="number">2</span> &lt; <span class="number">3</span> &lt; <span class="number">2</span>  <span class="comment"># =&gt; False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 字符串用单引双引都可以</span></span><br><span class="line">    <span class="string">"这是个字符串"</span></span><br><span class="line">    <span class="string">'这也是个字符串'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用加号连接字符串</span></span><br><span class="line">    <span class="string">"Hello "</span> + <span class="string">"world!"</span>  <span class="comment"># =&gt; "Hello world!"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 字符串可以被当作字符列表</span></span><br><span class="line">    <span class="string">"This is a string"</span>[<span class="number">0</span>]  <span class="comment"># =&gt; 'T'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用.format来格式化字符串</span></span><br><span class="line">    <span class="string">"&#123;&#125; can be &#123;&#125;"</span>.format(<span class="string">"strings"</span>, <span class="string">"interpolated"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可以重复参数以节省时间</span></span><br><span class="line">    <span class="string">"&#123;0&#125; be nimble, &#123;0&#125; be quick, &#123;0&#125; jump over the &#123;1&#125;"</span>.format(<span class="string">"Jack"</span>, <span class="string">"candle stick"</span>)</span><br><span class="line">    <span class="comment">#=&gt; "Jack be nimble, Jack be quick, Jack jump over the candle stick"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果不想数参数，可以用关键字</span></span><br><span class="line">    <span class="string">"&#123;name&#125; wants to eat &#123;food&#125;"</span>.format(name=<span class="string">"Bob"</span>, food=<span class="string">"lasagna"</span>) <span class="comment">#=&gt; "Bob wants to eat lasagna"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果你的Python3程序也要在Python2.5以下环境运行，也可以用老式的格式化语法</span></span><br><span class="line">    <span class="string">"%s can be %s the %s way"</span> % (<span class="string">"strings"</span>, <span class="string">"interpolated"</span>, <span class="string">"old"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># None是一个对象</span></span><br><span class="line">    <span class="keyword">None</span>  <span class="comment"># =&gt; None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 当与None进行比较时不要用 ==，要用is。is是用来比较两个变量是否指向同一个对象。</span></span><br><span class="line">    <span class="string">"etc"</span> <span class="keyword">is</span> <span class="keyword">None</span>  <span class="comment"># =&gt; False</span></span><br><span class="line">    <span class="keyword">None</span> <span class="keyword">is</span> <span class="keyword">None</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># None，0，空字符串，空列表，空字典都算是False</span></span><br><span class="line">    <span class="comment"># 所有其他值都是True</span></span><br><span class="line">    bool(<span class="number">0</span>)  <span class="comment"># =&gt; False</span></span><br><span class="line">    bool(<span class="string">""</span>)  <span class="comment"># =&gt; False</span></span><br><span class="line">    bool([]) <span class="comment">#=&gt; False</span></span><br><span class="line">    bool(&#123;&#125;) <span class="comment">#=&gt; False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment">## 2. 变量和集合</span></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print是内置的打印函数</span></span><br><span class="line">    print(<span class="string">"I'm Python. Nice to meet you!"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在给变量赋值前不用提前声明</span></span><br><span class="line">    <span class="comment"># 传统的变量命名是小写，用下划线分隔单词</span></span><br><span class="line">    some_var = <span class="number">5</span></span><br><span class="line">    some_var  <span class="comment"># =&gt; 5</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问未赋值的变量会抛出异常</span></span><br><span class="line">    <span class="comment"># 参考流程控制一段来学习异常处理</span></span><br><span class="line">    some_unknown_var  <span class="comment"># 抛出NameError</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用列表(list)储存序列</span></span><br><span class="line">    li = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建列表时也可以同时赋给元素</span></span><br><span class="line">    other_li = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用append在列表最后追加元素</span></span><br><span class="line">    li.append(<span class="number">1</span>)    <span class="comment"># li现在是[1]</span></span><br><span class="line">    li.append(<span class="number">2</span>)    <span class="comment"># li现在是[1, 2]</span></span><br><span class="line">    li.append(<span class="number">4</span>)    <span class="comment"># li现在是[1, 2, 4]</span></span><br><span class="line">    li.append(<span class="number">3</span>)    <span class="comment"># li现在是[1, 2, 4, 3]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用pop从列表尾部删除</span></span><br><span class="line">    li.pop()        <span class="comment"># =&gt; 3 且li现在是[1, 2, 4]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 把3再放回去</span></span><br><span class="line">    li.append(<span class="number">3</span>)    <span class="comment"># li变回[1, 2, 4, 3]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 列表存取跟数组一样</span></span><br><span class="line">    li[<span class="number">0</span>]  <span class="comment"># =&gt; 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 取出最后一个元素</span></span><br><span class="line">    li[<span class="number">-1</span>]  <span class="comment"># =&gt; 3</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 越界存取会造成IndexError</span></span><br><span class="line">    li[<span class="number">4</span>]  <span class="comment"># 抛出IndexError</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 列表有切割语法</span></span><br><span class="line">    li[<span class="number">1</span>:<span class="number">3</span>]  <span class="comment"># =&gt; [2, 4]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 取尾</span></span><br><span class="line">    li[<span class="number">2</span>:]  <span class="comment"># =&gt; [4, 3]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 取头</span></span><br><span class="line">    li[:<span class="number">3</span>]  <span class="comment"># =&gt; [1, 2, 4]</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 隔一个取一个</span></span><br><span class="line">    li[::<span class="number">2</span>]   <span class="comment"># =&gt;[1, 4]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 倒排列表</span></span><br><span class="line">    li[::<span class="number">-1</span>]   <span class="comment"># =&gt; [3, 4, 2, 1]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可以用三个参数的任何组合来构建切割</span></span><br><span class="line">    <span class="comment"># li[始:终:步伐]</span></span><br><span class="line">    <span class="comment"># 用del删除任何一个元素</span></span><br><span class="line">    <span class="keyword">del</span> li[<span class="number">2</span>]   <span class="comment"># li is now [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 列表可以相加</span></span><br><span class="line">    <span class="comment"># 注意：li和other_li的值都不变</span></span><br><span class="line">    li + other_li   <span class="comment"># =&gt; [1, 2, 3, 4, 5, 6]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用extend拼接列表</span></span><br><span class="line">    li.extend(other_li)   <span class="comment"># li现在是[1, 2, 3, 4, 5, 6]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用in测试列表是否包含值</span></span><br><span class="line">    <span class="number">1</span> <span class="keyword">in</span> li   <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用len取列表长度</span></span><br><span class="line">    len(li)   <span class="comment"># =&gt; 6</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 元组是不可改变的序列</span></span><br><span class="line">    tup = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">    tup[<span class="number">0</span>]   <span class="comment"># =&gt; 1</span></span><br><span class="line">    tup[<span class="number">0</span>] = <span class="number">3</span>  <span class="comment"># 抛出TypeError</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 列表允许的操作元组大都可以</span></span><br><span class="line">    len(tup)   <span class="comment"># =&gt; 3</span></span><br><span class="line">    tup + (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)   <span class="comment"># =&gt; (1, 2, 3, 4, 5, 6)</span></span><br><span class="line">    tup[:<span class="number">2</span>]   <span class="comment"># =&gt; (1, 2)</span></span><br><span class="line">    <span class="number">2</span> <span class="keyword">in</span> tup   <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可以把元组合列表解包，赋值给变量</span></span><br><span class="line">    a, b, c = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)     <span class="comment"># 现在a是1，b是2，c是3</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 元组周围的括号是可以省略的</span></span><br><span class="line">    d, e, f = <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 交换两个变量的值就这么简单</span></span><br><span class="line">    e, d = d, e     <span class="comment"># 现在d是5，e是4</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用字典表达映射关系</span></span><br><span class="line">    empty_dict = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化的字典</span></span><br><span class="line">    filled_dict = &#123;<span class="string">"one"</span>: <span class="number">1</span>, <span class="string">"two"</span>: <span class="number">2</span>, <span class="string">"three"</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用[]取值</span></span><br><span class="line">    filled_dict[<span class="string">"one"</span>]   <span class="comment"># =&gt; 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用keys获得所有的键。因为keys返回一个可迭代对象，所以在这里把结果包在list里。我们下面会详细介绍可迭代。</span></span><br><span class="line">    <span class="comment"># 注意：字典键的顺序是不定的，你得到的结果可能和以下不同。</span></span><br><span class="line">    list(filled_dict.keys())   <span class="comment"># =&gt; ["three", "two", "one"]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用values获得所有的值。跟keys一样，要用list包起来，顺序也可能不同。</span></span><br><span class="line">    list(filled_dict.values())   <span class="comment"># =&gt; [3, 2, 1]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用in测试一个字典是否包含一个键</span></span><br><span class="line">    <span class="string">"one"</span> <span class="keyword">in</span> filled_dict   <span class="comment"># =&gt; True</span></span><br><span class="line">    <span class="number">1</span> <span class="keyword">in</span> filled_dict   <span class="comment"># =&gt; False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问不存在的键会导致KeyError</span></span><br><span class="line">    filled_dict[<span class="string">"four"</span>]   <span class="comment"># KeyError</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用get来避免KeyError</span></span><br><span class="line">    filled_dict.get(<span class="string">"one"</span>)   <span class="comment"># =&gt; 1</span></span><br><span class="line">    filled_dict.get(<span class="string">"four"</span>)   <span class="comment"># =&gt; None</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 当键不存在的时候get方法可以返回默认值</span></span><br><span class="line">    filled_dict.get(<span class="string">"one"</span>, <span class="number">4</span>)   <span class="comment"># =&gt; 1</span></span><br><span class="line">    filled_dict.get(<span class="string">"four"</span>, <span class="number">4</span>)   <span class="comment"># =&gt; 4</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># setdefault方法只有当键不存在的时候插入新值</span></span><br><span class="line">    filled_dict.setdefault(<span class="string">"five"</span>, <span class="number">5</span>)  <span class="comment"># filled_dict["five"]设为5</span></span><br><span class="line">    filled_dict.setdefault(<span class="string">"five"</span>, <span class="number">6</span>)  <span class="comment"># filled_dict["five"]还是5</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 字典赋值</span></span><br><span class="line">    filled_dict.update(&#123;<span class="string">"four"</span>:<span class="number">4</span>&#125;) <span class="comment">#=&gt; &#123;"one": 1, "two": 2, "three": 3, "four": 4&#125;</span></span><br><span class="line">    filled_dict[<span class="string">"four"</span>] = <span class="number">4</span>  <span class="comment"># 另一种赋值方法</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用del删除</span></span><br><span class="line">    <span class="keyword">del</span> filled_dict[<span class="string">"one"</span>]  <span class="comment"># 从filled_dict中把one删除</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用set表达集合</span></span><br><span class="line">    empty_set = set()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化一个集合，语法跟字典相似。</span></span><br><span class="line">    some_set = &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;   <span class="comment"># some_set现在是&#123;1, 2, 3, 4&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可以把集合赋值于变量</span></span><br><span class="line">    filled_set = some_set</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 为集合添加元素</span></span><br><span class="line">    filled_set_add(<span class="number">5</span>)   <span class="comment"># filled_set现在是&#123;1, 2, 3, 4, 5&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># &amp; 取交集</span></span><br><span class="line">    other_set = &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">    filled_set &amp; other_set   <span class="comment"># =&gt; &#123;3, 4, 5&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># | 取并集</span></span><br><span class="line">    filled_set | other_set   <span class="comment"># =&gt; &#123;1, 2, 3, 4, 5, 6&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># - 取补集</span></span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125; - &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>&#125;   <span class="comment"># =&gt; &#123;1, 4&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># in 测试集合是否包含元素</span></span><br><span class="line">    <span class="number">2</span> <span class="keyword">in</span> filled_set   <span class="comment"># =&gt; True</span></span><br><span class="line">    <span class="number">10</span> <span class="keyword">in</span> filled_set   <span class="comment"># =&gt; False</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment">## 3. 流程控制和迭代器</span></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment"># 先随便定义一个变量</span></span><br><span class="line">    some_var = <span class="number">5</span></span><br><span class="line">    <span class="comment"># 这是一个if语句。注意缩进在Python里是有意义的</span></span><br><span class="line">    <span class="comment"># 打印出"some_var比10小"</span></span><br><span class="line">    <span class="keyword">if</span> some_var &gt; <span class="number">10</span>:</span><br><span class="line">        print(<span class="string">"some_var比10大"</span>)</span><br><span class="line">    <span class="keyword">elif</span> some_var &lt; <span class="number">10</span>:    <span class="comment"># elif句是可选的</span></span><br><span class="line">        print(<span class="string">"some_var比10小"</span>)</span><br><span class="line">    <span class="keyword">else</span>:                  <span class="comment"># else也是可选的</span></span><br><span class="line">        print(<span class="string">"some_var就是10"</span>)</span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    用for循环语句遍历列表</span></span><br><span class="line"><span class="string">    打印:</span></span><br><span class="line"><span class="string">        dog is a mammal</span></span><br><span class="line"><span class="string">        cat is a mammal</span></span><br><span class="line"><span class="string">        mouse is a mammal</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">for</span> animal <span class="keyword">in</span> [<span class="string">"dog"</span>, <span class="string">"cat"</span>, <span class="string">"moouse"</span>]:</span><br><span class="line">        print(<span class="string">"&#123;&#125; is a animal"</span>.format(animal))</span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    "range(number)"返回数字列表从0到给的数字</span></span><br><span class="line"><span class="string">    打印:</span></span><br><span class="line"><span class="string">        0</span></span><br><span class="line"><span class="string">        1</span></span><br><span class="line"><span class="string">        2</span></span><br><span class="line"><span class="string">        3</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        print(i)</span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    while循环直到条件不满足</span></span><br><span class="line"><span class="string">    打印:</span></span><br><span class="line"><span class="string">        0</span></span><br><span class="line"><span class="string">        1</span></span><br><span class="line"><span class="string">        2</span></span><br><span class="line"><span class="string">        3</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> x &lt; <span class="number">4</span>:</span><br><span class="line">        print(x)</span><br><span class="line">        x += <span class="number">1</span>  <span class="comment"># x = x + 1 的简写</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 用try/except块处理异常状况</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 用raise抛弃异常</span></span><br><span class="line">        <span class="keyword">raise</span> IndexError(<span class="string">"This is an index error"</span>)</span><br><span class="line">    <span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">pass</span>    <span class="comment"># pass是无操作，但是应该在这里处理错误</span></span><br><span class="line">    <span class="keyword">except</span> (TypeError, NameError):</span><br><span class="line">        <span class="keyword">pass</span>    <span class="comment"># 可以同时处理不同类的错误</span></span><br><span class="line">    <span class="keyword">else</span>:   <span class="comment"># else语句是可选的，必须在所有的except之后</span></span><br><span class="line">        print(<span class="string">"All good!"</span>)   <span class="comment"># 只有当try运行完没有错误的时候这句才会运行</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Python提供一个叫做可迭代(iterable)的基本抽象。一个可迭代对象是可以被当作序列</span></span><br><span class="line">    <span class="comment"># 的对象。比如说上面range返回的对象就是可迭代的。</span></span><br><span class="line">    filled_dict = &#123;<span class="string">"one"</span>: <span class="number">1</span>, <span class="string">"two"</span>: <span class="number">2</span>, <span class="string">"three"</span>: <span class="number">3</span>&#125;</span><br><span class="line">    our_iterable = filled_dic.keys()</span><br><span class="line">    print(our_iterable) <span class="comment"># =&gt; range(1,10) 是一个实现可迭代接口的对象</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 可迭代对象可以遍历</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> our_iterable:</span><br><span class="line">        print(i)    <span class="comment"># 打印 one, two, three</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 但是不可以随机访问</span></span><br><span class="line">    our_iterable[<span class="number">1</span>]  <span class="comment"># 抛出TypeError</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可迭代对象知道怎么生成迭代器</span></span><br><span class="line">    our_iterable = iter(our_iterable)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 迭代器是一个可以记住遍历的位置的对象</span></span><br><span class="line">    <span class="comment"># 用__next__可以取得下一个元素</span></span><br><span class="line">    our_iterable.__next__()  <span class="comment">#=&gt; "one"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 再一次调用__next__时会记得位置</span></span><br><span class="line">    our_iterator.__next__()  <span class="comment">#=&gt; "two"</span></span><br><span class="line">    our_iterator.__next__()  <span class="comment">#=&gt; "three"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 当迭代器所有元素都取出后，会抛出StopIteration</span></span><br><span class="line">    our_iterator.__next__() <span class="comment"># 抛出StopIteration</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可以用list一次取出迭代器所有元素</span></span><br><span class="line">    list(filled_dict.keys())  <span class="comment">#=&gt; Returns ["one", "two", "three"]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment">## 4. 函数</span></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment"># 用def定义新函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        print(<span class="string">"x is &#123;&#125; and y is &#123;&#125;"</span>.formatm(x, y))</span><br><span class="line">        <span class="keyword">return</span> x + y    用<span class="keyword">return</span>语句返回</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 调用函数</span></span><br><span class="line">    add(<span class="number">5</span>, <span class="number">6</span>)   <span class="comment"># =&gt; 打印出"x is 5 and y is 6"并且返回11</span></span><br><span class="line">    <span class="comment"># 也可以用关键字参数来调用函数</span></span><br><span class="line">    add(y=<span class="number">6</span>, x=<span class="number">5</span>)   <span class="comment"># 关键字参数可以用任何顺序</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#我们可以定义一个可变参数函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">varargs</span><span class="params">(*args)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> args</span><br><span class="line">    varargs(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)    <span class="comment"># =&gt; (1, 2, 3)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 我们也可以定义一个关键字可变参数函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">keyword_args</span><span class="params">(**kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> kwargs</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 看看结果是什么</span></span><br><span class="line">    keyword_args(big=<span class="string">"foot"</span>, loch=<span class="string">"ness"</span>)   <span class="comment"># =&gt; &#123;"big": "foot", "loch": "ness"&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 这两种可变参数可以混着用</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">all_the</span> <span class="title">args</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        print(args)</span><br><span class="line">        print(kwargs)</span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    all_the_args(1, 2, a=3, b=4) prints:</span></span><br><span class="line"><span class="string">        (1, 2)</span></span><br><span class="line"><span class="string">        &#123;"a": 3, "b": 4&#125;</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 调用可变参数函数时可以做跟上面相反的，用*展开序列，用**展开字典。</span></span><br><span class="line">    args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">    kwargs = &#123;<span class="string">"a"</span>: <span class="number">3</span>, <span class="string">"b"</span>: <span class="number">4</span>&#125;</span><br><span class="line">    all_the_args(*args)   <span class="comment"># 相当于 foo(1, 2, 3, 4)</span></span><br><span class="line">    all_the_args(**kwargs)   <span class="comment"># 相当于 foo(a=3, b=4)</span></span><br><span class="line">    all_the_args(*args, **kwargs)   <span class="comment"># 相当于 foo(1, 2, 3, 4, a=3, b=4)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 函数作用域</span></span><br><span class="line">    x = <span class="number">5</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setX</span><span class="params">(num)</span>:</span></span><br><span class="line">        <span class="comment"># 局部作用域的x和全局作用域的x是不同的</span></span><br><span class="line">        x = num <span class="comment"># =&gt; 43</span></span><br><span class="line">        <span class="keyword">print</span> (x) <span class="comment"># =&gt; 43</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setGlobalX</span><span class="params">(num)</span>:</span></span><br><span class="line">        <span class="keyword">global</span> x</span><br><span class="line">        <span class="keyword">print</span> (x) <span class="comment"># =&gt; 5</span></span><br><span class="line">        x = num <span class="comment">#现在全局作用域的x被赋值</span></span><br><span class="line">        <span class="keyword">print</span> (x) <span class="comment"># =&gt; 6</span></span><br><span class="line">    setX(<span class="number">43</span>)</span><br><span class="line">    setGlobalX(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 函数在Python是一等公民</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_adder</span><span class="params">(x)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">adder</span><span class="params">(y)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> x + y</span><br><span class="line">        <span class="keyword">return</span> adder</span><br><span class="line">    add_10 = create_adder(<span class="number">10</span>)</span><br><span class="line">    add_10(<span class="number">3</span>)  <span class="comment"># =&gt; 13</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 也有匿名函数</span></span><br><span class="line">    (<span class="keyword">lambda</span> x: x &gt; <span class="number">2</span>)(<span class="number">3</span>)    <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 内置的高阶函数</span></span><br><span class="line">    map(add_10, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])  <span class="comment"># =&gt; [11, 12, 13]</span></span><br><span class="line">    filter(<span class="keyword">lambda</span> x: x &gt; <span class="number">5</span>, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])    <span class="comment"># =&gt; [6, 7]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#用列表推导式可以简化映射和过滤。列表推导式的返回值是另一个列表。</span></span><br><span class="line">    [add_10(i) <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]  <span class="comment"># =&gt; [11, 12, 13]</span></span><br><span class="line">    [x <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>] <span class="keyword">if</span> x &gt; <span class="number">5</span>]   <span class="comment"># =&gt; [6, 7]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment">## 5. 类</span></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment"># 定义一个继承object的类</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Human</span><span class="params">(object)</span>:</span></span><br><span class="line">        <span class="comment"># 类属性，被所有此类的实例共用。</span></span><br><span class="line">        species = <span class="string">"H. sapiens"</span></span><br><span class="line">        <span class="comment"># 构造方法，当实例被初始化时调用。注意名字前后的双下划线，这是表名这个属</span></span><br><span class="line">        <span class="comment"># 性或方法对Python有特殊意义，但是允许用户自定义。自己取名时不应该用这种格式</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">            <span class="comment"># Assign the argument to the instance's name attribute</span></span><br><span class="line">            self.name = name</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 实例方法，第一个参数总是self，就是这个实例对象</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">say</span><span class="params">(self, msg)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">"&#123;name&#125;: &#123;message&#125;"</span>.format(name=self.name, message=msg)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 类方法，被所有此类的实例共用。第一个参数是这个类对象。</span></span><br><span class="line"><span class="meta">        @classmethod</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">get_species</span><span class="params">(cls)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> cls.species</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 静态方法。调用时没有实例或类的绑定。</span></span><br><span class="line"><span class="meta">        @staticmethod</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">grunt</span><span class="params">()</span>:</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">"*grunt*"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 构造一个实例</span></span><br><span class="line">    i = Human(name=<span class="string">"Ian"</span>)</span><br><span class="line">    print(i.say(<span class="string">"hi"</span>))     <span class="comment"># 打印出 "Ian: hi"</span></span><br><span class="line">    j = Human(<span class="string">"Joel"</span>)</span><br><span class="line">    print(j.say(<span class="string">"hello"</span>))  <span class="comment"># 印出 "Joel: hello"</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 调用一个类方法</span></span><br><span class="line">    i.get_species()   <span class="comment"># =&gt; "H. sapiens"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 改一个共用的类属性</span></span><br><span class="line">    Human.species = <span class="string">"H. neanderthalensis"</span></span><br><span class="line">    i.get_species()   <span class="comment"># =&gt; "H. neanderthalensis"</span></span><br><span class="line">    j.get_species()   <span class="comment"># =&gt; "H. neanderthalensis"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 调用静态方法</span></span><br><span class="line">    Human.grunt()   <span class="comment"># =&gt; "*grunt*"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment">## 6. 模块</span></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment"># 用import导入模块</span></span><br><span class="line">    <span class="keyword">import</span> math</span><br><span class="line">    print(math.sqrt(<span class="number">16</span>))  <span class="comment"># =&gt; 4.0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 也可以从模块中导入个别值</span></span><br><span class="line">    <span class="keyword">from</span> math <span class="keyword">import</span> ceil,floor</span><br><span class="line">    print(ceil(<span class="number">3.7</span>))  <span class="comment"># =&gt; 4.0</span></span><br><span class="line">    print(floor(<span class="number">3.7</span>))   <span class="comment"># =&gt; 3.0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可以导入一个模块中所有值</span></span><br><span class="line">    <span class="comment"># 警告：不建议这么做</span></span><br><span class="line">    <span class="keyword">from</span> math <span class="keyword">import</span> *</span><br><span class="line">    <span class="comment"># 如此缩写模块名字</span></span><br><span class="line">    <span class="keyword">import</span> math <span class="keyword">as</span> m</span><br><span class="line">    math.sqrt(<span class="number">16</span>) == m.sqrt(<span class="number">16</span>)   <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Python模块其实就是普通的Python文件。</span></span><br><span class="line">    <span class="comment"># 你可以自己写，然后导入，模块的名字就是文件的名字。</span></span><br><span class="line">    <span class="comment"># 你可以这样列出一个模块里所有的值</span></span><br><span class="line">    <span class="keyword">import</span> math</span><br><span class="line">    dir(math)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment">## 7. 高级用法</span></span><br><span class="line">    <span class="comment">####################################################</span></span><br><span class="line">    <span class="comment"># 用生成器(generators)方便的写惰性计算</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">double_numbers</span><span class="params">(iterable)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> iterable:</span><br><span class="line">            <span class="keyword">yield</span> i + i</span><br><span class="line">            </span><br><span class="line">    <span class="comment"># 生成器只有在需要时才计算下一个值。它们每一次循环只生成一个值，而不是把所有的</span></span><br><span class="line">    <span class="comment"># 值全部计算好。这意味着double_numbers不会生成大于15的数字。</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># range的返回值也是一个生成器，不然一个1到900000000的列表会花很多时间和内存。</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 如果你想用一个Python的关键字当作变量，可以加一个下划线来区分。</span></span><br><span class="line">    range_ = range(<span class="number">1</span>, <span class="number">900000000</span>)</span><br><span class="line">    <span class="comment"># 当找到一个 &gt;= 30 的结果就会停</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> double_numbers(range_):</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">if</span> i &gt;= <span class="number">30</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 装饰器(decorators)</span></span><br><span class="line">    <span class="comment"># 这个例子中，beg装饰say</span></span><br><span class="line">    <span class="comment"># beg会先调用say。如果返回的say_please为真，beg会改变返回的字符串。</span></span><br><span class="line">    <span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">beg</span><span class="params">(target_function)</span>:</span></span><br><span class="line"><span class="meta">        @wraps(target_function)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">            msg, say_please = target_function(*args, **kwargs)</span><br><span class="line">            <span class="keyword">if</span> say_please:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"&#123;&#125; &#123;&#125;"</span>.format(msg, <span class="string">"Please! I am poor :("</span>)</span><br><span class="line">            <span class="keyword">return</span> msg</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line"><span class="meta">    @beg</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">say</span><span class="params">(say_please=False)</span>:</span></span><br><span class="line">        msg = <span class="string">"Can you buy me a beer?"</span></span><br><span class="line">        <span class="keyword">return</span> msg, say_please</span><br><span class="line">    print(say())  <span class="comment"># Can you buy me a beer?</span></span><br><span class="line">    print(say(say_please=<span class="keyword">True</span>))  <span class="comment"># Can you buy me a beer? Please! I am poor :(</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python是由吉多·范罗苏姆(Guido Van Rossum)在90年代早期设计。它是如今最常用的编程 语言之一。它的语法简洁且优美，几乎就是可执行的伪代码。&lt;/p&gt;
&lt;p&gt;注意：这篇教程是用Python3写的。&lt;/p&gt;
&lt;p&gt;下面一起来学习吧！
    
    </summary>
    
    
      <category term="Python" scheme="http://Lee981265.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>初识Linux</title>
    <link href="http://Lee981265.github.io/2018/07/12/%E5%88%9D%E8%AF%86Linux/"/>
    <id>http://Lee981265.github.io/2018/07/12/初识Linux/</id>
    <published>2018-07-12T08:27:26.000Z</published>
    <updated>2018-10-29T03:16:29.823Z</updated>
    
    <content type="html"><![CDATA[<p>初步认识Linux,我们一起来预览一下命令吧！<a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    $ date  显示系统当前时间和日期</span><br><span class="line"></span><br><span class="line">    $ cal 显示当前月份的日历</span><br><span class="line"></span><br><span class="line">    $ df  查看磁盘剩余空间的数量</span><br><span class="line"></span><br><span class="line">    $ free  显示空闲内存的数量</span><br><span class="line"></span><br><span class="line">    $ exit  结束终端会话</span><br><span class="line"></span><br><span class="line">    &lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line">    $ pwd 打印出当前工作目录名</span><br><span class="line"></span><br><span class="line">    $ cd  更改目录</span><br><span class="line"></span><br><span class="line">    $ ls  列出目录内容</span><br><span class="line"></span><br><span class="line">    $ file  确定文件类型</span><br><span class="line"></span><br><span class="line">    $ less  浏览文件内容</span><br><span class="line"></span><br><span class="line">    $ cp  复制文件和目录</span><br><span class="line"></span><br><span class="line">    $ mv  移动/重命名文件和目录</span><br><span class="line"></span><br><span class="line">    $ mkdir 创建目录</span><br><span class="line"></span><br><span class="line">    $ rm  删除文件和目录</span><br><span class="line"></span><br><span class="line">    $ ln  创建硬链接和符号链接</span><br><span class="line"></span><br><span class="line">    $ type  说明怎样解释一个命令名</span><br><span class="line"></span><br><span class="line">    $ which 显示会执行哪个可执行程序</span><br><span class="line"></span><br><span class="line">    $ man 显示命令手册页</span><br><span class="line"></span><br><span class="line">    $ apropos 显示一系列适合的命令</span><br><span class="line"></span><br><span class="line">    $ info  显示命令 info</span><br><span class="line"></span><br><span class="line">    $ whatis  显示一个命令的简洁描述</span><br><span class="line"></span><br><span class="line">    $ alias 创建命令别名</span><br><span class="line">    </span><br><span class="line">    $ unalias 删除命令别名</span><br><span class="line"></span><br><span class="line">    $ cat 连接文件</span><br><span class="line"></span><br><span class="line">    $ sort  排序文本行</span><br><span class="line"></span><br><span class="line">    $ uniq  报道或省略重复行</span><br><span class="line"></span><br><span class="line">    $ grep  打印匹配行</span><br><span class="line"></span><br><span class="line">    $ wc  打印文件中换行符，字，和字节个数</span><br><span class="line"></span><br><span class="line">    $ head  输出文件第一部分</span><br><span class="line"></span><br><span class="line">    $ tail  输出文件最后一部分</span><br><span class="line"></span><br><span class="line">    $ echo  显示一行文本</span><br><span class="line"></span><br><span class="line">    $ clear 清空屏幕</span><br><span class="line"></span><br><span class="line">    $ history 显示历史列表内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;初步认识Linux,我们一起来预览一下命令吧！
    
    </summary>
    
    
      <category term="Linux" scheme="http://Lee981265.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>DOM</title>
    <link href="http://Lee981265.github.io/2018/07/11/DOM/"/>
    <id>http://Lee981265.github.io/2018/07/11/DOM/</id>
    <published>2018-07-11T06:43:11.000Z</published>
    <updated>2018-10-29T03:15:25.576Z</updated>
    
    <content type="html"><![CDATA[<p>DOM: Document Object Model（文档对象模型）,DOM 是 W3C（万维网联盟）的标准。“W3C 文档对象模型 （DOM） 是中立于平台和语言的接口，它允许程序和脚本动态地访问和更新文档的内容、结构和样式。”<br>W3C DOM 标准被分为 3 个不同的部分：</p><ul><li>核心 DOM - 针对任何结构化文档的标准模型</li><li>XML DOM - 针对 XML 文档的标准模型</li><li>HTML DOM - 针对 HTML 文档的标准模型<a id="more"></a></li></ul><h2 id="DOM节点"><a href="#DOM节点" class="headerlink" title="DOM节点"></a>DOM节点</h2><p>根据 W3C 的 HTML DOM 标准，HTML 文档中的所有内容都是节点：</p><ul><li>整个文档是一个文档节点</li><li>每个 HTML 元素是元素节点</li><li>HTML 元素内的文本是文本节点</li><li>每个 HTML 属性是属性节点</li><li>注释是注释节点</li></ul><h2 id="HTML-DOM-节点树（DOM树）"><a href="#HTML-DOM-节点树（DOM树）" class="headerlink" title="HTML DOM 节点树（DOM树）"></a>HTML DOM 节点树（DOM树）</h2><p>HTML DOM 将 HTML 文档视作树结构。这种结构被称为节点树：</p><p><img src="/img/DOMTREE.gif" alt="DOM Tree 事例"></p><p>通过 HTML DOM，树中的所有节点均可通过 JavaScript 进行访问。所有 HTML 元素（节点）均可被修改，也可以创建或删除节点。</p><h2 id="HTML-DOM-对象-方法和属性"><a href="#HTML-DOM-对象-方法和属性" class="headerlink" title="HTML DOM 对象 - 方法和属性"></a>HTML DOM 对象 - 方法和属性</h2><h3 id="获取页面元素"><a href="#获取页面元素" class="headerlink" title="获取页面元素"></a>获取页面元素</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* document.getElementById(&apos;list&apos;)  ---- 返回DOM节点 速度最快</span><br><span class="line">* document.getElementsByTagName(&apos;div)  ---- 返回类数组</span><br><span class="line">* document.getElementsByClassName(&apos;list&apos;) ---- 返回类数组 ie8 有兼容性问题</span><br><span class="line">* document.getElementsByName()   --- 返回类数组 如：获取表单name属性</span><br><span class="line">* ducument.body ---- 获取body</span><br><span class="line">* 通过id 获取不到返回null，其他几项返回 [].</span><br></pre></td></tr></table></figure><h3 id="DOM对象方法预览"><a href="#DOM对象方法预览" class="headerlink" title="DOM对象方法预览"></a>DOM对象方法预览</h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>getElementById()</td><td>返回带有指定 ID 的元素。</td></tr><tr><td>getElementsByTagName()</td><td>返回包含带有指定标签名称的所有元素的节点列表（集合/节点数组）。</td></tr><tr><td>getElementsByClassName()</td><td>返回包含带有指定类名的所有元素的节点列表。</td></tr><tr><td>appendChild()</td><td>把新的子节点添加到指定节点。</td></tr><tr><td>removeChild()</td><td>删除子节点。</td></tr><tr><td>replaceChild()</td><td>替换子节点</td></tr><tr><td>insertBefore()</td><td>在指定的子节点前面插入新的子节点。</td></tr><tr><td>createAttribute()</td><td>创建属性节点。</td></tr><tr><td>createElement()</td><td>创建元素节点。</td></tr><tr><td>createTextNode()</td><td>创建文本节点。</td></tr><tr><td>getAttribute()</td><td>返回指定的属性值。</td></tr><tr><td>setAttribute()</td><td>把指定属性设置或修改为指定的值</td></tr></tbody></table><h3 id="节点的类型"><a href="#节点的类型" class="headerlink" title="节点的类型"></a>节点的类型</h3><p>nodetype 节点的属性</p><table><thead><tr><th>节点类型</th><th>nodetype</th></tr></thead><tbody><tr><td>元素节点</td><td>1</td></tr><tr><td>文本节点</td><td>3</td></tr><tr><td>属性节点</td><td>2</td></tr><tr><td>注释节点</td><td>8</td></tr><tr><td>文档节点</td><td>9</td></tr></tbody></table><h3 id="节点的属性"><a href="#节点的属性" class="headerlink" title="节点的属性"></a>节点的属性</h3><ul><li>nodetype 取值：1,2,3</li><li>nodeName 取值元素的标签名 如DIV。 文本：#text</li><li>nodeValue 获取节点的值<ol><li>文本</li><li>属性 </li></ol></li></ul><h3 id="DOM节点的增删查改"><a href="#DOM节点的增删查改" class="headerlink" title="DOM节点的增删查改"></a>DOM节点的增删查改</h3><ul><li>创建元素节点</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br></pre></td></tr></table></figure><ul><li>创建文本节点</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.creatTextNode(<span class="string">'你好'</span>);</span><br></pre></td></tr></table></figure><ul><li>插入节点</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> parent=<span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>); <span class="comment">//父元素 </span></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> parent.appendChild()  <span class="comment">//往后面加</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> parent.insertBefoer(<span class="keyword">new</span>,node); <span class="comment">//通过父级在node节点前面添加新的节点</span></span><br></pre></td></tr></table></figure><p><strong><em>ps:已经存在页面上的元素，如果使用appendchild,insertBefore操作则会移动这个元素</em></strong></p><ul><li>复制节点</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ele.cloneNode(boolean);</span><br><span class="line">ele.cloneNode(boolean,<span class="literal">true</span>); <span class="comment">// true为深复制</span></span><br></pre></td></tr></table></figure><ul><li>删除节点 </li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parent.removeChild(ele);</span><br></pre></td></tr></table></figure><ul><li>判断是否存在节点</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parent.hasChildNode() <span class="comment">//返回布尔值</span></span><br></pre></td></tr></table></figure><p><strong><em>ps:</em></strong><br><strong><em>1.标准浏览器中：换行会解析为一个文本节点（即解析空格）。</em></strong><br><strong><em>2.在ie8中会忽略上述问题</em></strong></p><h2 id="节点关系和元素关系"><a href="#节点关系和元素关系" class="headerlink" title="节点关系和元素关系"></a>节点关系和元素关系</h2><table><thead><tr><th>关系</th><th>节点关系</th><th>元素关系(存在兼容性问题 children无兼容性问题)</th></tr></thead><tbody><tr><td>父级</td><td>parentNode</td><td>parentElement</td></tr><tr><td>子级</td><td>childNode</td><td>children</td></tr><tr><td>第一个子级</td><td>firstChild</td><td>firstElementChild</td></tr><tr><td>最后个子级</td><td>lastChild</td><td>lastElementChild</td></tr><tr><td>前一个兄弟</td><td>previousSibling</td><td>previousElementSibling</td></tr><tr><td>后一个兄弟</td><td>nextSibling</td><td>nextElementSibling</td></tr></tbody></table><table><thead><tr><th>文本</th><th>–</th></tr></thead><tbody><tr><td>文本</td><td>ele.innerHTML(含标签)</td></tr><tr><td>文本</td><td>ele.innerText(单纯文字)</td></tr><tr><td>文本</td><td>ele.outerHTML</td></tr><tr><td>文本</td><td>ele.outerText</td></tr></tbody></table><h2 id="属性节点"><a href="#属性节点" class="headerlink" title="属性节点"></a>属性节点</h2><p><strong><em>注意：只有html的标准属性才能直接获取</em></strong><br>例如：id ,className,title等</p><ul><li>设置非标准属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setAttribute(attr,val)</span><br></pre></td></tr></table></figure><ul><li>获取非标准属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ele.getAttribute(<span class="string">'name'</span>);</span><br></pre></td></tr></table></figure><ul><li>判断是否存在某费标准属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ele.hasAttribute(attr) <span class="comment">//返回布尔值</span></span><br></pre></td></tr></table></figure><ul><li>删除属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ele.removeAttribute(attr)</span><br></pre></td></tr></table></figure><h2 id="CSS-style属性"><a href="#CSS-style属性" class="headerlink" title="CSS:style属性"></a>CSS:style属性</h2><p><strong><em>ps:ele.style设置或改变的是内联样式</em></strong></p><ul><li>获取非内联样式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getComputedStyle(ele); <span class="comment">//计算过后</span></span><br><span class="line">getComputedStyle(ele).fontSize;</span><br><span class="line">getComputedStyle(ele).[font-size];<span class="comment">//[attr]</span></span><br></pre></td></tr></table></figure><ul><li>获取伪元素样式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getCompuyedStyle(ele,<span class="string">"::before"</span>).color;</span><br><span class="line">getCompuyedStyle(ele,<span class="string">"::before"</span>).fontSize;</span><br><span class="line">getCompuyedStyle(ele,<span class="string">"::before"</span>).[font-size];<span class="comment">//兼容ie8-</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DOM: Document Object Model（文档对象模型）,DOM 是 W3C（万维网联盟）的标准。“W3C 文档对象模型 （DOM） 是中立于平台和语言的接口，它允许程序和脚本动态地访问和更新文档的内容、结构和样式。”&lt;br&gt;W3C DOM 标准被分为 3 个不同的部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心 DOM - 针对任何结构化文档的标准模型&lt;/li&gt;
&lt;li&gt;XML DOM - 针对 XML 文档的标准模型&lt;/li&gt;
&lt;li&gt;HTML DOM - 针对 HTML 文档的标准模型
    
    </summary>
    
    
      <category term="Javascript" scheme="http://Lee981265.github.io/tags/Javascript/"/>
    
      <category term="DOM" scheme="http://Lee981265.github.io/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用</title>
    <link href="http://Lee981265.github.io/2018/07/05/Hexo%E4%BD%BF%E7%94%A8/"/>
    <id>http://Lee981265.github.io/2018/07/05/Hexo使用/</id>
    <published>2018-07-05T07:31:47.000Z</published>
    <updated>2018-10-29T03:15:49.279Z</updated>
    
    <content type="html"><![CDATA[<p>经过一段时间的折腾终于用 Hexo + GitHub 搭建起了一个个人博客站点，第一时间边学边写，弄出了这第一篇博客，心里甚是欢喜。<a id="more"></a></p><p>Hexo是一款“快速、简洁且高效的博客框架”，支持 Markdown 的所有功能。所以，写出一篇博客必须学习 Hexo 和 Markdown 的使用规则。</p><h2 id="配置文件命名规则和路由地址"><a href="#配置文件命名规则和路由地址" class="headerlink" title="配置文件命名规则和路由地址"></a>配置文件命名规则和路由地址</h2><p>Hexo 默认以标题作为文件名称，可以通过 Hexo 的配置文件 _config.yml 中的 new_post_name 参数来改变默认的文件名称，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure><p>当创建博客时，就会以这种格式生成Markdown文件，如这篇博客的文件名就生成 2017-01-13-hexo-blog.md 这种形式。其中相关变量说明如下表：</p><table><thead><tr><th style="text-align:center">变量</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">:title</td><td style="text-align:center">标题（小写，空格将会被替换为短杠）</td></tr><tr><td style="text-align:center">:year</td><td style="text-align:center">创建的年份，如：2017</td></tr><tr><td style="text-align:center">:month</td><td style="text-align:center">创建的月份（有前导零），如：01</td></tr><tr><td style="text-align:center">:i_month</td><td style="text-align:center">创建的月份（无前导零），如：1</td></tr><tr><td style="text-align:center">:day</td><td style="text-align:center">创建的日期（有前导零），如：09</td></tr><tr><td style="text-align:center">:i_day</td><td style="text-align:center">创建的月份（无前导零），如：9</td></tr></tbody></table><p>配置浏览器地址栏中的URL。同样在 Hexo 的配置文件 _config.yml 中, 配置 permalink 属性 ，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: /blog/:year/:month/:day/:title/</span><br></pre></td></tr></table></figure><p>当在地址栏访问时，就会如下方式呈现出来：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000/blog/2017/01/13/hexo-blog/</span><br></pre></td></tr></table></figure></p><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><p>在写博客时,一定注意不要写这些字符,如果要写,就进行转义<br>有些人可能说可以使用反斜杠 \ 来处理,我这里不建议,因为我使用的时候没有解决问题。<br>下面是比较常见的几个:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">! &amp;#33; — 惊叹号Exclamation mark</span><br><span class="line"></span><br><span class="line">” &amp;#34; &amp;quot; 双引号Quotation mark</span><br><span class="line"></span><br><span class="line"># &amp;#35; — 数字标志Number sign</span><br><span class="line"></span><br><span class="line">$ &amp;#36; — 美元标志Dollar sign</span><br><span class="line"></span><br><span class="line">% &amp;#37; — 百分号Percent sign</span><br><span class="line"></span><br><span class="line">&amp; &amp;#38; &amp;amp; Ampersand</span><br><span class="line"></span><br><span class="line">‘ &amp;#39; — 单引号Apostrophe</span><br><span class="line"></span><br><span class="line">( &amp;#40; — 小括号左边部分Left parenthesis</span><br><span class="line"></span><br><span class="line">) &amp;#41; — 小括号右边部分Right parenthesis</span><br><span class="line"></span><br><span class="line">* &amp;#42; — 星号Asterisk</span><br><span class="line"></span><br><span class="line">+ &amp;#43; — 加号Plus sign</span><br><span class="line"></span><br><span class="line">&lt; &amp;#60; &amp;lt; 小于号Less than</span><br><span class="line"></span><br><span class="line">= &amp;#61; — 等于符号Equals sign</span><br><span class="line"></span><br><span class="line">&gt; &amp;#62; &amp;gt; 大于号Greater than</span><br><span class="line"></span><br><span class="line">? &amp;#63; — 问号Question mark</span><br><span class="line"></span><br><span class="line">@ &amp;#64; — Commercial at</span><br><span class="line"></span><br><span class="line">[ &amp;#91; --- 中括号左边部分Left square bracket</span><br><span class="line"></span><br><span class="line">\ &amp;#92; --- 反斜杠Reverse solidus (backslash)</span><br><span class="line"></span><br><span class="line">] &amp;#93; — 中括号右边部分Right square bracket</span><br><span class="line"></span><br><span class="line">&#123; &amp;#123; — 大括号左边部分Left curly brace</span><br><span class="line"></span><br><span class="line">| &amp;#124; — 竖线Vertical bar</span><br><span class="line"></span><br><span class="line">&#125; &amp;#125; — 大括号右边部分Right curly brace</span><br></pre></td></tr></table></figure></p><p><strong><em>特别注意的是小括号 ( ) 大括号 { } ,如果不小心写了,你执行hexo s –debug可能报一些莫名其妙的错误!</em></strong></p><h2 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h2><p>在命令行中用如下命令创建一篇新的文章<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>布局（layout）</th><th style="text-align:center">存储路径</th><th style="text-align:right">说明</th></tr></thead><tbody><tr><td>post</td><td style="text-align:center">source/_posts</td><td style="text-align:right">默认，可以直接发布</td></tr><tr><td>page</td><td style="text-align:center">source</td><td style="text-align:right">在source下新建一个文件夹</td></tr><tr><td>draft</td><td style="text-align:center">source/_drafts</td><td style="text-align:right">新建文件将保持到_drafts中</td></tr></tbody></table><p>可以用 publish 命令将草稿移动到 source/_posts 文件夹下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure></p><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><p>经过上面上面一系列的准备工作，现在差不多就可以安心的写作了。打开 source/_posts 文件夹下刚创建的 Markdown 文件，你会发现有如下内容：<br><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo-blog</span><br><span class="line">date: 2017-01-13 16:07:32</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>注意，这里的 title 是可以随便改的，当然了 date 也是可以改，不过没有改的必要；这里要说一下 tags 这个属性，如果需要配置多个有两种方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: [tag1, tag2, tag3]</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">    - tag1</span><br><span class="line">    - tag2</span><br><span class="line">    - tag3</span><br></pre></td></tr></table></figure><p>Hexo 是支持 Markdown 的所有功能的，所以，下面去学习一下 Markdown 的语法规范</p><h3 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h3><p>写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*    _斜体文本_</span><br><span class="line">**粗体文本**    __粗体文本__</span><br><span class="line">***粗斜体文本***    ___粗斜体文本___</span><br></pre></td></tr></table></figure></p><p>效果：<br><em>斜体文本</em>    <em>斜体文本</em><br><strong>粗体文本</strong>    <strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong>    <strong><em>粗斜体文本</em></strong></p><h3 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h3><p>写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure></p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">行内形式：[我的博客](https://Lee981265.github.io/)</span><br><span class="line">参考形式：[我的博客][1]，有一个很好的平台-[简书][2].</span><br><span class="line">这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].</span><br><span class="line">[yahoo]: http://www.yahoo.com/</span><br><span class="line">[1]:https://Lee981265.github.io/</span><br><span class="line">[2]:http://www.jianshu.com/</span><br><span class="line">自动链接：我的博客地址&lt;https://Lee981265.github.io/&gt;</span><br></pre></td></tr></table></figure></p><p>效果：<br>行内形式：我的博客<br>参考形式：[我的博客][1]，有一个很好的平台-[简书][2]<br>[1]:<a href="https://Lee981265.github.io/">https://Lee981265.github.io/</a><br>[2]:<a href="http://www.jianshu.com/" target="_blank" rel="noopener">http://www.jianshu.com/</a><br>自动链接：我的博客地址<a href="https://Lee981265.github.io/">https://Lee981265.github.io/</a></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表："><a href="#无序列表：" class="headerlink" title="无序列表："></a>无序列表：</h4><p>写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 无序列表项1</span><br><span class="line">+ 无序列表项2</span><br><span class="line">- 无序列表项3</span><br></pre></td></tr></table></figure></p><p>效果：</p><ul><li>无序列表项1</li></ul><ul><li>无序列表项2</li></ul><ul><li>无序列表项3</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表项1</span><br><span class="line">2. 有序列表项2</span><br><span class="line">3. 有序列表项3</span><br></pre></td></tr></table></figure></p><p>效果</p><ol><li>有序列表项1</li><li>有序列表项2</li><li>有序列表项3</li></ol><h4 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. 列出所有元素：</span><br><span class="line">    - 无序列表元素 A</span><br><span class="line">        1. 元素 A 的有序子列表</span><br><span class="line">    - 前面加四个空格</span><br><span class="line">2. 列表里的多段换行：</span><br><span class="line">    前面必须加四个空格，</span><br><span class="line">    这样换行，整体的格式不会乱</span><br><span class="line">3. 列表里引用：</span><br><span class="line"></span><br><span class="line">    &gt; 前面空一行</span><br><span class="line">    &gt; 仍然需要在 &gt;  前面加四个空格</span><br></pre></td></tr></table></figure><ol><li>列出所有元素：<ul><li>无序列表元素 A<ol><li>元素 A 的有序子列表</li></ol></li><li>前面加四个空格</li></ul></li><li>列表里的多段换行：<br> 前面必须加四个空格，<br> 这样换行，整体的格式不会乱</li><li><p>列表里引用：</p><blockquote><p>前面空一行<br>仍然需要在 &gt;  前面加四个空格</p></blockquote></li></ol><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><ol><li><p>普通引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 引用文本前使用 [大于号+空格]</span><br><span class="line">&gt; 折行可以不加，新起一行都要加上哦</span><br></pre></td></tr></table></figure></li><li><p>引用里嵌套引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 最外层引用</span><br><span class="line">&gt; &gt; 多一个 &gt; 嵌套一层引用</span><br><span class="line">&gt; &gt; &gt; 可以嵌套很多层</span><br></pre></td></tr></table></figure></li><li><p>引用里嵌套列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; - 这是引用里嵌套的一个列表</span><br><span class="line">&gt; - 还可以有子列表</span><br><span class="line">&gt;     * 子列表需要从 - 之后延后四个空格开始</span><br></pre></td></tr></table></figure></li></ol><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p>在 Hexo 中插入图片，首先需要将图片放在 source/img/ 文件夹下，然后如下方式进行插入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">![这是图片说明](/img/Leebolg.png)</span><br><span class="line"></span><br><span class="line">这个链接用 1 作为网址变量 [ Google] [ 1].</span><br><span class="line">然后在文档的结尾位变量赋值(网址)</span><br><span class="line"></span><br><span class="line">  [1]: http: //www.google.com/logo.png</span><br><span class="line">  也可以使用 HTML 的图片语法来自定义图片的宽高大小</span><br><span class="line">  &lt;img src=&quot;https://lee981265.github.io/img/Leebolg.png&quot; width=&quot;240&quot; height=&quot;275&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>效果图如下：<br><img src="/img/Leebolg.png" alt="这是图片说明"></p><p><img src="https://lee981265.github.io/img/Leebolg.png" alt="这是图片说明" width="240" height="275"></p><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p>如果另起一行，只需在当前行结尾加 2 个空格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在当前行的结尾加 2 个空格  </span><br><span class="line">这行就会新起一行</span><br><span class="line">如果是要起一个新段落，只需要空出一行即可。</span><br></pre></td></tr></table></figure></p><h3 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h3><p>如果你有写分割线的习惯，可以新起一行输入三个减号-。当前后都有段落时，请空出一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">前面的段落</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">后面的段落</span><br></pre></td></tr></table></figure></p><h3 id="小型文本"><a href="#小型文本" class="headerlink" title="小型文本"></a>小型文本</h3><p>Markdown语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;small&gt;文本内容&lt;/small&gt;</span><br></pre></td></tr></table></figure></p><p>预览效果：<br>我是正常文字<br><small>我是小型文字</small></p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>用html的注释，好像只有这样？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 注释 --&gt;</span><br></pre></td></tr></table></figure></p><!-- 注释 --><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 3 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      | centered      |   $12 |</span><br><span class="line">| zebra stripes | are neat      |    $1 |</span><br><span class="line"></span><br><span class="line">| 表头1|表头2|表头3|表头4</span><br><span class="line">|-| :- | :-: | -: |</span><br><span class="line">|默认左对齐|左对齐|居中对其|右对齐|</span><br><span class="line">|默认左对齐|左对齐|居中对其|右对齐|</span><br><span class="line">|默认左对齐|左对齐|居中对其|右对齐|</span><br><span class="line"></span><br><span class="line">| 参数           | 说明                 |   默认值            |</span><br><span class="line">| ------------- |:-------------------:|:------------------:|</span><br><span class="line">| host          | 远程主机的地址         |                    |</span><br><span class="line">| user          | 使用者名称            |                    |</span><br><span class="line">| root          |  远程主机的根目录      |                    |</span><br><span class="line">| port          | 端口                 |       22           |</span><br><span class="line">| delete        | 删除远程主机上的旧文件   |  true              |</span><br><span class="line">| verbose       | 显示调试信息           |   true             |</span><br><span class="line">| ignore_errors | 忽略错误              |     false          |</span><br></pre></td></tr></table></figure><p>效果：</p><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><table><thead><tr><th>表头1</th><th style="text-align:left">表头2</th><th style="text-align:center">表头3</th><th style="text-align:right">表头4</th></tr></thead><tbody><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr></tbody></table><table><thead><tr><th>参数</th><th style="text-align:center">说明</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td>host</td><td style="text-align:center">远程主机的地址</td><td style="text-align:center"></td></tr><tr><td>user</td><td style="text-align:center">使用者名称</td><td style="text-align:center"></td></tr><tr><td>root</td><td style="text-align:center">远程主机的根目录</td><td style="text-align:center"></td></tr><tr><td>port</td><td style="text-align:center">端口</td><td style="text-align:center">22</td></tr><tr><td>delete</td><td style="text-align:center">删除远程主机上的旧文件</td><td style="text-align:center">true</td></tr><tr><td>verbose</td><td style="text-align:center">显示调试信息</td><td style="text-align:center">true</td></tr><tr><td>ignore_errors</td><td style="text-align:center">忽略错误</td><td style="text-align:center">false</td></tr></tbody></table><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>记录了一下 Hexo 写博客的环境配置，了解创建博客的过程和一些相关的变量，然后学习一下 Markdown 的基本语法规范，下次有时间在将 Markdown 更深入的使用方法记录一下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经过一段时间的折腾终于用 Hexo + GitHub 搭建起了一个个人博客站点，第一时间边学边写，弄出了这第一篇博客，心里甚是欢喜。
    
    </summary>
    
    
      <category term="Hexo" scheme="http://Lee981265.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Git进阶</title>
    <link href="http://Lee981265.github.io/2018/07/05/Git%E8%BF%9B%E9%98%B6/"/>
    <id>http://Lee981265.github.io/2018/07/05/Git进阶/</id>
    <published>2018-07-05T03:56:25.000Z</published>
    <updated>2018-10-29T03:15:45.117Z</updated>
    
    <content type="html"><![CDATA[<p>Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。<a id="more"></a></p><h2 id="Git-与-SVN-区别"><a href="#Git-与-SVN-区别" class="headerlink" title="Git 与 SVN 区别"></a>Git 与 SVN 区别</h2><p>   GIT不仅仅是个版本控制系统，它也是个内容管理系统(CMS),工作管理系统等。如果你是一个具有使用SVN背景的人，你需要做一定的思想转换，来适应GIT提供的一些概念和特征。</p><h3 id="Git-与-SVN-区别点："><a href="#Git-与-SVN-区别点：" class="headerlink" title="Git 与 SVN 区别点："></a>Git 与 SVN 区别点：</h3><ul><li>1、GIT是分布式的，SVN不是：这是GIT和其它非分布式的版本控制系统，例如SVN，CVS等，最核心的区别。</li></ul><ul><li>2、GIT把内容按元数据方式存储，而SVN是按文件：所有的资源控制系统都是把文件的元信息隐藏在一个类似.svn,.cvs等的文件夹里。        </li></ul><ul><li>3、GIT分支和SVN的分支不同：分支在SVN中一点不特别，就是版本库中的另外的一个目录。</li></ul><ul><li>4、GIT没有一个全局的版本号，而SVN有：目前为止这是跟SVN相比GIT缺少的最大的一个特征。</li></ul><ul><li>5、GIT的内容完整性要优于SVN：GIT的内容存储使用的是SHA-1哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。      </li></ul><h2 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h2><h3 id="我们先来预览一下Git命令"><a href="#我们先来预览一下Git命令" class="headerlink" title="我们先来预览一下Git命令"></a>我们先来预览一下Git命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    mkdir：         XX (创建一个空目录 XX指目录名)</span><br><span class="line"></span><br><span class="line">    pwd：          显示当前目录的路径。</span><br><span class="line"></span><br><span class="line">    git init          把当前的目录变成可以管理的git仓库，生成隐藏.git文件。</span><br><span class="line"></span><br><span class="line">    git add XX       把xx文件添加到暂存区去。</span><br><span class="line"></span><br><span class="line">    git reset --mixed 把上次add文件撤销但修改保留。</span><br><span class="line"></span><br><span class="line">    git commit –m “XX”  提交文件 –m 后面的是注释。</span><br><span class="line"></span><br><span class="line">    git status        查看仓库状态</span><br><span class="line"></span><br><span class="line">    git diff  XX      查看XX文件修改了那些内容</span><br><span class="line"></span><br><span class="line">    git log          查看历史记录</span><br><span class="line"></span><br><span class="line">    git reset  –-hard HEAD^ 或者 git reset  –-hard HEAD~ 回退到上一个版本</span><br><span class="line"></span><br><span class="line">                            (如果想回退到100个版本，使用git reset –-hard HEAD~100 )</span><br><span class="line"></span><br><span class="line">    cat XX         查看XX文件内容</span><br><span class="line"></span><br><span class="line">    git reflog       查看历史记录的版本号id</span><br><span class="line"></span><br><span class="line">    git checkout — XX  把XX文件在工作区的修改全部撤销。</span><br><span class="line"></span><br><span class="line">    git rm XX          删除XX文件</span><br><span class="line"></span><br><span class="line">    git rm *         删除所有文件</span><br><span class="line"></span><br><span class="line">    git remote add origin https://github.com/tugenhua0707/testgit 关联一个远程库</span><br><span class="line"></span><br><span class="line">    git push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库</span><br><span class="line"></span><br><span class="line">    git clone https://github.com/tugenhua0707/testgit  从远程库中克隆</span><br><span class="line"></span><br><span class="line">    git checkout –b dev  创建dev分支 并切换到dev分支上</span><br><span class="line"></span><br><span class="line">    git branch  查看当前所有的分支</span><br><span class="line"></span><br><span class="line">    git checkout master 切换回master分支</span><br><span class="line"></span><br><span class="line">    git merge dev    在当前的分支上合并dev分支</span><br><span class="line"></span><br><span class="line">    git branch –d dev 删除dev分支</span><br><span class="line"></span><br><span class="line">    git branch name  创建分支</span><br><span class="line"></span><br><span class="line">    git stash 把当前的工作隐藏起来 等以后恢复现场后继续工作</span><br><span class="line"></span><br><span class="line">    git stash list 查看所有被隐藏的文件列表</span><br><span class="line"></span><br><span class="line">    git stash apply 恢复被隐藏的文件，但是内容不删除</span><br><span class="line"></span><br><span class="line">    git stash drop 删除文件</span><br><span class="line"></span><br><span class="line">    git stash pop 恢复文件的同时 也删除文件</span><br><span class="line"></span><br><span class="line">    git remote 查看远程库的信息</span><br><span class="line"></span><br><span class="line">    git remote –v 查看远程库的详细信息</span><br><span class="line"></span><br><span class="line">    git push origin master  Git会把master分支推送到远程库对应的远程分支上</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Git深度理解"><a href="#Git深度理解" class="headerlink" title="Git深度理解"></a>Git深度理解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    1.git进入vim界面 输入Ctrl+Z 即可退出 ////////Esc Shift+:</span><br><span class="line"></span><br><span class="line">    2.查看git所有已配置项 $ git config --list</span><br><span class="line"></span><br><span class="line">    3.Git撤销commit的操作命令  git reset --hard HEAD^       git reset --hard commitID    git reset --hard HEAD@&#123;n&#125;</span><br><span class="line"></span><br><span class="line">    4.git 撤销初始化 删除 .git 文件即可 或者执行命令 rm -rf .git</span><br><span class="line"></span><br><span class="line">    5.git add . 出现以下报错</span><br><span class="line">        ---------- warning: LF will be replaced by CRLF in XXXXXXXXXXXXXX.</span><br><span class="line">        ---解决方案：执行命令git config core.autocrlf false</span><br><span class="line"></span><br><span class="line">    6. 查看git本机 用户名： $ git config --global user.name</span><br><span class="line">                    邮箱： $ git config --global user.email</span><br><span class="line">        更改本机配置 用户名： $ git config --global user.name &quot;Lee&quot;</span><br><span class="line">                    邮箱： $ git config --global user.email &quot;Jack2244057555@gmail.com&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line">&#123;   </span><br><span class="line">    一.Git命令解析</span><br><span class="line">    1、git基本命令</span><br><span class="line"></span><br><span class="line">    1）git add 将想要快照的内容写入缓存区</span><br><span class="line"></span><br><span class="line">    2）git status -s &quot;AM&quot; 状态的意思是，这个文件在我们将它添加到缓存之后又有改动</span><br><span class="line"></span><br><span class="line">    3）git commit -m &apos;第一次版本提交&apos; -m选项添加备注信息</span><br><span class="line"></span><br><span class="line">    4）git clone url 使用 git clone 拷贝一个 Git 仓库到本地</span><br><span class="line"></span><br><span class="line">    5）git diff 查看执行 git status 的结果的详细信息</span><br><span class="line">    　　尚未缓存的改动：git diff</span><br><span class="line">    　　查看已缓存的改动： git diff --cached</span><br><span class="line">    　　查看已缓存的与未缓存的所有改动：git diff HEAD</span><br><span class="line">    　　显示摘要而非整个 diff：git diff --stat</span><br><span class="line"></span><br><span class="line">    6）git commit -a 跳过git add 提交缓存的流程</span><br><span class="line"></span><br><span class="line">    7）git reset HEAD 用于取消已缓存的内容</span><br><span class="line"></span><br><span class="line">    8）git rm file</span><br><span class="line">    　　git rm 会将条目从缓存区中移除。这与 git reset HEAD 将条目取消缓存是有区别的。</span><br><span class="line">    　　&quot;取消缓存&quot;的意思就是将缓存区恢复为我们做出修改之前的样子。</span><br><span class="line">    　　默认情况下，git rm file 会将文件从缓存区和你的硬盘中（工作目录）删除。</span><br><span class="line"></span><br><span class="line">    9）git mv 重命名磁盘上的文件 如 git mv README README.md</span><br><span class="line"></span><br><span class="line">    10）git push -u origin master 提交代码</span><br><span class="line"></span><br><span class="line">    2、git 分支管理</span><br><span class="line">    1）创建分支命令 git branch (branchname) 列出分支 git branch</span><br><span class="line">    2）切换分支命令 git checkout (branchname)</span><br><span class="line">    3）合并分支 git merge (branchname)</span><br><span class="line">    4）创建新分支并立即切换到该分支下 git checkout -b (branchname)</span><br><span class="line">    5）删除分支命令 git branch -d (branchname)</span><br><span class="line">    ps:状态 uu 表示冲突未解决 可以用 git add 要告诉 Git 文件冲突已经解决</span><br><span class="line"></span><br><span class="line">    3、查看日志版本</span><br><span class="line">    git log 命令列出历史提交记录</span><br><span class="line">    git log --oneline 查看历史记录的简洁的版本</span><br><span class="line">    git log --oneline --graph 查看历史中什么时候出现了分支、合并</span><br><span class="line"></span><br><span class="line">    4、标签</span><br><span class="line">    为软件发布创建标签是推荐的。这个概念早已存在，在 SVN 中也有。你可以执行如下命令创建一个叫做 1.0.0 的标签：</span><br><span class="line">    git tag 1.0.0 1b2e1d63ff</span><br><span class="line">    1b2e1d63ff 是你想要标记的提交 ID 的前 10 位字符。可以使用下列命令获取提交 ID：</span><br><span class="line">    git log</span><br><span class="line">    你也可以使用少一点的提交 ID 前几位，只要它的指向具有唯一性</span><br><span class="line"></span><br><span class="line">    5、提取远程仓库代码</span><br><span class="line"></span><br><span class="line">    1）git fetch　　从远程仓库下载新分支与数据</span><br><span class="line"></span><br><span class="line">    2)）git pull　　从远端仓库提取数据并尝试合并到当前分支</span><br><span class="line"></span><br><span class="line">    6、git分支</span><br><span class="line"></span><br><span class="line">    git-flow主要有5中分支：master、hotfix、release、develop、feature</span><br><span class="line"></span><br><span class="line">    feature分支开始于develop分支，完成以后合并到develop分支。</span><br><span class="line">    当完成一定数量feature分支以后，从develop再开一个release分支出来，这些特性将被更行到下一个发布的版本中，</span><br><span class="line">    之后的feature将不会被合并到release中。</span><br><span class="line">    之后在release分支中，只修改bug，然后完成release分支。完成release分支会完成以下三个操作：</span><br><span class="line">    1、合并release分支到master；</span><br><span class="line">    2、给master打上版本的标签</span><br><span class="line">    3、release回归到develop分支。</span><br><span class="line">    当发现master上有bug时，开一个hotfix，完成后合并到master分支。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    初次安装git配置用户名和邮箱</span><br><span class="line"></span><br><span class="line">    初次安装git需要配置用户名和邮箱，否则git会提示：please tell me who you are.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    你需要运行命令来配置你的用户名和邮箱：</span><br><span class="line"></span><br><span class="line">    $ git config --global user.name &quot;superGG1990&quot;</span><br><span class="line"></span><br><span class="line">    $ git config --global user.email &quot;superGG1990@163.com&quot;</span><br><span class="line"></span><br><span class="line">    注意：（引号内请输入你自己设置的名字，和你自己的邮箱）此用户名和邮箱是git提交代码时用来显示你身份和联系方式的，并不是github用户名和邮箱</span><br><span class="line">    git使用ssh密钥</span><br><span class="line"></span><br><span class="line">    git支持https和git两种传输协议，github分享链接时会有两种协议可选：</span><br><span class="line"></span><br><span class="line">    git协议链接图例 : ↓</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    https协议链接图例：↓</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    git使用https协议，每次pull, push都会提示要输入密码，使用git协议，然后使用ssh密钥，这样免去每次都输密码的麻烦</span><br><span class="line"></span><br><span class="line">    初次使用git的用户要使用git协议大概需要三个步骤：</span><br><span class="line">    一、生成密钥对</span><br><span class="line">    二、设置远程仓库（本文以github为例）上的公钥</span><br><span class="line">    三、把git的 remote url 修改为git协议（以上两个步骤初次设置过以后，以后使用都不需要再次设置，此步骤视以后项目的remote url而定，如果以后其他项目的协议为https则需要此步骤）</span><br><span class="line">    一、生成密钥对</span><br><span class="line">    大多数 Git 服务器都会选择使用 SSH 公钥来进行授权。系统中的每个用户都必须提供一个公钥用于授权，没有的话就要生成一个。生成公钥的过程在所有操作系统上都差不多。首先你要确认一下本机是否已经有一个公钥。</span><br><span class="line"></span><br><span class="line">    SSH 公钥默认储存在账户的主目录下的 ~/.ssh 目录。进去看看：</span><br><span class="line"></span><br><span class="line">    $ cd ~/.ssh</span><br><span class="line">    $ ls</span><br><span class="line">    authorized_keys2  id_dsa       known_hosts config            id_dsa.pub</span><br><span class="line">    看一下有没有id_rsa和id_rsa.pub(或者是id_dsa和id_dsa.pub之类成对的文件)，有 .pub 后缀的文件就是公钥，另一个文件则是密钥。</span><br><span class="line"></span><br><span class="line">    假如没有这些文件，甚至连 .ssh 目录都没有，可以用 ssh-keygen 来创建。该程序在 Linux/Mac 系统上由 SSH 包提供，而在 Windows 上则包含在 MSysGit 包里：</span><br><span class="line"></span><br><span class="line">    $ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</span><br><span class="line"></span><br><span class="line">    Creates a new ssh key using the provided email # Generating public/private rsa key pair.</span><br><span class="line"></span><br><span class="line">    Enter file in which to save the key (/home/you/.ssh/id_rsa):</span><br><span class="line">    直接按Enter就行。然后，会提示你输入密码，如下(建议输一个，安全一点，当然不输也行，应该不会有人闲的无聊冒充你去修改你的代码)：</span><br><span class="line"></span><br><span class="line">    Enter same passphrase again: [Type passphrase again]</span><br><span class="line">    完了之后，大概是这样：</span><br><span class="line"></span><br><span class="line">    Your public key has been saved in /home/you/.ssh/id_rsa.pub.</span><br><span class="line">    The key fingerprint is: # 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@youremail.com</span><br><span class="line">    到此为止，你本地的密钥对就生成了。</span><br><span class="line"></span><br><span class="line">    二、添加公钥到你的远程仓库（github）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    1、查看你生成的公钥：</span><br><span class="line"></span><br><span class="line">    $ cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line">    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0X6L1zLL4VHuvGb8aJH3ippTozmReSUzgntvk434aJ/v7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8vR3c8E7CjZN733f5AL8uEYJA+YZevY5UCvEg+umT7PHghKYaJwaCxV7sjYP7Z6V79OMCEAGDNXC26IBMdMgOluQjp6o6j2KAdtRBdCDS/QIU5THQDxJ9lBXjk1fiq9tITo/aXBvjZeD+gH/Apkh/0GbO8VQLiYYmNfqqAHHeXdltORn8N7C9lOa/UW3KM7QdXo6J0GFlBVQeTE/IGqhMS5PMln3 admin@admin-PC</span><br><span class="line">    2、登陆你的github帐户。点击你的头像，然后 Settings -&gt; 左栏点击 SSH and GPG keys -&gt; 点击 New SSH key</span><br><span class="line"></span><br><span class="line">    3、然后你复制上面的公钥内容，粘贴进“Key”文本域内。 title域，自己随便起个名字。</span><br><span class="line"></span><br><span class="line">    4、点击 Add key。</span><br><span class="line"></span><br><span class="line">    完成以后，验证下这个key是不是正常工作：</span><br><span class="line"></span><br><span class="line">    $ ssh -T git@github.com</span><br><span class="line"></span><br><span class="line">    Attempts to ssh to github</span><br><span class="line">    如果，看到：</span><br><span class="line"></span><br><span class="line">    Hi xxx! You&apos;ve successfully authenticated, but GitHub does not # provide shell access.</span><br><span class="line">    恭喜你，你的设置已经成功了。</span><br><span class="line"></span><br><span class="line">    三、修改git的remote url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    使用命令 git remote -v 查看你当前的 remote url</span><br><span class="line"></span><br><span class="line">    $ git remote -v</span><br><span class="line">    origin https://github.com/someaccount/someproject.git (fetch)</span><br><span class="line">    origin https://github.com/someaccount/someproject.git (push)</span><br><span class="line">    如果是以上的结果那么说明此项目是使用https协议进行访问的（如果地址是git开头则表示是git协议）</span><br><span class="line"></span><br><span class="line">    你可以登陆你的github，就像本文开头的图例，你在上面可以看到你的ssh协议相应的url，类似：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    复制此ssh链接，然后使用命令 git remote set-url 来调整你的url。</span><br><span class="line"></span><br><span class="line">    git remote set-url origin git@github.com:someaccount/someproject.git</span><br><span class="line"></span><br><span class="line">    然后你可以再用命令 git remote -v 查看一下，url是否已经变成了ssh地址。</span><br><span class="line"></span><br><span class="line">    然后你就可以愉快的使用git fetch, git pull , git push，再也不用输入烦人的密码了</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。
    
    </summary>
    
    
      <category term="Git" scheme="http://Lee981265.github.io/tags/Git/"/>
    
  </entry>
  
</feed>
