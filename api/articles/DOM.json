{"title":"DOM","slug":"DOM","date":"2018-07-11T06:43:11.000Z","updated":"2018-10-29T03:15:25.576Z","comments":true,"path":"api/articles/DOM.json","photos":[],"link":"","excerpt":"DOM: Document Object Model（文档对象模型）,DOM 是 W3C（万维网联盟）的标准。“W3C 文档对象模型 （DOM） 是中立于平台和语言的接口，它允许程序和脚本动态地访问和更新文档的内容、结构和样式。”<br>W3C DOM 标准被分为 3 个不同的部分：核心 DOM - 针对任何结构化文档的标准模型XML DOM - 针对 XML 文档的标准模型HTML DOM - 针对 HTML 文档的标准模型","covers":["/img/DOMTREE.gif"],"content":"<p>DOM: Document Object Model（文档对象模型）,DOM 是 W3C（万维网联盟）的标准。“W3C 文档对象模型 （DOM） 是中立于平台和语言的接口，它允许程序和脚本动态地访问和更新文档的内容、结构和样式。”<br>W3C DOM 标准被分为 3 个不同的部分：</p>\n<ul>\n<li>核心 DOM - 针对任何结构化文档的标准模型</li>\n<li>XML DOM - 针对 XML 文档的标准模型</li>\n<li>HTML DOM - 针对 HTML 文档的标准模型<a id=\"more\"></a></li>\n</ul>\n<h2 id=\"DOM节点\"><a href=\"#DOM节点\" class=\"headerlink\" title=\"DOM节点\"></a>DOM节点</h2><p>根据 W3C 的 HTML DOM 标准，HTML 文档中的所有内容都是节点：</p>\n<ul>\n<li>整个文档是一个文档节点</li>\n<li>每个 HTML 元素是元素节点</li>\n<li>HTML 元素内的文本是文本节点</li>\n<li>每个 HTML 属性是属性节点</li>\n<li>注释是注释节点</li>\n</ul>\n<h2 id=\"HTML-DOM-节点树（DOM树）\"><a href=\"#HTML-DOM-节点树（DOM树）\" class=\"headerlink\" title=\"HTML DOM 节点树（DOM树）\"></a>HTML DOM 节点树（DOM树）</h2><p>HTML DOM 将 HTML 文档视作树结构。这种结构被称为节点树：</p>\n<p><img src=\"/img/DOMTREE.gif\" alt=\"DOM Tree 事例\"></p>\n<p>通过 HTML DOM，树中的所有节点均可通过 JavaScript 进行访问。所有 HTML 元素（节点）均可被修改，也可以创建或删除节点。</p>\n<h2 id=\"HTML-DOM-对象-方法和属性\"><a href=\"#HTML-DOM-对象-方法和属性\" class=\"headerlink\" title=\"HTML DOM 对象 - 方法和属性\"></a>HTML DOM 对象 - 方法和属性</h2><h3 id=\"获取页面元素\"><a href=\"#获取页面元素\" class=\"headerlink\" title=\"获取页面元素\"></a>获取页面元素</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* document.getElementById(&apos;list&apos;)  ---- 返回DOM节点 速度最快</span><br><span class=\"line\">* document.getElementsByTagName(&apos;div)  ---- 返回类数组</span><br><span class=\"line\">* document.getElementsByClassName(&apos;list&apos;) ---- 返回类数组 ie8 有兼容性问题</span><br><span class=\"line\">* document.getElementsByName()   --- 返回类数组 如：获取表单name属性</span><br><span class=\"line\">* ducument.body ---- 获取body</span><br><span class=\"line\">* 通过id 获取不到返回null，其他几项返回 [].</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"DOM对象方法预览\"><a href=\"#DOM对象方法预览\" class=\"headerlink\" title=\"DOM对象方法预览\"></a>DOM对象方法预览</h3><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getElementById()</td>\n<td>返回带有指定 ID 的元素。</td>\n</tr>\n<tr>\n<td>getElementsByTagName()</td>\n<td>返回包含带有指定标签名称的所有元素的节点列表（集合/节点数组）。</td>\n</tr>\n<tr>\n<td>getElementsByClassName()</td>\n<td>返回包含带有指定类名的所有元素的节点列表。</td>\n</tr>\n<tr>\n<td>appendChild()</td>\n<td>把新的子节点添加到指定节点。</td>\n</tr>\n<tr>\n<td>removeChild()</td>\n<td>删除子节点。</td>\n</tr>\n<tr>\n<td>replaceChild()</td>\n<td>替换子节点</td>\n</tr>\n<tr>\n<td>insertBefore()</td>\n<td>在指定的子节点前面插入新的子节点。</td>\n</tr>\n<tr>\n<td>createAttribute()</td>\n<td>创建属性节点。</td>\n</tr>\n<tr>\n<td>createElement()</td>\n<td>创建元素节点。</td>\n</tr>\n<tr>\n<td>createTextNode()</td>\n<td>创建文本节点。</td>\n</tr>\n<tr>\n<td>getAttribute()</td>\n<td>返回指定的属性值。</td>\n</tr>\n<tr>\n<td>setAttribute()</td>\n<td>把指定属性设置或修改为指定的值</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"节点的类型\"><a href=\"#节点的类型\" class=\"headerlink\" title=\"节点的类型\"></a>节点的类型</h3><p>nodetype 节点的属性</p>\n<table>\n<thead>\n<tr>\n<th>节点类型</th>\n<th>nodetype</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>元素节点</td>\n<td>1</td>\n</tr>\n<tr>\n<td>文本节点</td>\n<td>3</td>\n</tr>\n<tr>\n<td>属性节点</td>\n<td>2</td>\n</tr>\n<tr>\n<td>注释节点</td>\n<td>8</td>\n</tr>\n<tr>\n<td>文档节点</td>\n<td>9</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"节点的属性\"><a href=\"#节点的属性\" class=\"headerlink\" title=\"节点的属性\"></a>节点的属性</h3><ul>\n<li>nodetype 取值：1,2,3</li>\n<li>nodeName 取值元素的标签名 如DIV。 文本：#text</li>\n<li>nodeValue 获取节点的值<ol>\n<li>文本</li>\n<li>属性 </li>\n</ol>\n</li>\n</ul>\n<h3 id=\"DOM节点的增删查改\"><a href=\"#DOM节点的增删查改\" class=\"headerlink\" title=\"DOM节点的增删查改\"></a>DOM节点的增删查改</h3><ul>\n<li>创建元素节点</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>);</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>创建文本节点</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.creatTextNode(<span class=\"string\">'你好'</span>);</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>插入节点</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> parent=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"div1\"</span>); <span class=\"comment\">//父元素 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1.</span> parent.appendChild()  <span class=\"comment\">//往后面加</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> parent.insertBefoer(<span class=\"keyword\">new</span>,node); <span class=\"comment\">//通过父级在node节点前面添加新的节点</span></span><br></pre></td></tr></table></figure></div>\n<p><strong><em>ps:已经存在页面上的元素，如果使用appendchild,insertBefore操作则会移动这个元素</em></strong></p>\n<ul>\n<li>复制节点</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ele.cloneNode(boolean);</span><br><span class=\"line\">ele.cloneNode(boolean,<span class=\"literal\">true</span>); <span class=\"comment\">// true为深复制</span></span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>删除节点 </li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parent.removeChild(ele);</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>判断是否存在节点</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parent.hasChildNode() <span class=\"comment\">//返回布尔值</span></span><br></pre></td></tr></table></figure></div>\n<p><strong><em>ps:</em></strong><br><strong><em>1.标准浏览器中：换行会解析为一个文本节点（即解析空格）。</em></strong><br><strong><em>2.在ie8中会忽略上述问题</em></strong></p>\n<h2 id=\"节点关系和元素关系\"><a href=\"#节点关系和元素关系\" class=\"headerlink\" title=\"节点关系和元素关系\"></a>节点关系和元素关系</h2><table>\n<thead>\n<tr>\n<th>关系</th>\n<th>节点关系</th>\n<th>元素关系(存在兼容性问题 children无兼容性问题)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>父级</td>\n<td>parentNode</td>\n<td>parentElement</td>\n</tr>\n<tr>\n<td>子级</td>\n<td>childNode</td>\n<td>children</td>\n</tr>\n<tr>\n<td>第一个子级</td>\n<td>firstChild</td>\n<td>firstElementChild</td>\n</tr>\n<tr>\n<td>最后个子级</td>\n<td>lastChild</td>\n<td>lastElementChild</td>\n</tr>\n<tr>\n<td>前一个兄弟</td>\n<td>previousSibling</td>\n<td>previousElementSibling</td>\n</tr>\n<tr>\n<td>后一个兄弟</td>\n<td>nextSibling</td>\n<td>nextElementSibling</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>文本</th>\n<th>–</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>文本</td>\n<td>ele.innerHTML(含标签)</td>\n</tr>\n<tr>\n<td>文本</td>\n<td>ele.innerText(单纯文字)</td>\n</tr>\n<tr>\n<td>文本</td>\n<td>ele.outerHTML</td>\n</tr>\n<tr>\n<td>文本</td>\n<td>ele.outerText</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"属性节点\"><a href=\"#属性节点\" class=\"headerlink\" title=\"属性节点\"></a>属性节点</h2><p><strong><em>注意：只有html的标准属性才能直接获取</em></strong><br>例如：id ,className,title等</p>\n<ul>\n<li>设置非标准属性</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setAttribute(attr,val)</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>获取非标准属性</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ele.getAttribute(<span class=\"string\">'name'</span>);</span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>判断是否存在某费标准属性</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ele.hasAttribute(attr) <span class=\"comment\">//返回布尔值</span></span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>删除属性</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ele.removeAttribute(attr)</span><br></pre></td></tr></table></figure></div>\n<h2 id=\"CSS-style属性\"><a href=\"#CSS-style属性\" class=\"headerlink\" title=\"CSS:style属性\"></a>CSS:style属性</h2><p><strong><em>ps:ele.style设置或改变的是内联样式</em></strong></p>\n<ul>\n<li>获取非内联样式</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getComputedStyle(ele); <span class=\"comment\">//计算过后</span></span><br><span class=\"line\">getComputedStyle(ele).fontSize;</span><br><span class=\"line\">getComputedStyle(ele).[font-size];<span class=\"comment\">//[attr]</span></span><br></pre></td></tr></table></figure></div>\n<ul>\n<li>获取伪元素样式</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getCompuyedStyle(ele,<span class=\"string\">\"::before\"</span>).color;</span><br><span class=\"line\">getCompuyedStyle(ele,<span class=\"string\">\"::before\"</span>).fontSize;</span><br><span class=\"line\">getCompuyedStyle(ele,<span class=\"string\">\"::before\"</span>).[font-size];<span class=\"comment\">//兼容ie8-</span></span><br></pre></td></tr></table></figure></div>\n","categories":[],"tags":[{"name":"Javascript","slug":"Javascript","count":1,"path":"api/tags/Javascript.json"},{"name":"DOM","slug":"DOM","count":1,"path":"api/tags/DOM.json"}]}